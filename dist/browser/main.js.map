{"version":3,"sources":["node_modules/@angular/animations/fesm2022/animations.mjs","node_modules/ngx-owl-carousel-o/fesm2022/ngx-owl-carousel-o.mjs","src/app/Components/Additions/BannerCarousel/banner-carousel/banner-carousel.component.ts","src/app/Components/Additions/BannerCarousel/banner-carousel/banner-carousel.component.html","src/app/Base/Environment.ts","src/app/Services/Categories/categories.service.ts","src/app/Components/Additions/home-page-carousel/home-page-carousel.component.ts","src/app/Components/Additions/home-page-carousel/home-page-carousel.component.html","node_modules/@angular/forms/fesm2022/forms.mjs","src/app/Components/Additions/pagination/pagination.component.ts","src/app/Components/Additions/pagination/pagination.component.html","src/app/Services/Products/products.service.ts","node_modules/ngx-toastr/fesm2022/ngx-toastr.mjs","src/app/Services/Cart/cart.service.ts","src/app/Services/Wishlist/wishlist.service.ts","src/app/Components/Layout/Pages/home-page/home-page.component.ts","src/app/Components/Layout/Pages/home-page/home-page.component.html","src/app/Components/Layout/Pages/cart-page/cart-page.component.ts","src/app/Components/Layout/Pages/cart-page/cart-page.component.html","src/app/Components/Layout/Pages/products-page/products-page.component.ts","src/app/Components/Layout/Pages/products-page/products-page.component.html","src/app/Components/Layout/Pages/categories-page/categories-page.component.ts","src/app/Components/Layout/Pages/categories-page/categories-page.component.html","src/app/Services/Brands/brands.service.ts","src/app/Services/Flowbite/flowbite.service.ts","src/app/Components/Layout/Pages/brands-page/brands-page.component.ts","src/app/Components/Layout/Pages/brands-page/brands-page.component.html","src/app/Components/Layout/not-found/not-found.component.ts","src/app/Components/Layout/not-found/not-found.component.html","node_modules/jwt-decode/build/esm/index.js","src/app/Services/Authentication/authentication.service.ts","src/app/Components/Layout/Pages/register-page/register-page.component.ts","src/app/Components/Layout/Pages/register-page/register-page.component.html","src/app/Components/Layout/Pages/login-page/login-page.component.ts","src/app/Components/Layout/Pages/login-page/login-page.component.html","src/app/Guard/Guard/authentication.guard.ts","src/app/Components/Layout/Pages/ForgotPassword/forgot-password-page/forgot-password-page.component.ts","src/app/Components/Layout/Pages/ForgotPassword/forgot-password-page/forgot-password-page.component.html","src/app/Components/Layout/Pages/ForgotPassword/verify-password-page/verify-password-page.component.ts","src/app/Components/Layout/Pages/ForgotPassword/verify-password-page/verify-password-page.component.html","src/app/Components/Layout/Pages/ForgotPassword/reset-password-page/reset-password-page.component.ts","src/app/Components/Layout/Pages/ForgotPassword/reset-password-page/reset-password-page.component.html","src/app/Guard/ForgotPasswordGuard/forgot-password.guard.ts","src/app/Components/Layout/Pages/ProductDetailsPage/product-details-page/product-details-page.component.ts","src/app/Components/Layout/Pages/ProductDetailsPage/product-details-page/product-details-page.component.html","src/app/Components/Layout/Pages/wishlist-page/wishlist-page/wishlist-page.component.ts","src/app/Components/Layout/Pages/wishlist-page/wishlist-page/wishlist-page.component.html","src/app/Services/Payment/payment.service.ts","src/app/Components/Layout/Pages/shipping-address-details/shipping-address-details.component.ts","src/app/Components/Layout/Pages/shipping-address-details/shipping-address-details.component.html","src/app/Guard/VerifyPasswordGuard/verify-password.guard.ts","src/app/app.routes.ts","node_modules/@angular/animations/fesm2022/browser.mjs","node_modules/@angular/platform-browser/fesm2022/animations.mjs","src/app/Interceptors/TokenAuthentication/token-authentication.interceptor.ts","node_modules/ngx-spinner/fesm2022/ngx-spinner.mjs","src/app/Interceptors/LoaderSequence/loader-sequence.interceptor.ts","src/app/Interceptors/ErrorHandler/error-handler.interceptor.ts","src/app/app.config.ts","src/app/Components/Layout/navbar/navbar.component.ts","src/app/Components/Layout/navbar/navbar.component.html","src/app/Components/Layout/footer/footer.component.ts","src/app/Components/Layout/footer/footer.component.html","src/app/app.component.ts","src/app/app.component.html","src/main.ts"],"sourcesContent":["/**\n * @license Angular v17.3.12\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ViewEncapsulation, ÉµRuntimeError, Inject } from '@angular/core';\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType;\n(function (AnimationMetadataType) {\n  /**\n   * Associates a named animation state with a set of CSS styles.\n   * See [`state()`](api/animations/state)\n   */\n  AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n  /**\n   * Data for a transition from one animation state to another.\n   * See `transition()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n  /**\n   * Contains a set of animation steps.\n   * See `sequence()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n  /**\n   * Contains a set of animation steps.\n   * See `{@link animations/group group()}`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n  /**\n   * Contains an animation step.\n   * See `animate()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n  /**\n   * Contains a set of animation steps.\n   * See `keyframes()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n  /**\n   * Contains a set of CSS property-value pairs into a named style.\n   * See `style()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n  /**\n   * Associates an animation with an entry trigger that can be attached to an element.\n   * See `trigger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n  /**\n   * Contains a re-usable animation.\n   * See `animation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n  /**\n   * Contains data to use in executing child animations returned by a query.\n   * See `animateChild()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n  /**\n   * Contains animation parameters for a re-usable animation.\n   * See `useAnimation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n  /**\n   * Contains child-animation query data.\n   * See `query()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n  /**\n   * Contains data for staggering an animation sequence.\n   * See `stagger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n})(AnimationMetadataType || (AnimationMetadataType = {}));\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n  return {\n    type: AnimationMetadataType.Trigger,\n    name,\n    definitions,\n    options: {}\n  };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n  return {\n    type: AnimationMetadataType.Animate,\n    styles,\n    timings\n  };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Group,\n    steps,\n    options\n  };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Sequence,\n    steps,\n    options\n  };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n  return {\n    type: AnimationMetadataType.Style,\n    styles: tokens,\n    offset: null\n  };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n  return {\n    type: AnimationMetadataType.State,\n    name,\n    styles,\n    options\n  };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n  return {\n    type: AnimationMetadataType.Keyframes,\n    steps\n  };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```HTML\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```HTML\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n  return {\n    type: AnimationMetadataType.Transition,\n    expr: stateChangeExpr,\n    animation: steps,\n    options\n  };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Reference,\n    animation: steps,\n    options\n  };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n  return {\n    type: AnimationMetadataType.AnimateChild,\n    options\n  };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n  return {\n    type: AnimationMetadataType.AnimateRef,\n    animation,\n    options\n  };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"alert is-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n  return {\n    type: AnimationMetadataType.Query,\n    selector,\n    animation,\n    options\n  };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n  return {\n    type: AnimationMetadataType.Stagger,\n    timings,\n    animation\n  };\n}\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n  static {\n    this.Éµfac = function AnimationBuilder_Factory(t) {\n      return new (t || AnimationBuilder)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: AnimationBuilder,\n      factory: () => (() => inject(BrowserAnimationBuilder))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    }]\n  }], null, null);\n})();\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  constructor(rootRenderer, doc) {\n    super();\n    this.animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._nextAnimationId = 0;\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n      // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n      throw new ÉµRuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n    }\n  }\n  build(animation) {\n    const id = this._nextAnimationId;\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static {\n    this.Éµfac = function BrowserAnimationBuilder_Factory(t) {\n      return new (t || BrowserAnimationBuilder)(i0.ÉµÉµinject(i0.RendererFactory2), i0.ÉµÉµinject(DOCUMENT));\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: BrowserAnimationBuilder,\n      factory: BrowserAnimationBuilder.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BrowserAnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.RendererFactory2\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this.parentPlayer = null;\n    this._started = false;\n    this.totalTime = 0;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n * @see {@link ÉµAnimationGroupPlayer AnimationGroupPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n  constructor(duration = 0, delay = 0) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._onDestroyFns = [];\n    this._originalOnDoneFns = [];\n    this._originalOnStartFns = [];\n    this._started = false;\n    this._destroyed = false;\n    this._finished = false;\n    this._position = 0;\n    this.parentPlayer = null;\n    this.totalTime = duration + delay;\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  onStart(fn) {\n    this._originalOnStartFns.push(fn);\n    this._onStartFns.push(fn);\n  }\n  onDone(fn) {\n    this._originalOnDoneFns.push(fn);\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  init() {}\n  play() {\n    if (!this.hasStarted()) {\n      this._onStart();\n      this.triggerMicrotask();\n    }\n    this._started = true;\n  }\n  /** @internal */\n  triggerMicrotask() {\n    queueMicrotask(() => this._onFinish());\n  }\n  _onStart() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n  pause() {}\n  restart() {}\n  finish() {\n    this._onFinish();\n  }\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      if (!this.hasStarted()) {\n        this._onStart();\n      }\n      this.finish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this._started = false;\n    this._finished = false;\n    this._onStartFns = this._originalOnStartFns;\n    this._onDoneFns = this._originalOnDoneFns;\n  }\n  setPosition(position) {\n    this._position = this.totalTime ? position * this.totalTime : 1;\n  }\n  getPosition() {\n    return this.totalTime ? this._position / this.totalTime : 1;\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n  constructor(_players) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._finished = false;\n    this._started = false;\n    this._destroyed = false;\n    this._onDestroyFns = [];\n    this.parentPlayer = null;\n    this.totalTime = 0;\n    this.players = _players;\n    let doneCount = 0;\n    let destroyCount = 0;\n    let startCount = 0;\n    const total = this.players.length;\n    if (total == 0) {\n      queueMicrotask(() => this._onFinish());\n    } else {\n      this.players.forEach(player => {\n        player.onDone(() => {\n          if (++doneCount == total) {\n            this._onFinish();\n          }\n        });\n        player.onDestroy(() => {\n          if (++destroyCount == total) {\n            this._onDestroy();\n          }\n        });\n        player.onStart(() => {\n          if (++startCount == total) {\n            this._onStart();\n          }\n        });\n      });\n    }\n    this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  init() {\n    this.players.forEach(player => player.init());\n  }\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n  _onStart() {\n    if (!this.hasStarted()) {\n      this._started = true;\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n    }\n  }\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    if (!this.parentPlayer) {\n      this.init();\n    }\n    this._onStart();\n    this.players.forEach(player => player.play());\n  }\n  pause() {\n    this.players.forEach(player => player.pause());\n  }\n  restart() {\n    this.players.forEach(player => player.restart());\n  }\n  finish() {\n    this._onFinish();\n    this.players.forEach(player => player.finish());\n  }\n  destroy() {\n    this._onDestroy();\n  }\n  _onDestroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._onFinish();\n      this.players.forEach(player => player.destroy());\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this.players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n  setPosition(p) {\n    const timeAtPosition = p * this.totalTime;\n    this.players.forEach(player => {\n      const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n      player.setPosition(position);\n    });\n  }\n  getPosition() {\n    const longestPlayer = this.players.reduce((longestSoFar, player) => {\n      const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n      return newPlayerIsLongest ? player : longestSoFar;\n    }, null);\n    return longestPlayer != null ? longestPlayer.getPosition() : 0;\n  }\n  beforeDestroy() {\n    this.players.forEach(player => {\n      if (player.beforeDestroy) {\n        player.beforeDestroy();\n      }\n    });\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\nconst ÉµPRE_STYLE = '!';\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ÉµAnimationGroupPlayer, BrowserAnimationBuilder as ÉµBrowserAnimationBuilder, ÉµPRE_STYLE };\n","import * as i0 from '@angular/core';\nimport { isDevMode, Injectable, InjectionToken, PLATFORM_ID, Inject, Optional, Directive, Input, Component, HostListener, EventEmitter, ChangeDetectionStrategy, ContentChildren, Output, Attribute, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Subject, merge, of, fromEvent, from } from 'rxjs';\nimport { tap, filter, switchMap, first, take, skip, map, toArray, delay } from 'rxjs/operators';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { style, state, animate, transition, trigger } from '@angular/animations';\n\n/**\n * Defaults value of options\n */\nconst _c0 = (a0, a1, a2, a3, a4) => ({\n  \"width\": a0,\n  \"transform\": a1,\n  \"transition\": a2,\n  \"padding-left\": a3,\n  \"padding-right\": a4\n});\nconst _c1 = (a0, a1, a2, a3) => ({\n  \"width\": a0,\n  \"margin-left\": a1,\n  \"margin-right\": a2,\n  \"left\": a3\n});\nconst _c2 = (a0, a1) => ({\n  $implicit: a0,\n  index: a1\n});\nfunction StageComponent_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction StageComponent_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµtemplate(0, StageComponent_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ÉµÉµnextContext();\n    const slide_r2 = ctx_r3.$implicit;\n    const i_r5 = ctx_r3.index;\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµproperty(\"ngTemplateOutlet\", slide_r2.tplRef)(\"ngTemplateOutletContext\", i0.ÉµÉµpureFunction2(2, _c2, ctx_r2.preparePublicSlide(slide_r2), i_r5));\n  }\n}\nfunction StageComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµelementStart(1, \"div\", 2);\n    i0.ÉµÉµlistener(\"animationend\", function StageComponent_ng_container_2_Template_div_animationend_1_listener() {\n      const slide_r2 = i0.ÉµÉµrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.clear(slide_r2.id));\n    });\n    i0.ÉµÉµtemplate(2, StageComponent_ng_container_2_2_Template, 1, 5, null, 3);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const slide_r2 = ctx.$implicit;\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngClass\", slide_r2.classes)(\"ngStyle\", i0.ÉµÉµpureFunction4(4, _c1, slide_r2.width + \"px\", slide_r2.marginL ? slide_r2.marginL + \"px\" : \"\", slide_r2.marginR ? slide_r2.marginR + \"px\" : \"\", slide_r2.left))(\"@autoHeight\", slide_r2.heightState);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", slide_r2.load);\n  }\n}\nconst _c3 = (a0, a1, a2, a3, a4) => ({\n  \"owl-rtl\": a0,\n  \"owl-loaded\": a1,\n  \"owl-responsive\": a2,\n  \"owl-drag\": a3,\n  \"owl-grab\": a4\n});\nconst _c4 = (a0, a1) => ({\n  \"isMouseDragable\": a0,\n  \"isTouchDragable\": a1\n});\nconst _c5 = a0 => ({\n  \"disabled\": a0\n});\nconst _c6 = (a0, a1) => ({\n  \"active\": a0,\n  \"owl-dot-text\": a1\n});\nfunction CarouselComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 4);\n    i0.ÉµÉµelement(1, \"owl-stage\", 5);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"owlDraggable\", i0.ÉµÉµpureFunction2(3, _c4, ctx_r1.owlDOMData == null ? null : ctx_r1.owlDOMData.isMouseDragable, ctx_r1.owlDOMData == null ? null : ctx_r1.owlDOMData.isTouchDragable))(\"stageData\", ctx_r1.stageData)(\"slidesData\", ctx_r1.slidesData);\n  }\n}\nfunction CarouselComponent_ng_container_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 11);\n    i0.ÉµÉµlistener(\"click\", function CarouselComponent_ng_container_3_div_5_Template_div_click_0_listener() {\n      const dot_r5 = i0.ÉµÉµrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ÉµÉµnextContext(2);\n      return i0.ÉµÉµresetView(ctx_r1.moveByDot(dot_r5.id));\n    });\n    i0.ÉµÉµelement(1, \"span\", 12);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const dot_r5 = ctx.$implicit;\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction2(2, _c6, dot_r5.active, dot_r5.showInnerContent));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"innerHTML\", dot_r5.innerContent, i0.ÉµÉµsanitizeHtml);\n  }\n}\nfunction CarouselComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµelementStart(1, \"div\", 6)(2, \"div\", 7);\n    i0.ÉµÉµlistener(\"click\", function CarouselComponent_ng_container_3_Template_div_click_2_listener() {\n      i0.ÉµÉµrestoreView(_r3);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.prev());\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"div\", 8);\n    i0.ÉµÉµlistener(\"click\", function CarouselComponent_ng_container_3_Template_div_click_3_listener() {\n      i0.ÉµÉµrestoreView(_r3);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.next());\n    });\n    i0.ÉµÉµelementEnd()();\n    i0.ÉµÉµelementStart(4, \"div\", 9);\n    i0.ÉµÉµtemplate(5, CarouselComponent_ng_container_3_div_5_Template, 2, 5, \"div\", 10);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(7, _c5, ctx_r1.navData == null ? null : ctx_r1.navData.disabled));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(9, _c5, ctx_r1.navData == null ? null : ctx_r1.navData.prev == null ? null : ctx_r1.navData.prev.disabled))(\"innerHTML\", ctx_r1.navData == null ? null : ctx_r1.navData.prev == null ? null : ctx_r1.navData.prev.htmlText, i0.ÉµÉµsanitizeHtml);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(11, _c5, ctx_r1.navData == null ? null : ctx_r1.navData.next == null ? null : ctx_r1.navData.next.disabled))(\"innerHTML\", ctx_r1.navData == null ? null : ctx_r1.navData.next == null ? null : ctx_r1.navData.next.htmlText, i0.ÉµÉµsanitizeHtml);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction1(13, _c5, ctx_r1.dotsData == null ? null : ctx_r1.dotsData.disabled));\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngForOf\", ctx_r1.dotsData == null ? null : ctx_r1.dotsData.dots);\n  }\n}\nclass OwlCarouselOConfig {\n  items = 3;\n  skip_validateItems = false;\n  loop = false;\n  center = false;\n  rewind = false;\n  mouseDrag = true;\n  touchDrag = true;\n  pullDrag = true;\n  freeDrag = false;\n  margin = 0;\n  stagePadding = 0;\n  merge = false;\n  mergeFit = true;\n  autoWidth = false;\n  startPosition = 0;\n  rtl = false;\n  smartSpeed = 250;\n  fluidSpeed = false;\n  dragEndSpeed = false;\n  responsive = {};\n  responsiveRefreshRate = 200;\n  // defaults to Navigation\n  nav = false;\n  navText = ['prev', 'next'];\n  navSpeed = false;\n  slideBy = 1; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n  dots = true;\n  dotsEach = false;\n  dotsData = false;\n  dotsSpeed = false;\n  // defaults to Autoplay\n  autoplay = false;\n  autoplayTimeout = 5000;\n  autoplayHoverPause = false;\n  autoplaySpeed = false;\n  autoplayMouseleaveTimeout = 1;\n  // defaults to LazyLoading\n  lazyLoad = false;\n  lazyLoadEager = 0;\n  // defaults to Animate\n  slideTransition = '';\n  animateOut = false;\n  animateIn = false;\n  // defaults to AutoHeight\n  autoHeight = false;\n  // defaults to Hash\n  URLhashListener = false;\n  constructor() {}\n}\n/**\n * we can't read types from OwlOptions in javascript because of props have undefined value and types of those props are used for validating inputs\n * class below is copy of OwlOptions but its all props have string value showing certain type;\n * this is class is being used just in method _validateOptions() of CarouselService;\n */\nclass OwlOptionsMockedTypes {\n  items = 'number';\n  skip_validateItems = 'boolean';\n  loop = 'boolean';\n  center = 'boolean';\n  rewind = 'boolean';\n  mouseDrag = 'boolean';\n  touchDrag = 'boolean';\n  pullDrag = 'boolean';\n  freeDrag = 'boolean';\n  margin = 'number';\n  stagePadding = 'number';\n  merge = 'boolean';\n  mergeFit = 'boolean';\n  autoWidth = 'boolean';\n  startPosition = 'number|string';\n  rtl = 'boolean';\n  smartSpeed = 'number';\n  fluidSpeed = 'boolean';\n  dragEndSpeed = 'number|boolean';\n  responsive = {};\n  responsiveRefreshRate = 'number';\n  // defaults to Navigation\n  nav = 'boolean';\n  navText = 'string[]';\n  navSpeed = 'number|boolean';\n  slideBy = 'number|string'; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n  dots = 'boolean';\n  dotsEach = 'number|boolean';\n  dotsData = 'boolean';\n  dotsSpeed = 'number|boolean';\n  // defaults to Autoplay\n  autoplay = 'boolean';\n  autoplayTimeout = 'number';\n  autoplayHoverPause = 'boolean';\n  autoplaySpeed = 'number|boolean';\n  autoplayMouseleaveTimeout = 'number';\n  // defaults to LazyLoading\n  lazyLoad = 'boolean';\n  lazyLoadEager = 'number';\n  // defaults to Animate\n  slideTransition = 'string';\n  animateOut = 'string|boolean';\n  animateIn = 'string|boolean';\n  // defaults to AutoHeight\n  autoHeight = 'boolean';\n  // defaults to Hash\n  URLhashListener = \"boolean\";\n  constructor() {}\n}\nclass OwlLogger {\n  errorHandler;\n  constructor(errorHandler) {\n    this.errorHandler = errorHandler;\n  }\n  log(value, ...rest) {\n    if (isDevMode()) {\n      console.log(value, ...rest);\n    }\n  }\n  error(error) {\n    this.errorHandler.handleError(error);\n  }\n  warn(value, ...rest) {\n    console.warn(value, ...rest);\n  }\n  static Éµfac = function OwlLogger_Factory(t) {\n    return new (t || OwlLogger)(i0.ÉµÉµinject(i0.ErrorHandler));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: OwlLogger,\n    factory: OwlLogger.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(OwlLogger, [{\n    type: Injectable\n  }], () => [{\n    type: i0.ErrorHandler\n  }], null);\n})();\n\n/**\n * Current state information and their tags.\n */\nclass States {\n  current;\n  tags;\n}\n/**\n * Enumeration for types.\n * @enum {String}\n */\nvar Type;\n(function (Type) {\n  Type[\"Event\"] = \"event\";\n  Type[\"State\"] = \"state\";\n})(Type || (Type = {}));\n;\n/**\n * Enumeration for width.\n * @enum {String}\n */\nvar Width;\n(function (Width) {\n  Width[\"Default\"] = \"default\";\n  Width[\"Inner\"] = \"inner\";\n  Width[\"Outer\"] = \"outer\";\n})(Width || (Width = {}));\n;\n/**\n * Model for coords of .owl-stage\n */\nclass Coords {\n  x;\n  y;\n}\n/**\n * Model for all current data of carousel\n */\nclass CarouselCurrentData {\n  owlDOMData;\n  stageData;\n  slidesData;\n  navData;\n  dotsData;\n}\nclass CarouselService {\n  logger;\n  /**\n   * Subject for passing data needed for managing View\n   */\n  _viewSettingsShipper$ = new Subject();\n  /**\n   * Subject for notification when the carousel got initializes\n   */\n  _initializedCarousel$ = new Subject();\n  /**\n   * Subject for notification when the carousel's settings start changinf\n   */\n  _changeSettingsCarousel$ = new Subject();\n  /**\n   * Subject for notification when the carousel's settings have changed\n   */\n  _changedSettingsCarousel$ = new Subject();\n  /**\n   * Subject for notification when the carousel starts translating or moving\n   */\n  _translateCarousel$ = new Subject();\n  /**\n   * Subject for notification when the carousel stopped translating or moving\n   */\n  _translatedCarousel$ = new Subject();\n  /**\n   * Subject for notification when the carousel's rebuilding caused by 'resize' event starts\n   */\n  _resizeCarousel$ = new Subject();\n  /**\n   * Subject for notification  when the carousel's rebuilding caused by 'resize' event is ended\n   */\n  _resizedCarousel$ = new Subject();\n  /**\n   * Subject for notification when the refresh of carousel starts\n   */\n  _refreshCarousel$ = new Subject();\n  /**\n   * Subject for notification when the refresh of carousel is ended\n   */\n  _refreshedCarousel$ = new Subject();\n  /**\n   * Subject for notification when the dragging of carousel starts\n   */\n  _dragCarousel$ = new Subject();\n  /**\n   * Subject for notification when the dragging of carousel is ended\n   */\n  _draggedCarousel$ = new Subject();\n  /**\n   * Current settings for the carousel.\n   */\n  settings = {\n    items: 0\n  };\n  /**\n   * Initial data for setting classes to element .owl-carousel\n   */\n  owlDOMData = {\n    rtl: false,\n    isResponsive: false,\n    isRefreshed: false,\n    isLoaded: false,\n    isLoading: false,\n    isMouseDragable: false,\n    isGrab: false,\n    isTouchDragable: false\n  };\n  /**\n   * Initial data of .owl-stage\n   */\n  stageData = {\n    transform: 'translate3d(0px,0px,0px)',\n    transition: '0s',\n    width: 0,\n    paddingL: 0,\n    paddingR: 0\n  };\n  /**\n   *  Data of every slide\n   */\n  slidesData;\n  /**\n   * Data of navigation block\n   */\n  navData;\n  /**\n   * Data of dots block\n   */\n  dotsData;\n  /**\n   * Carousel width\n   */\n  _width;\n  /**\n   * All real items.\n   */\n  _items = []; // is equal to this.slides\n  /**\n   * Array with width of every slide.\n   */\n  _widths = [];\n  /**\n   * Currently suppressed events to prevent them from beeing retriggered.\n   */\n  _supress = {};\n  /**\n   * References to the running plugins of this carousel.\n   */\n  _plugins = {};\n  /**\n   * Absolute current position.\n   */\n  _current = null;\n  /**\n   * All cloned items.\n   */\n  _clones = [];\n  /**\n   * Merge values of all items.\n   * @todo Maybe this could be part of a plugin.\n   */\n  _mergers = [];\n  /**\n   * Animation speed in milliseconds.\n   */\n  _speed = null;\n  /**\n   * Coordinates of all items in pixel.\n   * @todo The name of this member is missleading.\n   */\n  _coordinates = [];\n  /**\n   * Current breakpoint.\n   * @todo Real media queries would be nice.\n   */\n  _breakpoint = null;\n  /**\n   * Prefix for id of cloned slides\n   */\n  clonedIdPrefix = 'cloned-';\n  /**\n   * Current options set by the caller including defaults.\n   */\n  _options = {};\n  /**\n   * Invalidated parts within the update process.\n   */\n  _invalidated = {};\n  // Is needed for tests\n  get invalidated() {\n    return this._invalidated;\n  }\n  /**\n   * Current state information and their tags.\n   */\n  _states = {\n    current: {},\n    tags: {\n      initializing: ['busy'],\n      animating: ['busy'],\n      dragging: ['interacting']\n    }\n  };\n  // is needed for tests\n  get states() {\n    return this._states;\n  }\n  /**\n       * Ordered list of workers for the update process.\n   */\n  _pipe = [\n  // {\n  //   filter: ['width', 'settings'],\n  //   run: () => {\n  //     this._width = this.carouselWindowWidth;\n  //   }\n  // },\n  {\n    filter: ['width', 'items', 'settings'],\n    run: cache => {\n      cache.current = this._items && this._items[this.relative(this._current)]?.id;\n    }\n  },\n  // {\n  //   filter: ['items', 'settings'],\n  //   run: function() {\n  //     // this.$stage.children('.cloned').remove();\n  //   }\n  // },\n  {\n    filter: ['width', 'items', 'settings'],\n    run: cache => {\n      const margin = this.settings.margin || '',\n        grid = !this.settings.autoWidth,\n        rtl = this.settings.rtl,\n        css = {\n          'margin-left': rtl ? margin : '',\n          'margin-right': rtl ? '' : margin\n        };\n      if (!grid) {\n        this.slidesData.forEach(slide => {\n          slide.marginL = css['margin-left'];\n          slide.marginR = css['margin-right'];\n        });\n      }\n      cache.css = css;\n    }\n  }, {\n    filter: ['width', 'items', 'settings'],\n    run: cache => {\n      const width = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin,\n        grid = !this.settings.autoWidth,\n        widths = [];\n      let merge = null,\n        iterator = this._items.length;\n      cache.items = {\n        merge: false,\n        width: width\n      };\n      while (iterator-- > 0) {\n        merge = this._mergers[iterator];\n        merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\n        cache.items.merge = merge > 1 || cache.items.merge;\n        widths[iterator] = !grid ? this._items[iterator].width ? this._items[iterator].width : width : width * merge;\n      }\n      this._widths = widths;\n      this.slidesData.forEach((slide, i) => {\n        slide.width = this._widths[i];\n        slide.marginR = cache.css['margin-right'];\n        slide.marginL = cache.css['margin-left'];\n      });\n    }\n  }, {\n    filter: ['items', 'settings'],\n    run: () => {\n      const clones = [],\n        items = this._items,\n        settings = this.settings,\n        // TODO: Should be computed from number of min width items in stage\n        view = Math.max(settings.items * 2, 4),\n        size = Math.ceil(items.length / 2) * 2;\n      let append = [],\n        prepend = [],\n        repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0;\n      repeat /= 2;\n      while (repeat-- > 0) {\n        // Switch to only using appended clones\n        clones.push(this.normalize(clones.length / 2, true));\n        append.push({\n          ...this.slidesData[clones[clones.length - 1]]\n        });\n        clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\n        prepend.unshift({\n          ...this.slidesData[clones[clones.length - 1]]\n        });\n      }\n      this._clones = clones;\n      append = append.map(slide => {\n        slide.id = `${this.clonedIdPrefix}${slide.id}`;\n        slide.isActive = false;\n        slide.isCloned = true;\n        return slide;\n      });\n      prepend = prepend.map(slide => {\n        slide.id = `${this.clonedIdPrefix}${slide.id}`;\n        slide.isActive = false;\n        slide.isCloned = true;\n        return slide;\n      });\n      this.slidesData = prepend.concat(this.slidesData).concat(append);\n    }\n  }, {\n    filter: ['width', 'items', 'settings'],\n    run: () => {\n      const rtl = this.settings.rtl ? 1 : -1,\n        size = this._clones.length + this._items.length,\n        coordinates = [];\n      let iterator = -1,\n        previous = 0,\n        current = 0;\n      while (++iterator < size) {\n        previous = coordinates[iterator - 1] || 0;\n        current = this._widths[this.relative(iterator)] + this.settings.margin;\n        coordinates.push(previous + current * rtl);\n      }\n      this._coordinates = coordinates;\n    }\n  }, {\n    filter: ['width', 'items', 'settings'],\n    run: () => {\n      const padding = this.settings.stagePadding,\n        coordinates = this._coordinates,\n        css = {\n          'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\n          'padding-left': padding || '',\n          'padding-right': padding || ''\n        };\n      this.stageData.width = css.width; // use this property in *ngIf directive for .owl-stage element\n      this.stageData.paddingL = css['padding-left'];\n      this.stageData.paddingR = css['padding-right'];\n    }\n  }, {\n    //   filter: [ 'width', 'items', 'settings' ],\n    //   run: cache => {\n    // \t\t// this method sets the width for every slide, but I set it in different way earlier\n    // \t\tconst grid = !this.settings.autoWidth,\n    // \t\titems = this.$stage.children(); // use this.slidesData\n    //     let iterator = this._coordinates.length;\n    //     if (grid && cache.items.merge) {\n    //       while (iterator--) {\n    //         cache.css.width = this._widths[this.relative(iterator)];\n    //         items.eq(iterator).css(cache.css);\n    //       }\n    //     } else if (grid) {\n    //       cache.css.width = cache.items.width;\n    //       items.css(cache.css);\n    //     }\n    //   }\n    // }, {\n    //   filter: [ 'items' ],\n    //   run: function() {\n    //     this._coordinates.length < 1 && this.$stage.removeAttr('style');\n    //   }\n    // }, {\n    filter: ['width', 'items', 'settings'],\n    run: cache => {\n      let current = cache.current ? this.slidesData.findIndex(slide => slide.id === cache.current) : 0;\n      current = Math.max(this.minimum(), Math.min(this.maximum(), current));\n      this.reset(current);\n    }\n  }, {\n    filter: ['position'],\n    run: () => {\n      this.animate(this.coordinates(this._current));\n    }\n  }, {\n    filter: ['width', 'position', 'items', 'settings'],\n    run: () => {\n      const rtl = this.settings.rtl ? 1 : -1,\n        padding = this.settings.stagePadding * 2,\n        matches = [];\n      let begin, end, inner, outer, i, n;\n      begin = this.coordinates(this.current());\n      if (typeof begin === 'number') {\n        begin += padding;\n      } else {\n        begin = 0;\n      }\n      end = begin + this.width() * rtl;\n      if (rtl === -1 && this.settings.center) {\n        const result = this._coordinates.filter(element => {\n          return this.settings.items % 2 === 1 ? element >= begin : element > begin;\n        });\n        begin = result.length ? result[result.length - 1] : begin;\n      }\n      for (i = 0, n = this._coordinates.length; i < n; i++) {\n        inner = Math.ceil(this._coordinates[i - 1] || 0);\n        outer = Math.ceil(Math.abs(this._coordinates[i]) + padding * rtl);\n        if (this._op(inner, '<=', begin) && this._op(inner, '>', end) || this._op(outer, '<', begin) && this._op(outer, '>', end)) {\n          matches.push(i);\n        }\n      }\n      this.slidesData.forEach(slide => {\n        slide.isActive = false;\n        return slide;\n      });\n      matches.forEach(item => {\n        this.slidesData[item].isActive = true;\n      });\n      if (this.settings.center) {\n        this.slidesData.forEach(slide => {\n          slide.isCentered = false;\n          return slide;\n        });\n        this.slidesData[this.current()].isCentered = true;\n      }\n    }\n  }];\n  constructor(logger) {\n    this.logger = logger;\n  }\n  /**\n   * Makes _viewSettingsShipper$ Subject become Observable\n   * @returns Observable of _viewSettingsShipper$ Subject\n   */\n  getViewCurSettings() {\n    return this._viewSettingsShipper$.asObservable();\n  }\n  /**\n   * Makes _initializedCarousel$ Subject become Observable\n   * @returns Observable of _initializedCarousel$ Subject\n   */\n  getInitializedState() {\n    return this._initializedCarousel$.asObservable();\n  }\n  /**\n   * Makes _changeSettingsCarousel$ Subject become Observable\n   * @returns Observable of _changeSettingsCarousel$ Subject\n   */\n  getChangeState() {\n    return this._changeSettingsCarousel$.asObservable();\n  }\n  /**\n   * Makes _changedSettingsCarousel$ Subject become Observable\n   * @returns Observable of _changedSettingsCarousel$ Subject\n   */\n  getChangedState() {\n    return this._changedSettingsCarousel$.asObservable();\n  }\n  /**\n   * Makes _translateCarousel$ Subject become Observable\n   * @returns Observable of _translateCarousel$ Subject\n   */\n  getTranslateState() {\n    return this._translateCarousel$.asObservable();\n  }\n  /**\n   * Makes _translatedCarousel$ Subject become Observable\n   * @returns Observable of _translatedCarousel$ Subject\n   */\n  getTranslatedState() {\n    return this._translatedCarousel$.asObservable();\n  }\n  /**\n   * Makes _resizeCarousel$ Subject become Observable\n   * @returns Observable of _resizeCarousel$ Subject\n   */\n  getResizeState() {\n    return this._resizeCarousel$.asObservable();\n  }\n  /**\n   * Makes _resizedCarousel$ Subject become Observable\n   * @returns Observable of _resizedCarousel$ Subject\n   */\n  getResizedState() {\n    return this._resizedCarousel$.asObservable();\n  }\n  /**\n   * Makes _refreshCarousel$ Subject become Observable\n   * @returns Observable of _refreshCarousel$ Subject\n   */\n  getRefreshState() {\n    return this._refreshCarousel$.asObservable();\n  }\n  /**\n   * Makes _refreshedCarousel$ Subject become Observable\n   * @returns Observable of _refreshedCarousel$ Subject\n   */\n  getRefreshedState() {\n    return this._refreshedCarousel$.asObservable();\n  }\n  /**\n   * Makes _dragCarousel$ Subject become Observable\n   * @returns Observable of _dragCarousel$ Subject\n   */\n  getDragState() {\n    return this._dragCarousel$.asObservable();\n  }\n  /**\n   * Makes _draggedCarousel$ Subject become Observable\n   * @returns Observable of _draggedCarousel$ Subject\n   */\n  getDraggedState() {\n    return this._draggedCarousel$.asObservable();\n  }\n  /**\n   * Setups custom options expanding default options\n   * @param options custom options\n   */\n  setOptions(options) {\n    const configOptions = new OwlCarouselOConfig();\n    const checkedOptions = this._validateOptions(options, configOptions);\n    this._options = {\n      ...configOptions,\n      ...checkedOptions\n    };\n  }\n  /**\n   * Checks whether user's option are set properly. Cheking is based on typings;\n   * @param options options set by user\n   * @param configOptions default options\n   * @returns checked and modified (if it's needed) user's options\n   *\n   * Notes:\n   * \t- if user set option with wrong type, it'll be written in console\n   */\n  _validateOptions(options, configOptions) {\n    const checkedOptions = {\n      ...options\n    };\n    const mockedTypes = new OwlOptionsMockedTypes();\n    const setRightOption = (type, key) => {\n      this.logger.log(`options.${key} must be type of ${type}; ${key}=${options[key]} skipped to defaults: ${key}=${configOptions[key]}`);\n      return configOptions[key];\n    };\n    for (const key in checkedOptions) {\n      if (checkedOptions.hasOwnProperty(key)) {\n        // condition could be shortened but it gets harder for understanding\n        if (mockedTypes[key] === 'number') {\n          if (this._isNumeric(checkedOptions[key])) {\n            checkedOptions[key] = +checkedOptions[key];\n            checkedOptions[key] = key === 'items' ? this._validateItems(checkedOptions[key], checkedOptions.skip_validateItems) : checkedOptions[key];\n          } else {\n            checkedOptions[key] = setRightOption(mockedTypes[key], key);\n          }\n        } else if (mockedTypes[key] === 'boolean' && typeof checkedOptions[key] !== 'boolean') {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'number|boolean' && !this._isNumberOrBoolean(checkedOptions[key])) {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'number|string' && !this._isNumberOrString(checkedOptions[key])) {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'string|boolean' && !this._isStringOrBoolean(checkedOptions[key])) {\n          checkedOptions[key] = setRightOption(mockedTypes[key], key);\n        } else if (mockedTypes[key] === 'string[]') {\n          if (Array.isArray(checkedOptions[key])) {\n            let isString = false;\n            checkedOptions[key].forEach(element => {\n              isString = typeof element === 'string' ? true : false;\n            });\n            if (!isString) {\n              checkedOptions[key] = setRightOption(mockedTypes[key], key);\n            }\n            ;\n          } else {\n            checkedOptions[key] = setRightOption(mockedTypes[key], key);\n          }\n        }\n      }\n    }\n    return checkedOptions;\n  }\n  /**\n   * Checks the option `items` set by user and if it bigger than number of slides, the function returns number of slides\n   * @param items option items set by user\n   * @param skip_validateItems option `skip_validateItems` set by user\n   * @returns right number of items\n   */\n  _validateItems(items, skip_validateItems) {\n    let result = items;\n    if (items > this._items.length) {\n      if (skip_validateItems) {\n        this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. The navigation got disabled');\n      } else {\n        result = this._items.length;\n        this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. This option is updated to the current number of slides and the navigation got disabled');\n      }\n    } else {\n      if (items === this._items.length && (this.settings.dots || this.settings.nav)) {\n        this.logger.log('Option \\'items\\' in your options is equal to the number of slides. So the navigation got disabled');\n      }\n    }\n    return result;\n  }\n  /**\n   * Set current width of carousel\n   * @param width width of carousel Window\n   */\n  setCarouselWidth(width) {\n    this._width = width;\n  }\n  /**\n   * Setups the current settings.\n   * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\n   * @todo Support for media queries by using `matchMedia` would be nice.\n   * @param carouselWidth width of carousel\n   * @param slides array of slides\n   * @param options options set by user\n   */\n  setup(carouselWidth, slides, options) {\n    this.setCarouselWidth(carouselWidth);\n    this.setItems(slides);\n    this._defineSlidesData();\n    this.setOptions(options);\n    this.settings = {\n      ...this._options\n    };\n    this.setOptionsForViewport();\n    this._trigger('change', {\n      property: {\n        name: 'settings',\n        value: this.settings\n      }\n    });\n    this.invalidate('settings'); // must be call of this function;\n    this._trigger('changed', {\n      property: {\n        name: 'settings',\n        value: this.settings\n      }\n    });\n  }\n  /**\n   * Set options for current viewport\n   */\n  setOptionsForViewport() {\n    const viewport = this._width,\n      overwrites = this._options.responsive;\n    let match = -1;\n    if (!Object.keys(overwrites).length) {\n      return;\n    }\n    if (!viewport) {\n      this.settings.items = 1;\n      return;\n    }\n    for (const key in overwrites) {\n      if (overwrites.hasOwnProperty(key)) {\n        if (+key <= viewport && +key > match) {\n          match = Number(key);\n        }\n      }\n    }\n    this.settings = {\n      ...this._options,\n      ...overwrites[match],\n      items: overwrites[match] && overwrites[match].items ? this._validateItems(overwrites[match].items, this._options.skip_validateItems) : this._options.items\n    };\n    // if (typeof this.settings.stagePadding === 'function') {\n    // \tthis.settings.stagePadding = this.settings.stagePadding();\n    // }\n    delete this.settings.responsive;\n    this.owlDOMData.isResponsive = true;\n    this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\n    this.owlDOMData.isTouchDragable = this.settings.touchDrag;\n    const mergers = [];\n    this._items.forEach(item => {\n      const mergeN = this.settings.merge ? item.dataMerge : 1;\n      mergers.push(mergeN);\n    });\n    this._mergers = mergers;\n    this._breakpoint = match;\n    this.invalidate('settings');\n  }\n  /**\n   * Initializes the carousel.\n   * @param slides array of CarouselSlideDirective\n   */\n  initialize(slides) {\n    this.enter('initializing');\n    // this.trigger('initialize');\n    this.owlDOMData.rtl = this.settings.rtl;\n    if (this._mergers.length) {\n      this._mergers = [];\n    }\n    slides.forEach(item => {\n      const mergeN = this.settings.merge ? item.dataMerge : 1;\n      this._mergers.push(mergeN);\n    });\n    this._clones = [];\n    this.reset(this._isNumeric(this.settings.startPosition) ? +this.settings.startPosition : 0);\n    this.invalidate('items');\n    this.refresh();\n    this.owlDOMData.isLoaded = true;\n    this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\n    this.owlDOMData.isTouchDragable = this.settings.touchDrag;\n    this.sendChanges();\n    this.leave('initializing');\n    this._trigger('initialized');\n  }\n  /**\n   * Sends all data needed for View\n   */\n  sendChanges() {\n    this._viewSettingsShipper$.next({\n      owlDOMData: this.owlDOMData,\n      stageData: this.stageData,\n      slidesData: this.slidesData,\n      navData: this.navData,\n      dotsData: this.dotsData\n    });\n  }\n  /**\n   * Updates option logic if necessery\n   */\n  _optionsLogic() {\n    if (this.settings.autoWidth) {\n      this.settings.stagePadding = 0;\n      this.settings.merge = false;\n    }\n  }\n  /**\n   * Updates the view\n   */\n  update() {\n    let i = 0;\n    const n = this._pipe.length,\n      filter = item => this._invalidated[item],\n      cache = {};\n    while (i < n) {\n      const filteredPipe = this._pipe[i].filter.filter(filter);\n      if (this._invalidated.all || filteredPipe.length > 0) {\n        this._pipe[i].run(cache);\n      }\n      i++;\n    }\n    this.slidesData.forEach(slide => slide.classes = this.setCurSlideClasses(slide));\n    this.sendChanges();\n    this._invalidated = {};\n    if (!this.is('valid')) {\n      this.enter('valid');\n    }\n  }\n  /**\n   * Gets the width of the view.\n   * @param [dimension=Width.Default] The dimension to return\n   * @returns The width of the view in pixel.\n   */\n  width(dimension) {\n    dimension = dimension || Width.Default;\n    switch (dimension) {\n      case Width.Inner:\n      case Width.Outer:\n        return this._width;\n      default:\n        return this._width - this.settings.stagePadding * 2 + this.settings.margin;\n    }\n  }\n  /**\n   * Refreshes the carousel primarily for adaptive purposes.\n   */\n  refresh() {\n    this.enter('refreshing');\n    this._trigger('refresh');\n    this._defineSlidesData();\n    this.setOptionsForViewport();\n    this._optionsLogic();\n    // this.$element.addClass(this.options.refreshClass);\n    this.update();\n    // this.$element.removeClass(this.options.refreshClass);\n    this.leave('refreshing');\n    this._trigger('refreshed');\n  }\n  /**\n   * Checks window `resize` event.\n   * @param curWidth width of .owl-carousel\n   */\n  onResize(curWidth) {\n    if (!this._items.length) {\n      return false;\n    }\n    this.setCarouselWidth(curWidth);\n    this.enter('resizing');\n    // if (this.trigger('resize').isDefaultPrevented()) {\n    // \tthis.leave('resizing');\n    // \treturn false;\n    // }\n    this._trigger('resize');\n    this.invalidate('width');\n    this.refresh();\n    this.leave('resizing');\n    this._trigger('resized');\n  }\n  /**\n   * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\n   * @todo Horizontal swipe threshold as option\n   * @todo #261\n   * @param event - The event arguments.\n   * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\n   */\n  prepareDragging(event) {\n    let stage = null,\n      transformArr;\n    // could be 5 commented lines below; However there's stage transform in stageData and in updates after each move of stage\n    // stage = getComputedStyle(this.el.nativeElement).transform.replace(/.*\\(|\\)| /g, '').split(',');\n    // stage = {\n    //   x: stage[stage.length === 16 ? 12 : 4],\n    //   y: stage[stage.length === 16 ? 13 : 5]\n    // };\n    transformArr = this.stageData.transform.replace(/.*\\(|\\)| |[^,-\\d]\\w|\\)/g, '').split(',');\n    stage = {\n      x: +transformArr[0],\n      y: +transformArr[1]\n    };\n    if (this.is('animating')) {\n      this.invalidate('position');\n    }\n    if (event.type === 'mousedown') {\n      this.owlDOMData.isGrab = true;\n    }\n    this.speed(0);\n    return stage;\n  }\n  /**\n   * Enters into a 'dragging' state\n   */\n  enterDragging() {\n    this.enter('dragging');\n    this._trigger('drag');\n  }\n  /**\n   * Defines new coords for .owl-stage while dragging it\n   * @todo #261\n   * @param event the event arguments.\n   * @param dragData initial data got after starting dragging\n   * @returns coords or false\n   */\n  defineNewCoordsDrag(event, dragData) {\n    let minimum = null,\n      maximum = null,\n      pull = null;\n    const delta = this.difference(dragData.pointer, this.pointer(event)),\n      stage = this.difference(dragData.stage.start, delta);\n    if (!this.is('dragging')) {\n      return false;\n    }\n    if (this.settings.loop) {\n      minimum = this.coordinates(this.minimum());\n      maximum = +this.coordinates(this.maximum() + 1) - minimum;\n      stage.x = ((stage.x - minimum) % maximum + maximum) % maximum + minimum;\n    } else {\n      minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\n      maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\n      pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\n      stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\n    }\n    return stage;\n  }\n  /**\n   * Finishes dragging of carousel when `touchend` and `mouseup` events fire.\n   * @todo #261\n   * @todo Threshold for click event\n   * @param event the event arguments.\n   * @param dragObj the object with dragging settings and states\n   * @param clickAttacher function which attaches click handler to slide or its children elements in order to prevent event bubling\n   */\n  finishDragging(event, dragObj, clickAttacher) {\n    const directions = ['right', 'left'],\n      delta = this.difference(dragObj.pointer, this.pointer(event)),\n      stage = dragObj.stage.current,\n      direction = directions[+(this.settings.rtl ? delta.x < +this.settings.rtl : delta.x > +this.settings.rtl)];\n    let currentSlideI, current, newCurrent;\n    if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\n      this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed);\n      currentSlideI = this.closest(stage.x, delta.x !== 0 ? direction : dragObj.direction);\n      current = this.current();\n      newCurrent = this.current(currentSlideI === -1 ? undefined : currentSlideI);\n      if (current !== newCurrent) {\n        this.invalidate('position');\n        this.update();\n      }\n      dragObj.direction = direction;\n      if (Math.abs(delta.x) > 3 || new Date().getTime() - dragObj.time > 300) {\n        clickAttacher();\n      }\n    }\n    if (!this.is('dragging')) {\n      return;\n    }\n    this.leave('dragging');\n    this._trigger('dragged');\n  }\n  /**\n   * Gets absolute position of the closest item for a coordinate.\n   * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\n   * @param coordinate The coordinate in pixel.\n   * @param direction The direction to check for the closest item. Ether `left` or `right`.\n   * @returns The absolute position of the closest item.\n   */\n  closest(coordinate, direction) {\n    const pull = 30,\n      width = this.width();\n    let coordinates = this.coordinates(),\n      position = -1;\n    if (this.settings.center) {\n      coordinates = coordinates.map(item => {\n        if (item === 0) {\n          item += 0.000001;\n        }\n        return item;\n      });\n    }\n    // option 'freeDrag' doesn't have realization and using it here creates problem:\n    // variable 'position' stays unchanged (it equals -1 at the begging) and thus method returns -1\n    // Returning value is consumed by method current(), which taking -1 as argument calculates the index of new current slide\n    // In case of having 5 slides ans 'loop=false; calling 'current(-1)' sets props '_current' as 4. Just last slide remains visible instead of 3 last slides.\n    // if (!this.settings.freeDrag) {\n    // check closest item\n    for (let i = 0; i < coordinates.length; i++) {\n      if (direction === 'left' && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\n        position = i;\n        // on a right pull, check on previous index\n        // to do so, subtract width from value and set position = index + 1\n      } else if (direction === 'right' && coordinate > coordinates[i] - width - pull && coordinate < coordinates[i] - width + pull) {\n        position = i + 1;\n      } else if (this._op(coordinate, '<', coordinates[i]) && this._op(coordinate, '>', coordinates[i + 1] || coordinates[i] - width)) {\n        position = direction === 'left' ? i + 1 : i;\n      } else if (direction === null && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\n        position = i;\n      }\n      if (position !== -1) {\n        break;\n      }\n      ;\n    }\n    // }\n    if (!this.settings.loop) {\n      // non loop boundries\n      if (this._op(coordinate, '>', coordinates[this.minimum()])) {\n        position = coordinate = this.minimum();\n      } else if (this._op(coordinate, '<', coordinates[this.maximum()])) {\n        position = coordinate = this.maximum();\n      }\n    }\n    return position;\n  }\n  /**\n   * Animates the stage.\n   * @todo #270\n   * @param coordinate The coordinate in pixels.\n   */\n  animate(coordinate) {\n    const animate = this.speed() > 0;\n    if (this.is('animating')) {\n      this.onTransitionEnd();\n    }\n    if (animate) {\n      this.enter('animating');\n      this._trigger('translate');\n    }\n    this.stageData.transform = 'translate3d(' + coordinate + 'px,0px,0px)';\n    this.stageData.transition = this.speed() / 1000 + 's' + (this.settings.slideTransition ? ' ' + this.settings.slideTransition : '');\n    // also there was transition by means of JQuery.animate or css-changing property left\n  }\n  /**\n   * Checks whether the carousel is in a specific state or not.\n   * @param state The state to check.\n   * @returns The flag which indicates if the carousel is busy.\n   */\n  is(state) {\n    return this._states.current[state] && this._states.current[state] > 0;\n  }\n  /**\n   * Sets the absolute position of the current item.\n   * @param position The new absolute position or nothing to leave it unchanged.\n   * @returns The absolute position of the current item.\n   */\n  current(position) {\n    if (position === undefined) {\n      return this._current;\n    }\n    if (this._items.length === 0) {\n      return undefined;\n    }\n    position = this.normalize(position);\n    if (this._current !== position) {\n      const event = this._trigger('change', {\n        property: {\n          name: 'position',\n          value: position\n        }\n      });\n      // if (event.data !== undefined) {\n      // \tposition = this.normalize(event.data);\n      // }\n      this._current = position;\n      this.invalidate('position');\n      this._trigger('changed', {\n        property: {\n          name: 'position',\n          value: this._current\n        }\n      });\n    }\n    return this._current;\n  }\n  /**\n   * Invalidates the given part of the update routine.\n   * @param part The part to invalidate.\n   * @returns The invalidated parts.\n   */\n  invalidate(part) {\n    if (typeof part === 'string') {\n      this._invalidated[part] = true;\n      if (this.is('valid')) {\n        this.leave('valid');\n      }\n    }\n    return Object.keys(this._invalidated);\n  }\n  /**\n   * Resets the absolute position of the current item.\n   * @param position the absolute position of the new item.\n   */\n  reset(position) {\n    position = this.normalize(position);\n    if (position === undefined) {\n      return;\n    }\n    this._speed = 0;\n    this._current = position;\n    this._suppress(['translate', 'translated']);\n    this.animate(this.coordinates(position));\n    this._release(['translate', 'translated']);\n  }\n  /**\n   * Normalizes an absolute or a relative position of an item.\n   * @param position The absolute or relative position to normalize.\n   * @param relative Whether the given position is relative or not.\n   * @returns The normalized position.\n   */\n  normalize(position, relative) {\n    const n = this._items.length,\n      m = relative ? 0 : this._clones.length;\n    if (!this._isNumeric(position) || n < 1) {\n      position = undefined;\n    } else if (position < 0 || position >= n + m) {\n      position = ((position - m / 2) % n + n) % n + m / 2;\n    }\n    return position;\n  }\n  /**\n   * Converts an absolute position of an item into a relative one.\n   * @param position The absolute position to convert.\n   * @returns The converted position.\n   */\n  relative(position) {\n    position -= this._clones.length / 2;\n    return this.normalize(position, true);\n  }\n  /**\n   * Gets the maximum position for the current item.\n   * @param relative Whether to return an absolute position or a relative position.\n   * @returns number of maximum position\n   */\n  maximum(relative = false) {\n    const settings = this.settings;\n    let maximum = this._coordinates.length,\n      iterator,\n      reciprocalItemsWidth,\n      elementWidth;\n    if (settings.loop) {\n      maximum = this._clones.length / 2 + this._items.length - 1;\n    } else if (settings.autoWidth || settings.merge) {\n      iterator = this._items.length;\n      reciprocalItemsWidth = this.slidesData[--iterator].width;\n      elementWidth = this._width;\n      while (iterator-- > 0) {\n        // it could be use this._items instead of this.slidesData;\n        reciprocalItemsWidth += +this.slidesData[iterator].width + this.settings.margin;\n        if (reciprocalItemsWidth > elementWidth) {\n          break;\n        }\n      }\n      maximum = iterator + 1;\n    } else if (settings.center) {\n      maximum = this._items.length - 1;\n    } else {\n      maximum = this._items.length - settings.items;\n    }\n    if (relative) {\n      maximum -= this._clones.length / 2;\n    }\n    return Math.max(maximum, 0);\n  }\n  /**\n   * Gets the minimum position for the current item.\n   * @param relative Whether to return an absolute position or a relative position.\n   * @returns number of minimum position\n   */\n  minimum(relative = false) {\n    return relative ? 0 : this._clones.length / 2;\n  }\n  /**\n   * Gets an item at the specified relative position.\n   * @param position The relative position of the item.\n   * @returns The item at the given position or all items if no position was given.\n   */\n  items(position) {\n    if (position === undefined) {\n      return this._items.slice();\n    }\n    position = this.normalize(position, true);\n    return [this._items[position]];\n  }\n  /**\n   * Gets an item at the specified relative position.\n   * @param position The relative position of the item.\n   * @returns The item at the given position or all items if no position was given.\n   */\n  mergers(position) {\n    if (position === undefined) {\n      return this._mergers.slice();\n    }\n    position = this.normalize(position, true);\n    return this._mergers[position];\n  }\n  /**\n   * Gets the absolute positions of clones for an item.\n   * @param position The relative position of the item.\n   * @returns The absolute positions of clones for the item or all if no position was given.\n   */\n  clones(position) {\n    const odd = this._clones.length / 2,\n      even = odd + this._items.length,\n      map = index => index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2;\n    if (position === undefined) {\n      return this._clones.map((v, i) => map(i));\n    }\n    return this._clones.map((v, i) => v === position ? map(i) : null).filter(item => item);\n  }\n  /**\n   * Sets the current animation speed.\n   * @param speed The animation speed in milliseconds or nothing to leave it unchanged.\n   * @returns The current animation speed in milliseconds.\n   */\n  speed(speed) {\n    if (speed !== undefined) {\n      this._speed = speed;\n    }\n    return this._speed;\n  }\n  /**\n   * Gets the coordinate of an item.\n   * @todo The name of this method is missleanding.\n   * @param position The absolute position of the item within `minimum()` and `maximum()`.\n   * @returns The coordinate of the item in pixel or all coordinates.\n   */\n  coordinates(position) {\n    let multiplier = 1,\n      newPosition = position - 1,\n      coordinate,\n      result;\n    if (position === undefined) {\n      result = this._coordinates.map((item, index) => {\n        return this.coordinates(index);\n      });\n      return result;\n    }\n    if (this.settings.center) {\n      if (this.settings.rtl) {\n        multiplier = -1;\n        newPosition = position + 1;\n      }\n      coordinate = this._coordinates[position];\n      coordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\n    } else {\n      coordinate = this._coordinates[newPosition] || 0;\n    }\n    coordinate = Math.ceil(coordinate);\n    return coordinate;\n  }\n  /**\n   * Calculates the speed for a translation.\n   * @param from The absolute position of the start item.\n   * @param to The absolute position of the target item.\n   * @param factor [factor=undefined] - The time factor in milliseconds.\n   * @returns The time in milliseconds for the translation.\n   */\n  _duration(from, to, factor) {\n    if (factor === 0) {\n      return 0;\n    }\n    return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs(+factor || this.settings.smartSpeed);\n  }\n  /**\n   * Slides to the specified item.\n   * @param position The position of the item.\n   * @param speed The time in milliseconds for the transition.\n   */\n  to(position, speed) {\n    let current = this.current(),\n      revert = null,\n      distance = position - this.relative(current),\n      maximum = this.maximum(),\n      delayForLoop = 0;\n    const direction = +(distance > 0) - +(distance < 0),\n      items = this._items.length,\n      minimum = this.minimum();\n    if (this.settings.loop) {\n      if (!this.settings.rewind && Math.abs(distance) > items / 2) {\n        distance += direction * -1 * items;\n      }\n      position = current + distance;\n      revert = ((position - minimum) % items + items) % items + minimum;\n      if (revert !== position && revert - distance <= maximum && revert - distance > 0) {\n        current = revert - distance;\n        position = revert;\n        delayForLoop = 30;\n        this.reset(current);\n        this.sendChanges();\n      }\n    } else if (this.settings.rewind) {\n      maximum += 1;\n      position = (position % maximum + maximum) % maximum;\n    } else {\n      position = Math.max(minimum, Math.min(maximum, position));\n    }\n    setTimeout(() => {\n      this.speed(this._duration(current, position, speed));\n      this.current(position);\n      this.update();\n    }, delayForLoop);\n  }\n  /**\n   * Slides to the next item.\n   * @param speed The time in milliseconds for the transition.\n   */\n  next(speed) {\n    speed = speed || false;\n    this.to(this.relative(this.current()) + 1, speed);\n  }\n  /**\n   * Slides to the previous item.\n   * @param speed The time in milliseconds for the transition.\n   */\n  prev(speed) {\n    speed = speed || false;\n    this.to(this.relative(this.current()) - 1, speed);\n  }\n  /**\n   * Handles the end of an animation.\n   * @param event - The event arguments.\n   */\n  onTransitionEnd(event) {\n    // if css2 animation then event object is undefined\n    if (event !== undefined) {\n      // event.stopPropagation();\n      // // Catch only owl-stage transitionEnd event\n      // if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)\t) {\n      // \treturn false;\n      // }\n      return false;\n    }\n    this.leave('animating');\n    this._trigger('translated');\n  }\n  /**\n   * Gets viewport width.\n   * @returns - The width in pixel.\n   */\n  _viewport() {\n    let width;\n    if (this._width) {\n      width = this._width;\n    } else {\n      this.logger.log('Can not detect viewport width.');\n    }\n    return width;\n  }\n  /**\n   * Sets _items\n   * @param content The list of slides put into CarouselSlideDirectives.\n   */\n  setItems(content) {\n    this._items = content;\n  }\n  /**\n   * Sets slidesData using this._items\n   */\n  _defineSlidesData() {\n    // Maybe creating and using loadMap would be better in LazyLoadService.\n    // Hovewer in that case when 'resize' event fires, prop 'load' of all slides will get 'false' and such state of prop will be seen by View during its updating. Accordingly the code will remove slides's content from DOM even if it was loaded before.\n    // Thus it would be needed to add that content into DOM again.\n    // In order to avoid additional removing/adding loaded slides's content we use loadMap here and set restore state of prop 'load' before the View will get it.\n    let loadMap;\n    if (this.slidesData && this.slidesData.length) {\n      loadMap = new Map();\n      this.slidesData.forEach(item => {\n        if (item.load) {\n          loadMap.set(item.id, item.load);\n        }\n      });\n    }\n    this.slidesData = this._items.map(slide => {\n      return {\n        id: `${slide.id}`,\n        isActive: false,\n        tplRef: slide.tplRef,\n        dataMerge: slide.dataMerge,\n        width: 0,\n        isCloned: false,\n        load: loadMap ? loadMap.get(slide.id) : false,\n        hashFragment: slide.dataHash\n      };\n    });\n  }\n  /**\n   * Sets current classes for slide\n   * @param slide Slide of carousel\n   * @returns object with names of css-classes which are keys and true/false values\n   */\n  setCurSlideClasses(slide) {\n    // CSS classes: added/removed per current state of component properties\n    const currentClasses = {\n      'active': slide.isActive,\n      'center': slide.isCentered,\n      'cloned': slide.isCloned,\n      'animated': slide.isAnimated,\n      'owl-animated-in': slide.isDefAnimatedIn,\n      'owl-animated-out': slide.isDefAnimatedOut\n    };\n    if (this.settings.animateIn) {\n      currentClasses[this.settings.animateIn] = slide.isCustomAnimatedIn;\n    }\n    if (this.settings.animateOut) {\n      currentClasses[this.settings.animateOut] = slide.isCustomAnimatedOut;\n    }\n    return currentClasses;\n  }\n  /**\n   * Operators to calculate right-to-left and left-to-right.\n   * @param a - The left side operand.\n   * @param o - The operator.\n   * @param b - The right side operand.\n   * @returns true/false meaning right-to-left or left-to-right\n   */\n  _op(a, o, b) {\n    const rtl = this.settings.rtl;\n    switch (o) {\n      case '<':\n        return rtl ? a > b : a < b;\n      case '>':\n        return rtl ? a < b : a > b;\n      case '>=':\n        return rtl ? a <= b : a >= b;\n      case '<=':\n        return rtl ? a >= b : a <= b;\n      default:\n        break;\n    }\n  }\n  /**\n   * Triggers a public event.\n   * @todo Remove `status`, `relatedTarget` should be used instead.\n   * @param name The event name.\n   * @param data The event data.\n   * @param namespace The event namespace.\n   * @param state The state which is associated with the event.\n   * @param enter Indicates if the call enters the specified state or not.\n   */\n  _trigger(name, data, namespace, state, enter) {\n    switch (name) {\n      case 'initialized':\n        this._initializedCarousel$.next(name);\n        break;\n      case 'change':\n        this._changeSettingsCarousel$.next(data);\n        break;\n      case 'changed':\n        this._changedSettingsCarousel$.next(data);\n        break;\n      case 'drag':\n        this._dragCarousel$.next(name);\n        break;\n      case 'dragged':\n        this._draggedCarousel$.next(name);\n        break;\n      case 'resize':\n        this._resizeCarousel$.next(name);\n        break;\n      case 'resized':\n        this._resizedCarousel$.next(name);\n        break;\n      case 'refresh':\n        this._refreshCarousel$.next(name);\n        break;\n      case 'refreshed':\n        this._refreshedCarousel$.next(name);\n        break;\n      case 'translate':\n        this._translateCarousel$.next(name);\n        break;\n      case 'translated':\n        this._translatedCarousel$.next(name);\n        break;\n      default:\n        break;\n    }\n  }\n  /**\n   * Enters a state.\n   * @param name - The state name.\n   */\n  enter(name) {\n    [name].concat(this._states.tags[name] || []).forEach(stateName => {\n      if (this._states.current[stateName] === undefined) {\n        this._states.current[stateName] = 0;\n      }\n      this._states.current[stateName]++;\n    });\n  }\n  /**\n   * Leaves a state.\n   * @param name - The state name.\n   */\n  leave(name) {\n    [name].concat(this._states.tags[name] || []).forEach(stateName => {\n      if (this._states.current[stateName] === 0 || !!this._states.current[stateName]) {\n        this._states.current[stateName]--;\n      }\n    });\n  }\n  /**\n   * Registers an event or state.\n   * @param object - The event or state to register.\n   */\n  register(object) {\n    if (object.type === Type.State) {\n      if (!this._states.tags[object.name]) {\n        this._states.tags[object.name] = object.tags;\n      } else {\n        this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\n      }\n      this._states.tags[object.name] = this._states.tags[object.name].filter((tag, i) => {\n        return this._states.tags[object.name].indexOf(tag) === i;\n      });\n    }\n  }\n  /**\n   * Suppresses events.\n   * @param events The events to suppress.\n   */\n  _suppress(events) {\n    events.forEach(event => {\n      this._supress[event] = true;\n    });\n  }\n  /**\n   * Releases suppressed events.\n   * @param events The events to release.\n   */\n  _release(events) {\n    events.forEach(event => {\n      delete this._supress[event];\n    });\n  }\n  /**\n   * Gets unified pointer coordinates from event.\n   * @todo #261\n   * @param event The `mousedown` or `touchstart` event.\n   * @returns Object Coords which contains `x` and `y` coordinates of current pointer position.\n   */\n  pointer(event) {\n    const result = {\n      x: null,\n      y: null\n    };\n    event = event.originalEvent || event || window.event;\n    event = event.touches && event.touches.length ? event.touches[0] : event.changedTouches && event.changedTouches.length ? event.changedTouches[0] : event;\n    if (event.pageX) {\n      result.x = event.pageX;\n      result.y = event.pageY;\n    } else {\n      result.x = event.clientX;\n      result.y = event.clientY;\n    }\n    return result;\n  }\n  /**\n   * Determines if the input is a Number or something that can be coerced to a Number\n   * @param number The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number\n   */\n  _isNumeric(number) {\n    return !isNaN(parseFloat(number));\n  }\n  /**\n   * Determines whether value is number or boolean type\n   * @param value The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number, or Boolean\n   */\n  _isNumberOrBoolean(value) {\n    return this._isNumeric(value) || typeof value === 'boolean';\n  }\n  /**\n   * Determines whether value is number or string type\n   * @param value The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number, or String\n   */\n  _isNumberOrString(value) {\n    return this._isNumeric(value) || typeof value === 'string';\n  }\n  /**\n   * Determines whether value is number or string type\n   * @param value The input to be tested\n   * @returns An indication if the input is a Number or can be coerced to a Number, or String\n   */\n  _isStringOrBoolean(value) {\n    return typeof value === 'string' || typeof value === 'boolean';\n  }\n  /**\n   * Gets the difference of two vectors.\n   * @todo #261\n   * @param first The first vector.\n   * @param second The second vector.\n   * @returns The difference.\n   */\n  difference(first, second) {\n    if (null === first || null === second) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    return {\n      x: first.x - second.x,\n      y: first.y - second.y\n    };\n  }\n  static Éµfac = function CarouselService_Factory(t) {\n    return new (t || CarouselService)(i0.ÉµÉµinject(OwlLogger));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: CarouselService,\n    factory: CarouselService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CarouselService, [{\n    type: Injectable\n  }], () => [{\n    type: OwlLogger\n  }], null);\n})();\nclass NavigationService {\n  carouselService;\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  navSubscription;\n  /**\n   * Indicates whether the plugin is initialized or not.\n   */\n  _initialized = false;\n  /**\n   * The current paging indexes.\n   */\n  _pages = [];\n  /**\n   * Data for navigation elements of the user interface.\n   */\n  _navData = {\n    disabled: false,\n    prev: {\n      disabled: false,\n      htmlText: ''\n    },\n    next: {\n      disabled: false,\n      htmlText: ''\n    }\n  };\n  /**\n   * Data for dot elements of the user interface.\n   */\n  _dotsData = {\n    disabled: false,\n    dots: []\n  };\n  constructor(carouselService) {\n    this.carouselService = carouselService;\n    this.spyDataStreams();\n  }\n  ngOnDestroy() {\n    this.navSubscription.unsubscribe();\n  }\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(state => {\n      this.initialize();\n      this._updateNavPages();\n      this.draw();\n      this.update();\n      this.carouselService.sendChanges();\n    }));\n    // mostly changes in carouselService and carousel at all causes carouselService.to(). It moves stage right-left by its code and calling needed functions\n    // Thus this method by calling carouselService.current(position) notifies about changes\n    const changedSettings$ = this.carouselService.getChangedState().pipe(filter(data => data.property.name === 'position'), tap(data => {\n      this.update();\n      // should be the call of the function written at the end of comment\n      // but the method carouselServive.to() has setTimeout(f, 0) which contains carouselServive.update() which calls sendChanges() method.\n      // carouselService.navData and carouselService.dotsData update earlier than carouselServive.update() gets called\n      // updates of carouselService.navData and carouselService.dotsData are being happening withing carouselService.current(position) method which calls next() of _changedSettingsCarousel$\n      // carouselService.current(position) is being calling earlier than carouselServive.update();\n      // this.carouselService.sendChanges();\n    }));\n    const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(() => {\n      this._updateNavPages();\n      this.draw();\n      this.update();\n      this.carouselService.sendChanges();\n    }));\n    const navMerge$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\n    this.navSubscription = navMerge$.subscribe(() => {});\n  }\n  /**\n     * Initializes the layout of the plugin and extends the carousel.\n     */\n  initialize() {\n    this._navData.disabled = true;\n    this._navData.prev.htmlText = this.carouselService.settings.navText[0];\n    this._navData.next.htmlText = this.carouselService.settings.navText[1];\n    this._dotsData.disabled = true;\n    this.carouselService.navData = this._navData;\n    this.carouselService.dotsData = this._dotsData;\n  }\n  /**\n   * Calculates internal states and updates prop _pages\n   */\n  _updateNavPages() {\n    let i, j, k;\n    const lower = this.carouselService.clones().length / 2,\n      upper = lower + this.carouselService.items().length,\n      maximum = this.carouselService.maximum(true),\n      pages = [],\n      settings = this.carouselService.settings;\n    let size = settings.center || settings.autoWidth || settings.dotsData ? 1 : Math.floor(Number(settings.dotsEach)) || Math.floor(settings.items);\n    size = +size;\n    if (settings.slideBy !== 'page') {\n      settings.slideBy = Math.min(+settings.slideBy, settings.items);\n    }\n    if (settings.dots || settings.slideBy === 'page') {\n      for (i = lower, j = 0, k = 0; i < upper; i++) {\n        if (j >= size || j === 0) {\n          pages.push({\n            start: Math.min(maximum, i - lower),\n            end: i - lower + size - 1\n          });\n          if (Math.min(maximum, i - lower) === maximum) {\n            break;\n          }\n          j = 0, ++k;\n        }\n        j += this.carouselService.mergers(this.carouselService.relative(i));\n      }\n    }\n    this._pages = pages;\n  }\n  /**\n     * Draws the user interface.\n     * @todo The option `dotsData` wont work.\n     */\n  draw() {\n    let difference;\n    const settings = this.carouselService.settings,\n      items = this.carouselService.items(),\n      disabled = items.length <= settings.items;\n    this._navData.disabled = !settings.nav || disabled;\n    this._dotsData.disabled = !settings.dots || disabled;\n    if (settings.dots) {\n      difference = this._pages.length - this._dotsData.dots.length;\n      if (settings.dotsData && difference !== 0) {\n        this._dotsData.dots = [];\n        items.forEach(item => {\n          this._dotsData.dots.push({\n            active: false,\n            id: `dot-${item.id}`,\n            innerContent: item.dotContent,\n            showInnerContent: true\n          });\n        });\n      } else if (difference > 0) {\n        const startI = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;\n        for (let i = 0; i < difference; i++) {\n          this._dotsData.dots.push({\n            active: false,\n            id: `dot-${i + startI}`,\n            innerContent: '',\n            showInnerContent: false\n          });\n        }\n      } else if (difference < 0) {\n        this._dotsData.dots.splice(difference, Math.abs(difference));\n      }\n    }\n    this.carouselService.navData = this._navData;\n    this.carouselService.dotsData = this._dotsData;\n  }\n  /**\n   * Updates navigation buttons's and dots's states\n   */\n  update() {\n    this._updateNavButtons();\n    this._updateDots();\n  }\n  /**\n   * Changes state of nav buttons (disabled, enabled)\n   */\n  _updateNavButtons() {\n    const settings = this.carouselService.settings,\n      loop = settings.loop || settings.rewind,\n      index = this.carouselService.relative(this.carouselService.current());\n    if (settings.nav) {\n      this._navData.prev.disabled = !loop && index <= this.carouselService.minimum(true);\n      this._navData.next.disabled = !loop && index >= this.carouselService.maximum(true);\n    }\n    this.carouselService.navData = this._navData;\n  }\n  /**\n   * Changes active dot if page becomes changed\n   */\n  _updateDots() {\n    let curActiveDotI;\n    if (!this.carouselService.settings.dots) {\n      return;\n    }\n    this._dotsData.dots.forEach(item => {\n      if (item.active === true) {\n        item.active = false;\n      }\n    });\n    curActiveDotI = this._current();\n    if (this._dotsData.dots.length) {\n      this._dotsData.dots[curActiveDotI].active = true;\n    }\n    this.carouselService.dotsData = this._dotsData;\n  }\n  /**\n     * Gets the current page position of the carousel.\n     * @returns the current page position of the carousel\n     */\n  _current() {\n    const current = this.carouselService.relative(this.carouselService.current());\n    let finalCurrent;\n    const pages = this._pages.filter((page, index) => {\n      return page.start <= current && page.end >= current;\n    }).pop();\n    finalCurrent = this._pages.findIndex(page => {\n      return page.start === pages.start && page.end === pages.end;\n    });\n    return finalCurrent;\n  }\n  /**\n     * Gets the current succesor/predecessor position.\n   * @param sussessor position of slide\n     * @returns the current succesor/predecessor position\n     */\n  _getPosition(successor) {\n    let position, length;\n    const settings = this.carouselService.settings;\n    if (settings.slideBy === 'page') {\n      position = this._current();\n      length = this._pages.length;\n      successor ? ++position : --position;\n      position = this._pages[(position % length + length) % length].start;\n    } else {\n      position = this.carouselService.relative(this.carouselService.current());\n      length = this.carouselService.items().length;\n      successor ? position += +settings.slideBy : position -= +settings.slideBy;\n    }\n    return position;\n  }\n  /**\n     * Slides to the next item or page.\n     * @param speed The time in milliseconds for the transition.\n     */\n  next(speed) {\n    this.carouselService.to(this._getPosition(true), speed);\n  }\n  /**\n   * Slides to the previous item or page.\n   * @param speed The time in milliseconds for the transition.\n   */\n  prev(speed) {\n    this.carouselService.to(this._getPosition(false), speed);\n  }\n  /**\n   * Slides to the specified item or page.\n   * @param position - The position of the item or page.\n   * @param speed - The time in milliseconds for the transition.\n   * @param standard - Whether to use the standard behaviour or not. Default meaning false\n   */\n  to(position, speed, standard) {\n    let length;\n    if (!standard && this._pages.length) {\n      length = this._pages.length;\n      this.carouselService.to(this._pages[(position % length + length) % length].start, speed);\n    } else {\n      this.carouselService.to(position, speed);\n    }\n  }\n  /**\n   * Moves carousel after user's clicking on any dots\n   */\n  moveByDot(dotId) {\n    const index = this._dotsData.dots.findIndex(dot => dotId === dot.id);\n    this.to(index, this.carouselService.settings.dotsSpeed);\n  }\n  /**\n   * rewinds carousel to slide with needed id\n   * @param id id of slide\n   */\n  toSlideById(id) {\n    const position = this.carouselService.slidesData.findIndex(slide => slide.id === id && slide.isCloned === false);\n    if (position === -1 || position === this.carouselService.current()) {\n      return;\n    }\n    this.carouselService.to(this.carouselService.relative(position), false);\n  }\n  static Éµfac = function NavigationService_Factory(t) {\n    return new (t || NavigationService)(i0.ÉµÉµinject(CarouselService));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: NavigationService,\n    factory: NavigationService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], () => [{\n    type: CarouselService\n  }], null);\n})();\n\n// import { Injectable } from '@angular/core';\n// function _window(): any {\n//    // return the global native browser window object\n//    return window;\n// }\n// @Injectable()\n// export class WindowRefService {\n//    get nativeWindow(): any {\n//       return _window();\n//    }\n// }\n/**\n * Create a new injection token for injecting the window into a component.\n */\nconst WINDOW = new InjectionToken('WindowToken');\n/**\n * Define abstract class for obtaining reference to the global window object.\n */\nclass WindowRef {\n  get nativeWindow() {\n    throw new Error('Not implemented.');\n  }\n}\n/**\n * Define class that implements the abstract class and returns the native window object.\n */\nclass BrowserWindowRef extends WindowRef {\n  constructor() {\n    super();\n  }\n  /**\n   * @returns window object\n   */\n  get nativeWindow() {\n    return window;\n  }\n  static Éµfac = function BrowserWindowRef_Factory(t) {\n    return new (t || BrowserWindowRef)();\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: BrowserWindowRef,\n    factory: BrowserWindowRef.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BrowserWindowRef, [{\n    type: Injectable\n  }], () => [], null);\n})();\n/**\n * Create an factory function that returns the native window object.\n * @param browserWindowRef Native window object\n * @param platformId id of platform\n * @returns type of platform of empty object\n */\nfunction windowFactory(browserWindowRef, platformId) {\n  if (isPlatformBrowser(platformId)) {\n    return browserWindowRef.nativeWindow;\n  }\n  const obj = {\n    setTimeout: (func, time) => {},\n    clearTimeout: a => {}\n  };\n  return obj;\n}\n/**\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\n */\nconst browserWindowProvider = {\n  provide: WindowRef,\n  useClass: BrowserWindowRef\n};\n/**\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\n */\nconst windowProvider = {\n  provide: WINDOW,\n  useFactory: windowFactory,\n  deps: [WindowRef, PLATFORM_ID]\n};\n/**\n * Create an array of providers.\n */\nconst WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];\n\n/**\n * Create a new injection token for injecting the Document into a component.\n */\nconst DOCUMENT = new InjectionToken('DocumentToken');\n/**\n * Define abstract class for obtaining reference to the global Document object.\n */\nclass DocumentRef {\n  get nativeDocument() {\n    throw new Error('Not implemented.');\n  }\n}\n/**\n * Define class that implements the abstract class and returns the native Document object.\n */\nclass BrowserDocumentRef extends DocumentRef {\n  constructor() {\n    super();\n  }\n  /**\n   * @returns Document object\n   */\n  get nativeDocument() {\n    return document;\n  }\n  static Éµfac = function BrowserDocumentRef_Factory(t) {\n    return new (t || BrowserDocumentRef)();\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: BrowserDocumentRef,\n    factory: BrowserDocumentRef.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BrowserDocumentRef, [{\n    type: Injectable\n  }], () => [], null);\n})();\n/**\n * Create an factory function that returns the native Document object.\n * @param browserDocumentRef Native Document object\n * @param platformId id of platform\n * @returns type of platform of empty object\n */\nfunction documentFactory(browserDocumentRef, platformId) {\n  if (isPlatformBrowser(platformId)) {\n    return browserDocumentRef.nativeDocument;\n  }\n  const doc = {\n    hidden: false,\n    visibilityState: 'visible'\n  };\n  return doc;\n}\n/**\n * Create a injectable provider for the DocumentRef token that uses the BrowserDocumentRef class.\n */\nconst browserDocumentProvider = {\n  provide: DocumentRef,\n  useClass: BrowserDocumentRef\n};\n/**\n * Create an injectable provider that uses the DocumentFactory function for returning the native Document object.\n */\nconst documentProvider = {\n  provide: DOCUMENT,\n  useFactory: documentFactory,\n  deps: [DocumentRef, PLATFORM_ID]\n};\n/**\n * Create an array of providers.\n */\nconst DOCUMENT_PROVIDERS = [browserDocumentProvider, documentProvider];\nclass AutoplayService {\n  carouselService;\n  ngZone;\n  /**\n   * Subscrioption to merge Observables from CarouselService\n   */\n  autoplaySubscription;\n  /**\n   * The autoplay timeout.\n   */\n  _timeout = null;\n  /**\n   * Indicates whenever the autoplay is paused.\n   */\n  _paused = false;\n  /**\n   * Shows whether the code (the plugin) changed the option 'AutoplayTimeout' for own needs\n   */\n  _isArtificialAutoplayTimeout;\n  /**\n   * Shows whether the autoplay is paused for unlimited time by the developer.\n   * Use to prevent autoplaying in case of firing `mouseleave` by adding layers to `<body>` like `mat-menu` does\n   */\n  _isAutoplayStopped = false;\n  get isAutoplayStopped() {\n    return this._isAutoplayStopped;\n  }\n  set isAutoplayStopped(value) {\n    this._isAutoplayStopped = value;\n  }\n  winRef;\n  docRef;\n  constructor(carouselService, winRef, docRef, ngZone) {\n    this.carouselService = carouselService;\n    this.ngZone = ngZone;\n    this.winRef = winRef;\n    this.docRef = docRef;\n    this.spyDataStreams();\n  }\n  ngOnDestroy() {\n    this.autoplaySubscription.unsubscribe();\n  }\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\n      if (this.carouselService.settings.autoplay) {\n        this.play();\n      }\n    }));\n    const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\n      this._handleChangeObservable(data);\n    }));\n    const resized$ = this.carouselService.getResizedState().pipe(tap(() => {\n      if (this.carouselService.settings.autoplay && !this._isAutoplayStopped) {\n        this.play();\n      } else {\n        this.stop();\n      }\n    }));\n    // original Autoplay Plugin has listeners on play.owl.core and stop.owl.core events.\n    // They are triggered by Video Plugin\n    const autoplayMerge$ = merge(initializedCarousel$, changedSettings$, resized$);\n    this.autoplaySubscription = autoplayMerge$.subscribe(() => {});\n  }\n  /**\n     * Starts the autoplay.\n     * @param timeout The interval before the next animation starts.\n     * @param speed The animation speed for the animations.\n     */\n  play(timeout, speed) {\n    if (this._paused) {\n      this._paused = false;\n      this._setAutoPlayInterval(this.carouselService.settings.autoplayMouseleaveTimeout);\n    }\n    if (this.carouselService.is('rotating')) {\n      return;\n    }\n    this.carouselService.enter('rotating');\n    this._setAutoPlayInterval();\n  }\n  /**\n     * Gets a new timeout\n     * @param timeout - The interval before the next animation starts.\n     * @param speed - The animation speed for the animations.\n     * @return\n     */\n  _getNextTimeout(timeout, speed) {\n    if (this._timeout) {\n      this.winRef.clearTimeout(this._timeout);\n    }\n    this._isArtificialAutoplayTimeout = timeout ? true : false;\n    return this.ngZone.runOutsideAngular(() => {\n      return this.winRef.setTimeout(() => {\n        this.ngZone.run(() => {\n          if (this._paused || this.carouselService.is('busy') || this.carouselService.is('interacting') || this.docRef.hidden) {\n            return;\n          }\n          this.carouselService.next(speed || this.carouselService.settings.autoplaySpeed);\n        });\n      }, timeout || this.carouselService.settings.autoplayTimeout);\n    });\n  }\n  /**\n     * Sets autoplay in motion.\n     */\n  _setAutoPlayInterval(timeout) {\n    this._timeout = this._getNextTimeout(timeout);\n  }\n  /**\n   * Stops the autoplay.\n   */\n  stop() {\n    if (!this.carouselService.is('rotating')) {\n      return;\n    }\n    this._paused = true;\n    this.winRef.clearTimeout(this._timeout);\n    this.carouselService.leave('rotating');\n  }\n  /**\n     * Stops the autoplay.\n     */\n  pause() {\n    if (!this.carouselService.is('rotating')) {\n      return;\n    }\n    this._paused = true;\n  }\n  /**\n   * Manages by autoplaying according to data passed by _changedSettingsCarousel$ Obsarvable\n   * @param data object with current position of carousel and type of change\n   */\n  _handleChangeObservable(data) {\n    if (data.property.name === 'settings') {\n      if (this.carouselService.settings.autoplay) {\n        this.play();\n      } else {\n        this.stop();\n      }\n    } else if (data.property.name === 'position') {\n      //console.log('play?', e);\n      if (this.carouselService.settings.autoplay) {\n        this._setAutoPlayInterval();\n      }\n    }\n  }\n  /**\n   * Starts autoplaying of the carousel in the case when user leaves the carousel before it starts translateing (moving)\n   */\n  _playAfterTranslated() {\n    of('translated').pipe(switchMap(data => this.carouselService.getTranslatedState()), first(), filter(() => this._isArtificialAutoplayTimeout), tap(() => this._setAutoPlayInterval())).subscribe(() => {});\n  }\n  /**\n   * Starts pausing\n   */\n  startPausing() {\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n      this.pause();\n    }\n  }\n  /**\n   * Starts playing after mouse leaves carousel\n   */\n  startPlayingMouseLeave() {\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n      this.play();\n      this._playAfterTranslated();\n    }\n  }\n  /**\n   * Starts playing after touch ends\n   */\n  startPlayingTouchEnd() {\n    if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n      this.play();\n      this._playAfterTranslated();\n    }\n  }\n  static Éµfac = function AutoplayService_Factory(t) {\n    return new (t || AutoplayService)(i0.ÉµÉµinject(CarouselService), i0.ÉµÉµinject(WINDOW), i0.ÉµÉµinject(DOCUMENT), i0.ÉµÉµinject(i0.NgZone));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: AutoplayService,\n    factory: AutoplayService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AutoplayService, [{\n    type: Injectable\n  }], () => [{\n    type: CarouselService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [WINDOW]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\nclass LazyLoadService {\n  carouselService;\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  lazyLoadSubscription;\n  constructor(carouselService) {\n    this.carouselService = carouselService;\n    this.spyDataStreams();\n  }\n  ngOnDestroy() {\n    this.lazyLoadSubscription.unsubscribe();\n  }\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\n      const isLazyLoad = this.carouselService.settings && !this.carouselService.settings.lazyLoad;\n      this.carouselService.slidesData.forEach(item => item.load = isLazyLoad ? true : false);\n    }));\n    const changeSettings$ = this.carouselService.getChangeState();\n    const resizedCarousel$ = this.carouselService.getResizedState();\n    const lazyLoadMerge$ = merge(initializedCarousel$, changeSettings$, resizedCarousel$).pipe(tap(data => this._defineLazyLoadSlides(data)));\n    this.lazyLoadSubscription = lazyLoadMerge$.subscribe(() => {});\n  }\n  _defineLazyLoadSlides(data) {\n    if (!this.carouselService.settings || !this.carouselService.settings.lazyLoad) {\n      return;\n    }\n    if (data.property && data.property.name === 'position' || data === 'initialized' || data === \"resized\") {\n      const settings = this.carouselService.settings,\n        clones = this.carouselService.clones().length;\n      let n = settings.center && Math.ceil(settings.items / 2) || settings.items,\n        i = settings.center && n * -1 || 0,\n        position = (data.property && data.property.value !== undefined ? data.property.value : this.carouselService.current()) + i;\n      // load = $.proxy(function(i, v) { this.load(v) }, this);\n      //TODO: Need documentation for this new option\n      if (settings.lazyLoadEager > 0) {\n        n += settings.lazyLoadEager;\n        // If the carousel is looping also preload images that are to the \"left\"\n        if (settings.loop) {\n          position -= settings.lazyLoadEager;\n          n++;\n        }\n      }\n      while (i++ < n) {\n        this._load(clones / 2 + this.carouselService.relative(position));\n        if (clones) {\n          this.carouselService.clones(this.carouselService.relative(position)).forEach(value => this._load(value));\n        }\n        position++;\n      }\n    }\n  }\n  /**\n     * Loads all resources of an item at the specified position.\n     * @param position - The absolute position of the item.\n     */\n  _load(position) {\n    if (this.carouselService.slidesData[position].load) {\n      return;\n    }\n    this.carouselService.slidesData[position].load = true;\n  }\n  static Éµfac = function LazyLoadService_Factory(t) {\n    return new (t || LazyLoadService)(i0.ÉµÉµinject(CarouselService));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: LazyLoadService,\n    factory: LazyLoadService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(LazyLoadService, [{\n    type: Injectable\n  }], () => [{\n    type: CarouselService\n  }], null);\n})();\nclass AnimateService {\n  carouselService;\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  animateSubscription;\n  /**\n   * s\n   */\n  swapping = true;\n  /**\n   * active slide before translating\n   */\n  previous = undefined;\n  /**\n   * new active slide after translating\n   */\n  next = undefined;\n  constructor(carouselService) {\n    this.carouselService = carouselService;\n    this.spyDataStreams();\n  }\n  ngOnDestroy() {\n    this.animateSubscription.unsubscribe();\n  }\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const changeSettings$ = this.carouselService.getChangeState().pipe(tap(data => {\n      if (data.property.name === 'position') {\n        this.previous = this.carouselService.current();\n        this.next = data.property.value;\n      }\n    }));\n    const dragCarousel$ = this.carouselService.getDragState();\n    const draggedCarousel$ = this.carouselService.getDraggedState();\n    const translatedCarousel$ = this.carouselService.getTranslatedState();\n    const dragTranslatedMerge$ = merge(dragCarousel$, draggedCarousel$, translatedCarousel$).pipe(tap(data => this.swapping = data === 'translated'));\n    const translateCarousel$ = this.carouselService.getTranslateState().pipe(tap(data => {\n      if (this.swapping && (this.carouselService._options.animateOut || this.carouselService._options.animateIn)) {\n        this._swap();\n      }\n    }));\n    const animateMerge$ = merge(changeSettings$, translateCarousel$, dragTranslatedMerge$).pipe();\n    this.animateSubscription = animateMerge$.subscribe(() => {});\n  }\n  /**\n     * Toggles the animation classes whenever an translations starts.\n     * @returns\n     */\n  _swap() {\n    if (this.carouselService.settings.items !== 1) {\n      return;\n    }\n    // if (!$.support.animation || !$.support.transition) {\n    // \treturn;\n    // }\n    this.carouselService.speed(0);\n    let left;\n    const previous = this.carouselService.slidesData[this.previous],\n      next = this.carouselService.slidesData[this.next],\n      incoming = this.carouselService.settings.animateIn,\n      outgoing = this.carouselService.settings.animateOut;\n    if (this.carouselService.current() === this.previous) {\n      return;\n    }\n    if (outgoing) {\n      left = +this.carouselService.coordinates(this.previous) - +this.carouselService.coordinates(this.next);\n      this.carouselService.slidesData.forEach(slide => {\n        if (slide.id === previous.id) {\n          slide.left = `${left}px`;\n          slide.isAnimated = true;\n          slide.isDefAnimatedOut = true;\n          slide.isCustomAnimatedOut = true;\n        }\n      });\n    }\n    if (incoming) {\n      this.carouselService.slidesData.forEach(slide => {\n        if (slide.id === next.id) {\n          slide.isAnimated = true;\n          slide.isDefAnimatedIn = true;\n          slide.isCustomAnimatedIn = true;\n        }\n      });\n    }\n  }\n  /**\n   * Handles the end of 'animationend' event\n   * @param id Id of slides\n   */\n  clear(id) {\n    this.carouselService.slidesData.forEach(slide => {\n      if (slide.id === id) {\n        slide.left = '';\n        slide.isAnimated = false;\n        slide.isDefAnimatedOut = false;\n        slide.isCustomAnimatedOut = false;\n        slide.isDefAnimatedIn = false;\n        slide.isCustomAnimatedIn = false;\n        slide.classes = this.carouselService.setCurSlideClasses(slide);\n      }\n    });\n    this.carouselService.onTransitionEnd();\n  }\n  static Éµfac = function AnimateService_Factory(t) {\n    return new (t || AnimateService)(i0.ÉµÉµinject(CarouselService));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: AnimateService,\n    factory: AnimateService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AnimateService, [{\n    type: Injectable\n  }], () => [{\n    type: CarouselService\n  }], null);\n})();\nclass AutoHeightService {\n  carouselService;\n  /**\n   * Subscrioption to merge Observable  from CarouselService\n   */\n  autoHeightSubscription;\n  constructor(carouselService) {\n    this.carouselService = carouselService;\n    this.spyDataStreams();\n  }\n  ngOnDestroy() {\n    this.autoHeightSubscription.unsubscribe();\n  }\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(data => {\n      if (this.carouselService.settings.autoHeight) {\n        this.update();\n      } else {\n        this.carouselService.slidesData.forEach(slide => slide.heightState = 'full');\n      }\n    }));\n    const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\n      if (this.carouselService.settings.autoHeight && data.property.name === 'position') {\n        this.update();\n      }\n    }));\n    const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(data => {\n      if (this.carouselService.settings.autoHeight) {\n        this.update();\n      }\n    }));\n    const autoHeight$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\n    this.autoHeightSubscription = autoHeight$.subscribe(() => {});\n  }\n  /**\n   * Updates the prop 'heightState' of slides\n   */\n  update() {\n    const items = this.carouselService.settings.items;\n    let start = this.carouselService.current(),\n      end = start + items;\n    if (this.carouselService.settings.center) {\n      start = items % 2 === 1 ? start - (items - 1) / 2 : start - items / 2;\n      end = items % 2 === 1 ? start + items : start + items + 1;\n    }\n    this.carouselService.slidesData.forEach((slide, i) => {\n      slide.heightState = i >= start && i < end ? 'full' : 'nulled';\n    });\n  }\n  static Éµfac = function AutoHeightService_Factory(t) {\n    return new (t || AutoHeightService)(i0.ÉµÉµinject(CarouselService));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: AutoHeightService,\n    factory: AutoHeightService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AutoHeightService, [{\n    type: Injectable\n  }], () => [{\n    type: CarouselService\n  }], null);\n})();\nclass HashService {\n  carouselService;\n  route;\n  router;\n  /**\n   * Subscription to merge Observable from CarouselService\n   */\n  hashSubscription;\n  /**\n   * Current url fragment (hash)\n   */\n  currentHashFragment;\n  constructor(carouselService, route, router) {\n    this.carouselService = carouselService;\n    this.route = route;\n    this.router = router;\n    this.spyDataStreams();\n    if (!this.route) {\n      this.route = {\n        fragment: of('no route').pipe(take(1))\n      };\n    }\n    ;\n    if (!this.router) {\n      this.router = {\n        navigate: (commands, extras) => {\n          return;\n        }\n      };\n    }\n  }\n  ngOnDestroy() {\n    this.hashSubscription.unsubscribe();\n  }\n  /**\n   * Defines Observables which service must observe\n   */\n  spyDataStreams() {\n    const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => this.listenToRoute()));\n    const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\n      if (this.carouselService.settings.URLhashListener && data.property.name === 'position') {\n        const newCurSlide = this.carouselService.current();\n        const newCurFragment = this.carouselService.slidesData[newCurSlide].hashFragment;\n        if (!newCurFragment || newCurFragment === this.currentHashFragment) {\n          return;\n        }\n        this.router.navigate(['./'], {\n          fragment: newCurFragment,\n          relativeTo: this.route\n        });\n      }\n    }));\n    const hashFragment$ = merge(initializedCarousel$, changedSettings$);\n    this.hashSubscription = hashFragment$.subscribe(() => {});\n  }\n  /**\n   * rewinds carousel to slide which has the same hashFragment as fragment of current url\n   * @param fragment fragment of url\n   */\n  rewind(fragment) {\n    const position = this.carouselService.slidesData.findIndex(slide => slide.hashFragment === fragment && slide.isCloned === false);\n    if (position === -1 || position === this.carouselService.current()) {\n      return;\n    }\n    this.carouselService.to(this.carouselService.relative(position), false);\n  }\n  /**\n   * Initiate listening to ActivatedRoute.fragment\n   */\n  listenToRoute() {\n    const count = this.carouselService.settings.startPosition === 'URLHash' ? 0 : 2;\n    this.route.fragment.pipe(skip(count)).subscribe(fragment => {\n      this.currentHashFragment = fragment;\n      this.rewind(fragment);\n    });\n  }\n  static Éµfac = function HashService_Factory(t) {\n    return new (t || HashService)(i0.ÉµÉµinject(CarouselService), i0.ÉµÉµinject(i1.ActivatedRoute, 8), i0.ÉµÉµinject(i1.Router, 8));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: HashService,\n    factory: HashService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(HashService, [{\n    type: Injectable\n  }], () => [{\n    type: CarouselService\n  }, {\n    type: i1.ActivatedRoute,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i1.Router,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nlet nextId = 0;\nclass CarouselSlideDirective {\n  tplRef;\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n  id = `owl-slide-${nextId++}`;\n  /**\n   * Defines how much widths of common slide will current slide have\n   * e.g. if _mergeData=2, the slide will twice wider then slides with _mergeData=1\n   */\n  _dataMerge = 1;\n  set dataMerge(data) {\n    this._dataMerge = this.isNumeric(data) ? data : 1;\n  }\n  get dataMerge() {\n    return this._dataMerge;\n  }\n  /**\n   * Width of slide\n   */\n  width = 0;\n  /**\n   * Inner content of dot for certain slide; can be html-markup\n   */\n  dotContent = '';\n  /**\n   * Hash (fragment) of url which corresponds to certain slide\n   */\n  dataHash = '';\n  constructor(tplRef) {\n    this.tplRef = tplRef;\n  }\n  /**\n     * Determines if the input is a Number or something that can be coerced to a Number\n     * @param - The input to be tested\n     * @returns - An indication if the input is a Number or can be coerced to a Number\n     */\n  isNumeric(number) {\n    return !isNaN(parseFloat(number));\n  }\n  static Éµfac = function CarouselSlideDirective_Factory(t) {\n    return new (t || CarouselSlideDirective)(i0.ÉµÉµdirectiveInject(i0.TemplateRef));\n  };\n  static Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n    type: CarouselSlideDirective,\n    selectors: [[\"ng-template\", \"carouselSlide\", \"\"]],\n    inputs: {\n      id: \"id\",\n      dataMerge: \"dataMerge\",\n      width: \"width\",\n      dotContent: \"dotContent\",\n      dataHash: \"dataHash\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CarouselSlideDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[carouselSlide]'\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], {\n    id: [{\n      type: Input\n    }],\n    dataMerge: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    dotContent: [{\n      type: Input\n    }],\n    dataHash: [{\n      type: Input\n    }]\n  });\n})();\nclass ResizeService {\n  resizeObservable$;\n  /**\n   * Makes resizeSubject become Observable\n   * @returns Observable of resizeSubject\n   */\n  get onResize$() {\n    return this.resizeObservable$;\n  }\n  constructor(winRef, platformId) {\n    this.resizeObservable$ = isPlatformBrowser(platformId) ? fromEvent(winRef, 'resize') : new Subject().asObservable();\n  }\n  static Éµfac = function ResizeService_Factory(t) {\n    return new (t || ResizeService)(i0.ÉµÉµinject(WINDOW), i0.ÉµÉµinject(PLATFORM_ID));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: ResizeService,\n    factory: ResizeService.Éµfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ResizeService, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [WINDOW]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nclass StageComponent {\n  zone;\n  el;\n  renderer;\n  carouselService;\n  animateService;\n  /**\n   * Object with settings which make carousel draggable by touch or mouse\n   */\n  owlDraggable;\n  /**\n   * Data of owl-stage\n   */\n  stageData;\n  /**\n   *  Data of every slide\n   */\n  slidesData;\n  /**\n   * Function wich will be returned after attaching listener to 'mousemove' event\n   */\n  listenerMouseMove;\n  /**\n   * Function wich will be returned after attaching listener to 'touchmove' event\n   */\n  listenerTouchMove;\n  /**\n   * Function wich will be returned after attaching listener to 'mousemove' event\n   */\n  listenerOneMouseMove;\n  /**\n   * Function wich will be returned after attaching listener to 'touchmove' event\n   */\n  listenerOneTouchMove;\n  /**\n   * Function wich will be returned after attaching listener to 'mouseup' event\n   */\n  listenerMouseUp;\n  /**\n   * Function wich will be returned after attaching listener to 'touchend' event\n   */\n  listenerTouchEnd;\n  /**\n   * Function wich will be returned after attaching listener to 'click' event\n   */\n  listenerOneClick;\n  listenerATag;\n  /**\n   * Object with data needed for dragging\n   */\n  _drag = {\n    time: null,\n    target: null,\n    pointer: null,\n    stage: {\n      start: null,\n      current: null\n    },\n    direction: null,\n    active: false,\n    moving: false\n  };\n  /**\n   * Subject for notification when the carousel's rebuilding caused by resize event starts\n   */\n  _oneDragMove$ = new Subject();\n  /**\n   * Subsctiption to _oneDragMove$ Subject\n   */\n  _oneMoveSubsription;\n  preparePublicSlide = slide => {\n    const newSlide = {\n      ...slide\n    };\n    delete newSlide.tplRef;\n    return newSlide;\n  };\n  constructor(zone, el, renderer, carouselService, animateService) {\n    this.zone = zone;\n    this.el = el;\n    this.renderer = renderer;\n    this.carouselService = carouselService;\n    this.animateService = animateService;\n  }\n  onMouseDown(event) {\n    if (this.owlDraggable.isMouseDragable) {\n      this._onDragStart(event);\n    }\n  }\n  onTouchStart(event) {\n    if (event.targetTouches.length >= 2) {\n      return false;\n    }\n    if (this.owlDraggable.isTouchDragable) {\n      this._onDragStart(event);\n    }\n  }\n  onTouchCancel(event) {\n    this._onDragEnd(event);\n  }\n  onDragStart() {\n    if (this.owlDraggable.isMouseDragable) {\n      return false;\n    }\n  }\n  onSelectStart() {\n    if (this.owlDraggable.isMouseDragable) {\n      return false;\n    }\n  }\n  ngOnInit() {\n    this._oneMoveSubsription = this._oneDragMove$.pipe(first()).subscribe(() => {\n      this._sendChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._oneMoveSubsription.unsubscribe();\n  }\n  /**\n   * Passes this to _oneMouseTouchMove();\n   */\n  bindOneMouseTouchMove = ev => {\n    this._oneMouseTouchMove(ev);\n  };\n  /**\n   * Passes this to _onDragMove();\n   */\n  bindOnDragMove = ev => {\n    this._onDragMove(ev);\n  };\n  /**\n   * Passes this to _onDragMove();\n   */\n  bindOnDragEnd = ev => {\n    // this.zone.run(() => {\n    this._onDragEnd(ev);\n    // });\n  };\n  /**\n     * Handles `touchstart` and `mousedown` events.\n     * @todo Horizontal swipe threshold as option\n     * @todo #261\n     * @param event - The event arguments.\n     */\n  _onDragStart(event) {\n    let stage = null;\n    if (event.which === 3) {\n      return;\n    }\n    stage = this._prepareDragging(event);\n    this._drag.time = new Date().getTime();\n    this._drag.target = event.target;\n    this._drag.stage.start = stage;\n    this._drag.stage.current = stage;\n    this._drag.pointer = this._pointer(event);\n    this.listenerMouseUp = this.renderer.listen(document, 'mouseup', this.bindOnDragEnd);\n    this.listenerTouchEnd = this.renderer.listen(document, 'touchend', this.bindOnDragEnd);\n    this.zone.runOutsideAngular(() => {\n      this.listenerOneMouseMove = this.renderer.listen(document, 'mousemove', this.bindOneMouseTouchMove);\n      this.listenerOneTouchMove = this.renderer.listen(document, 'touchmove', this.bindOneMouseTouchMove);\n    });\n  }\n  /**\n   * Attaches listeners to `touchmove` and `mousemove` events; initiates updating carousel after starting dragging\n   * @param event event objech of mouse or touch event\n   */\n  _oneMouseTouchMove(event) {\n    const delta = this._difference(this._drag.pointer, this._pointer(event));\n    if (this.listenerATag) {\n      this.listenerATag();\n    }\n    if (Math.abs(delta.x) < 3 && Math.abs(delta.y) < 3 && this._is('valid')) {\n      return;\n    }\n    if (Math.abs(delta.x) < 3 && Math.abs(delta.x) < Math.abs(delta.y) && this._is('valid')) {\n      return;\n    }\n    this.listenerOneMouseMove();\n    this.listenerOneTouchMove();\n    this._drag.moving = true;\n    this.blockClickAnchorInDragging(event);\n    this.listenerMouseMove = this.renderer.listen(document, 'mousemove', this.bindOnDragMove);\n    this.listenerTouchMove = this.renderer.listen(document, 'touchmove', this.bindOnDragMove);\n    event.preventDefault();\n    this._enterDragging();\n    this._oneDragMove$.next(event);\n    // this._sendChanges();\n  }\n  /**\n   * Attaches handler to HTMLAnchorElement for preventing click while carousel is being dragged\n   * @param event event object\n   */\n  blockClickAnchorInDragging(event) {\n    let target = event.target;\n    while (target && !(target instanceof HTMLAnchorElement)) {\n      target = target.parentElement;\n    }\n    if (target instanceof HTMLAnchorElement) {\n      this.listenerATag = this.renderer.listen(target, 'click', () => false);\n    }\n  }\n  /**\n   * Handles the `touchmove` and `mousemove` events.\n   * @todo #261\n   * @param event - The event arguments.\n   */\n  _onDragMove(event) {\n    let stage;\n    const stageOrExit = this.carouselService.defineNewCoordsDrag(event, this._drag);\n    if (stageOrExit === false) {\n      return;\n    }\n    stage = stageOrExit;\n    event.preventDefault();\n    this._drag.stage.current = stage;\n    this._animate(stage.x - this._drag.stage.start.x);\n  }\n  /**\n   * Moves .owl-stage left-right\n   * @param coordinate coordinate to be set to .owl-stage\n   */\n  _animate(coordinate) {\n    this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', `translate3d(${coordinate}px,0px,0px`);\n    this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', '0s');\n  }\n  /**\n     * Handles the `touchend` and `mouseup` events.\n     * @todo #261\n     * @todo Threshold for click event\n     * @param event - The event arguments.\n     */\n  _onDragEnd(event) {\n    this.carouselService.owlDOMData.isGrab = false;\n    this.listenerOneMouseMove();\n    this.listenerOneTouchMove();\n    if (this._drag.moving) {\n      this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', ``);\n      this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed) / 1000 + 's');\n      this._finishDragging(event);\n      this.listenerMouseMove();\n      this.listenerTouchMove();\n    }\n    this._drag = {\n      time: null,\n      target: null,\n      pointer: null,\n      stage: {\n        start: null,\n        current: null\n      },\n      direction: null,\n      active: false,\n      moving: false\n    };\n    // this.carouselService.trigger('dragged');\n    this.listenerMouseUp();\n    this.listenerTouchEnd();\n  }\n  /**\n     * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\n     * @param event - The event arguments.\n     * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\n     */\n  _prepareDragging(event) {\n    return this.carouselService.prepareDragging(event);\n  }\n  /**\n   * Attaches handler for 'click' event on any element in .owl-stage in order to prevent dragging when moving of cursor is less than 3px\n   */\n  _oneClickHandler = () => {\n    this.listenerOneClick = this.renderer.listen(this._drag.target, 'click', () => false);\n    this.listenerOneClick();\n  };\n  /**\n   * Finishes dragging\n   * @param event object event of 'mouseUp' of 'touchend' events\n   */\n  _finishDragging(event) {\n    this.carouselService.finishDragging(event, this._drag, this._oneClickHandler);\n  }\n  /**\n     * Gets unified pointer coordinates from event.\n     * @param event The `mousedown` or `touchstart` event.\n     * @returns Contains `x` and `y` coordinates of current pointer position.\n     */\n  _pointer(event) {\n    return this.carouselService.pointer(event);\n  }\n  /**\n     * Gets the difference of two vectors.\n     * @param first The first vector.\n     * @param second The second vector.\n     * @returns The difference.\n     */\n  _difference(firstC, second) {\n    return this.carouselService.difference(firstC, second);\n  }\n  /**\n     * Checks whether the carousel is in a specific state or not.\n     * @param specificState The state to check.\n     * @returns The flag which indicates if the carousel is busy.\n     */\n  _is(specificState) {\n    return this.carouselService.is(specificState);\n  }\n  /**\n  * Enters a state.\n  * @param name The state name.\n  */\n  _enter(name) {\n    this.carouselService.enter(name);\n  }\n  /**\n     * Sends all data needed for View.\n     */\n  _sendChanges() {\n    this.carouselService.sendChanges();\n  }\n  /**\n   * Handler for transitioend event\n   */\n  onTransitionEnd() {\n    this.carouselService.onTransitionEnd();\n  }\n  /**\n     * Enters into a 'dragging' state\n     */\n  _enterDragging() {\n    this.carouselService.enterDragging();\n  }\n  /**\n   * Handles the end of 'animationend' event\n   * @param id Id of slides\n   */\n  clear(id) {\n    this.animateService.clear(id);\n  }\n  static Éµfac = function StageComponent_Factory(t) {\n    return new (t || StageComponent)(i0.ÉµÉµdirectiveInject(i0.NgZone), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(CarouselService), i0.ÉµÉµdirectiveInject(AnimateService));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: StageComponent,\n    selectors: [[\"owl-stage\"]],\n    hostBindings: function StageComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"mousedown\", function StageComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onMouseDown($event);\n        })(\"touchstart\", function StageComponent_touchstart_HostBindingHandler($event) {\n          return ctx.onTouchStart($event);\n        })(\"touchcancel\", function StageComponent_touchcancel_HostBindingHandler($event) {\n          return ctx.onTouchCancel($event);\n        })(\"dragstart\", function StageComponent_dragstart_HostBindingHandler() {\n          return ctx.onDragStart();\n        })(\"selectstart\", function StageComponent_selectstart_HostBindingHandler() {\n          return ctx.onSelectStart();\n        });\n      }\n    },\n    inputs: {\n      owlDraggable: \"owlDraggable\",\n      stageData: \"stageData\",\n      slidesData: \"slidesData\"\n    },\n    decls: 3,\n    vars: 8,\n    consts: [[1, \"owl-stage\", 3, \"transitionend\", \"ngStyle\"], [4, \"ngFor\", \"ngForOf\"], [1, \"owl-item\", 3, \"animationend\", \"ngClass\", \"ngStyle\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function StageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\")(1, \"div\", 0);\n        i0.ÉµÉµlistener(\"transitionend\", function StageComponent_Template_div_transitionend_1_listener() {\n          return ctx.onTransitionEnd();\n        });\n        i0.ÉµÉµtemplate(2, StageComponent_ng_container_2_Template, 3, 9, \"ng-container\", 1);\n        i0.ÉµÉµelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngStyle\", i0.ÉµÉµpureFunction5(2, _c0, ctx.stageData.width + \"px\", ctx.stageData.transform, ctx.stageData.transition, ctx.stageData.paddingL ? ctx.stageData.paddingL + \"px\" : \"\", ctx.stageData.paddingR ? ctx.stageData.paddingR + \"px\" : \"\"));\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.slidesData);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet, i3.NgStyle],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('autoHeight', [state('nulled', style({\n        height: 0\n      })), state('full', style({\n        height: '*'\n      })), transition('full => nulled', [\n      // style({height: '*'}),\n      animate('700ms 350ms')]), transition('nulled => full', [\n      // style({height: 0}),\n      animate(350)])])]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(StageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'owl-stage',\n      template: `\n    <div>\n      <div class=\"owl-stage\" [ngStyle]=\"{'width': stageData.width + 'px',\n                                        'transform': stageData.transform,\n                                        'transition': stageData.transition,\n                                        'padding-left': stageData.paddingL ? stageData.paddingL + 'px' : '',\n                                        'padding-right': stageData.paddingR ? stageData.paddingR + 'px' : '' }\"\n          (transitionend)=\"onTransitionEnd()\">\n        <ng-container *ngFor=\"let slide of slidesData; let i = index\">\n          <div class=\"owl-item\" [ngClass]=\"slide.classes\"\n                                [ngStyle]=\"{'width': slide.width + 'px',\n                                            'margin-left': slide.marginL ? slide.marginL + 'px' : '',\n                                            'margin-right': slide.marginR ? slide.marginR + 'px' : '',\n                                            'left': slide.left}\"\n                                (animationend)=\"clear(slide.id)\"\n                                [@autoHeight]=\"slide.heightState\">\n            <ng-template *ngIf=\"slide.load\" [ngTemplateOutlet]=\"slide.tplRef\" [ngTemplateOutletContext]=\"{ $implicit: preparePublicSlide(slide), index: i }\"></ng-template>\n          </div><!-- /.owl-item -->\n        </ng-container>\n      </div><!-- /.owl-stage -->\n    </div>\n  `,\n      animations: [trigger('autoHeight', [state('nulled', style({\n        height: 0\n      })), state('full', style({\n        height: '*'\n      })), transition('full => nulled', [\n      // style({height: '*'}),\n      animate('700ms 350ms')]), transition('nulled => full', [\n      // style({height: 0}),\n      animate(350)])])]\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: CarouselService\n  }, {\n    type: AnimateService\n  }], {\n    owlDraggable: [{\n      type: Input\n    }],\n    stageData: [{\n      type: Input\n    }],\n    slidesData: [{\n      type: Input\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    onTouchStart: [{\n      type: HostListener,\n      args: ['touchstart', ['$event']]\n    }],\n    onTouchCancel: [{\n      type: HostListener,\n      args: ['touchcancel', ['$event']]\n    }],\n    onDragStart: [{\n      type: HostListener,\n      args: ['dragstart']\n    }],\n    onSelectStart: [{\n      type: HostListener,\n      args: ['selectstart']\n    }]\n  });\n})();\nclass CarouselComponent {\n  el;\n  resizeService;\n  carouselService;\n  navigationService;\n  autoplayService;\n  lazyLoadService;\n  animateService;\n  autoHeightService;\n  hashService;\n  logger;\n  changeDetectorRef;\n  slides;\n  translated = new EventEmitter();\n  dragging = new EventEmitter();\n  change = new EventEmitter();\n  changed = new EventEmitter();\n  initialized = new EventEmitter();\n  /**\n   * Width of carousel window (tag with class .owl-carousel), in wich we can see moving sliders\n   */\n  carouselWindowWidth;\n  /**\n   * Subscription to 'resize' event\n   */\n  resizeSubscription;\n  /**\n   * Subscription merge Observable, which merges all Observables in the component except 'resize' Observable and this.slides.changes()\n   */\n  _allObservSubscription;\n  /**\n   * Subscription to `this.slides.changes().\n   * It could be included in 'this._allObservSubscription', but that subcription get created during the initializing of component\n   * and 'this.slides' are undefined at that moment. So it's needed to wait for initialization of content.\n   */\n  _slidesChangesSubscription;\n  /**\n   * Current settings for the carousel.\n   */\n  owlDOMData;\n  /**\n   * Data of owl-stage\n   */\n  stageData;\n  /**\n   *  Data of every slide\n   */\n  slidesData = [];\n  /**\n   * Data of navigation block\n   */\n  navData;\n  /**\n   * Data of dots block\n   */\n  dotsData;\n  /**\n   * Data, wich are passed out of carousel after ending of transioning of carousel\n   */\n  slidesOutputData;\n  /**\n   * Shows whether carousel is loaded of not.\n   */\n  carouselLoaded = false;\n  /**\n   * User's options\n   */\n  options;\n  prevOptions;\n  /**\n   * Observable for getting current View Settings\n   */\n  _viewCurSettings$;\n  /**\n   * Observable for catching the end of transition of carousel\n   */\n  _translatedCarousel$;\n  /**\n   * Observable for catching the start of dragging of the carousel\n   */\n  _draggingCarousel$;\n  /**\n   * Observable for catching the start of changing of the carousel\n   */\n  _changeCarousel$;\n  /**\n   * Observable for catching the moment when the data about slides changed, more exactly when the position changed.\n   */\n  _changedCarousel$;\n  /**\n   * Observable for catching the initialization of changing the carousel\n   */\n  _initializedCarousel$;\n  /**\n   * Observable for merging all Observables and creating one subscription\n   */\n  _carouselMerge$;\n  docRef;\n  constructor(el, resizeService, carouselService, navigationService, autoplayService, lazyLoadService, animateService, autoHeightService, hashService, logger, changeDetectorRef, docRef) {\n    this.el = el;\n    this.resizeService = resizeService;\n    this.carouselService = carouselService;\n    this.navigationService = navigationService;\n    this.autoplayService = autoplayService;\n    this.lazyLoadService = lazyLoadService;\n    this.animateService = animateService;\n    this.autoHeightService = autoHeightService;\n    this.hashService = hashService;\n    this.logger = logger;\n    this.changeDetectorRef = changeDetectorRef;\n    this.docRef = docRef;\n  }\n  onVisibilityChange(ev) {\n    if (!this.carouselService.settings.autoplay) return;\n    switch (this.docRef.visibilityState) {\n      case 'visible':\n        !this.autoplayService.isAutoplayStopped && this.autoplayService.play();\n        break;\n      case 'hidden':\n        this.autoplayService.pause();\n        break;\n      default:\n        break;\n    }\n  }\n  ngOnInit() {\n    this.spyDataStreams();\n    this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\n  }\n  ngOnChanges() {\n    if (this.prevOptions !== this.options) {\n      if (this.prevOptions && this.slides?.toArray().length) {\n        this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\n        this.carouselService.initialize(this.slides.toArray());\n      } else if (this.prevOptions && !this.slides?.toArray().length) {\n        this.carouselLoaded = false;\n        this.logger.log(`There are no slides to show. So the carousel won't be re-rendered`);\n      } else {\n        this.carouselLoaded = false;\n      }\n      this.prevOptions = this.options;\n    }\n  }\n  ngAfterContentInit() {\n    if (this.slides.toArray().length) {\n      this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\n      this.carouselService.initialize(this.slides.toArray());\n      this._winResizeWatcher();\n    } else {\n      this.logger.log(`There are no slides to show. So the carousel won't be rendered`);\n    }\n    this._slidesChangesSubscription = this.slides.changes.pipe(tap(slides => {\n      this.carouselService.setup(this.carouselWindowWidth, slides.toArray(), this.options);\n      this.carouselService.initialize(slides.toArray());\n      if (!slides.toArray().length) {\n        this.carouselLoaded = false;\n      }\n      if (slides.toArray().length && !this.resizeSubscription) {\n        this._winResizeWatcher();\n      }\n    })).subscribe(() => {});\n  }\n  ngOnDestroy() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n    if (this._slidesChangesSubscription) {\n      this._slidesChangesSubscription.unsubscribe();\n    }\n    if (this._allObservSubscription) {\n      this._allObservSubscription.unsubscribe();\n    }\n  }\n  /**\n   * Joins the observable login in one place: sets values to some observables, merges this observables and\n   * subcribes to merge func\n   */\n  spyDataStreams() {\n    this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe(tap(data => {\n      this.owlDOMData = data.owlDOMData;\n      this.stageData = data.stageData;\n      this.slidesData = data.slidesData;\n      if (!this.carouselLoaded) {\n        this.carouselLoaded = true;\n      }\n      this.navData = data.navData;\n      this.dotsData = data.dotsData;\n      this.changeDetectorRef.markForCheck();\n    }));\n    this._initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\n      this.gatherTranslatedData();\n      this.initialized.emit(this.slidesOutputData);\n      // this.slidesOutputData = {};\n    }));\n    this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe(tap(() => {\n      this.gatherTranslatedData();\n      this.translated.emit(this.slidesOutputData);\n      // this.slidesOutputData = {};\n    }));\n    this._changeCarousel$ = this.carouselService.getChangeState().pipe(tap(() => {\n      this.gatherTranslatedData();\n      this.change.emit(this.slidesOutputData);\n      // this.slidesOutputData = {};\n    }));\n    this._changedCarousel$ = this.carouselService.getChangeState().pipe(switchMap(value => {\n      const changedPosition = of(value).pipe(filter(() => value.property.name === 'position'), switchMap(() => from(this.slidesData)), skip(value.property.value), take(this.carouselService.settings.items), map(slide => {\n        const clonedIdPrefix = this.carouselService.clonedIdPrefix;\n        const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\n        return {\n          ...slide,\n          id: id,\n          isActive: true\n        };\n      }), toArray(), map(slides => {\n        return {\n          slides: slides,\n          startPosition: this.carouselService.relative(value.property.value)\n        };\n      }));\n      // const changedSetting: Observable<SlidesOutputData> = of(value).pipe(\n      //   filter(() => value.property.name === 'settings'),\n      //   map(() => {\n      //     return {\n      //       slides: [],\n      //       startPosition: this.carouselService.relative(value.property.value)\n      //     }\n      //   })\n      // )\n      return merge(changedPosition);\n    }), tap(slidesData => {\n      this.gatherTranslatedData();\n      this.changed.emit(slidesData.slides.length ? slidesData : this.slidesOutputData);\n      // console.log(this.slidesOutputData);\n      // this.slidesOutputData = {};\n    }));\n    this._draggingCarousel$ = this.carouselService.getDragState().pipe(tap(() => {\n      this.gatherTranslatedData();\n      this.dragging.emit({\n        dragging: true,\n        data: this.slidesOutputData\n      });\n    }), switchMap(() => this.carouselService.getDraggedState().pipe(map(() => !!this.carouselService.is('animating')))), switchMap(anim => {\n      if (anim) {\n        return this.carouselService.getTranslatedState().pipe(first());\n      } else {\n        return of('not animating');\n      }\n    }), tap(() => {\n      this.dragging.emit({\n        dragging: false,\n        data: this.slidesOutputData\n      });\n    }));\n    this._carouselMerge$ = merge(this._viewCurSettings$, this._translatedCarousel$, this._draggingCarousel$, this._changeCarousel$, this._changedCarousel$, this._initializedCarousel$);\n    this._allObservSubscription = this._carouselMerge$.subscribe(() => {});\n  }\n  /**\n   * Init subscription to resize event and attaches handler for this event\n   */\n  _winResizeWatcher() {\n    if (Object.keys(this.carouselService._options.responsive).length) {\n      this.resizeSubscription = this.resizeService.onResize$.pipe(filter(() => this.carouselWindowWidth !== this.el.nativeElement.querySelector('.owl-carousel').clientWidth), delay(this.carouselService.settings.responsiveRefreshRate)).subscribe(() => {\n        this.carouselService.onResize(this.el.nativeElement.querySelector('.owl-carousel').clientWidth);\n        this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\n      });\n    }\n  }\n  /**\n   * Handler for transitioend event\n   */\n  onTransitionEnd() {\n    this.carouselService.onTransitionEnd();\n  }\n  /**\n   * Handler for click event, attached to next button\n   */\n  next() {\n    if (!this.carouselLoaded) return;\n    this.navigationService.next(this.carouselService.settings.navSpeed);\n  }\n  /**\n   * Handler for click event, attached to prev button\n   */\n  prev() {\n    if (!this.carouselLoaded) return;\n    this.navigationService.prev(this.carouselService.settings.navSpeed);\n  }\n  /**\n   * Handler for click event, attached to dots\n   */\n  moveByDot(dotId) {\n    if (!this.carouselLoaded) return;\n    this.navigationService.moveByDot(dotId);\n  }\n  /**\n   * rewinds carousel to slide with needed id\n   * @param id fragment of url\n   */\n  to(id) {\n    // if (!this.carouselLoaded || ((this.navData && this.navData.disabled) && (this.dotsData && this.dotsData.disabled))) return;\n    if (!this.carouselLoaded) return;\n    this.navigationService.toSlideById(id);\n  }\n  /**\n   * Gathers and prepares data intended for passing to the user by means of firing event translatedCarousel\n   */\n  gatherTranslatedData() {\n    let startPosition;\n    const clonedIdPrefix = this.carouselService.clonedIdPrefix;\n    const activeSlides = this.slidesData.filter(slide => slide.isActive === true).map(slide => {\n      const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\n      return {\n        id: id,\n        width: slide.width,\n        marginL: slide.marginL,\n        marginR: slide.marginR,\n        center: slide.isCentered\n      };\n    });\n    startPosition = this.carouselService.relative(this.carouselService.current());\n    this.slidesOutputData = {\n      startPosition: startPosition,\n      slides: activeSlides\n    };\n  }\n  /**\n   * Starts pausing\n   */\n  startPausing() {\n    this.autoplayService.startPausing();\n  }\n  /**\n   * Starts playing after mouse leaves carousel\n   */\n  startPlayML() {\n    this.autoplayService.startPlayingMouseLeave();\n  }\n  /**\n   * Starts playing after touch ends\n   */\n  startPlayTE() {\n    this.autoplayService.startPlayingTouchEnd();\n  }\n  stopAutoplay() {\n    this.autoplayService.isAutoplayStopped = true;\n    this.autoplayService.stop();\n  }\n  startAutoplay() {\n    this.autoplayService.isAutoplayStopped = false;\n    this.autoplayService.play();\n  }\n  static Éµfac = function CarouselComponent_Factory(t) {\n    return new (t || CarouselComponent)(i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(ResizeService), i0.ÉµÉµdirectiveInject(CarouselService), i0.ÉµÉµdirectiveInject(NavigationService), i0.ÉµÉµdirectiveInject(AutoplayService), i0.ÉµÉµdirectiveInject(LazyLoadService), i0.ÉµÉµdirectiveInject(AnimateService), i0.ÉµÉµdirectiveInject(AutoHeightService), i0.ÉµÉµdirectiveInject(HashService), i0.ÉµÉµdirectiveInject(OwlLogger), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(DOCUMENT));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: CarouselComponent,\n    selectors: [[\"owl-carousel-o\"]],\n    contentQueries: function CarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ÉµÉµcontentQuery(dirIndex, CarouselSlideDirective, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.slides = _t);\n      }\n    },\n    hostBindings: function CarouselComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"visibilitychange\", function CarouselComponent_visibilitychange_HostBindingHandler($event) {\n          return ctx.onVisibilityChange($event);\n        }, false, i0.ÉµÉµresolveDocument);\n      }\n    },\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      translated: \"translated\",\n      dragging: \"dragging\",\n      change: \"change\",\n      changed: \"changed\",\n      initialized: \"initialized\"\n    },\n    features: [i0.ÉµÉµProvidersFeature([NavigationService, AutoplayService, CarouselService, LazyLoadService, AnimateService, AutoHeightService, HashService]), i0.ÉµÉµNgOnChangesFeature],\n    decls: 4,\n    vars: 9,\n    consts: [[\"owlCarousel\", \"\"], [1, \"owl-carousel\", \"owl-theme\", 3, \"mouseover\", \"mouseleave\", \"touchstart\", \"touchend\", \"ngClass\"], [\"class\", \"owl-stage-outer\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"owl-stage-outer\"], [3, \"owlDraggable\", \"stageData\", \"slidesData\"], [1, \"owl-nav\", 3, \"ngClass\"], [1, \"owl-prev\", 3, \"click\", \"ngClass\", \"innerHTML\"], [1, \"owl-next\", 3, \"click\", \"ngClass\", \"innerHTML\"], [1, \"owl-dots\", 3, \"ngClass\"], [\"class\", \"owl-dot\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"owl-dot\", 3, \"click\", \"ngClass\"], [3, \"innerHTML\"]],\n    template: function CarouselComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ÉµÉµgetCurrentView();\n        i0.ÉµÉµelementStart(0, \"div\", 1, 0);\n        i0.ÉµÉµlistener(\"mouseover\", function CarouselComponent_Template_div_mouseover_0_listener() {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.startPausing());\n        })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.startPlayML());\n        })(\"touchstart\", function CarouselComponent_Template_div_touchstart_0_listener() {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.startPausing());\n        })(\"touchend\", function CarouselComponent_Template_div_touchend_0_listener() {\n          i0.ÉµÉµrestoreView(_r1);\n          return i0.ÉµÉµresetView(ctx.startPlayTE());\n        });\n        i0.ÉµÉµtemplate(2, CarouselComponent_div_2_Template, 2, 6, \"div\", 2)(3, CarouselComponent_ng_container_3_Template, 6, 15, \"ng-container\", 3);\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµproperty(\"ngClass\", i0.ÉµÉµpureFunction5(3, _c3, ctx.owlDOMData == null ? null : ctx.owlDOMData.rtl, ctx.owlDOMData == null ? null : ctx.owlDOMData.isLoaded, ctx.owlDOMData == null ? null : ctx.owlDOMData.isResponsive, ctx.owlDOMData == null ? null : ctx.owlDOMData.isMouseDragable, ctx.owlDOMData == null ? null : ctx.owlDOMData.isGrab));\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.carouselLoaded);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.slides.toArray().length);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, StageComponent],\n    styles: [\".owl-theme[_ngcontent-%COMP%]{display:block}\"],\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CarouselComponent, [{\n    type: Component,\n    args: [{\n      selector: 'owl-carousel-o',\n      template: `\n    <div class=\"owl-carousel owl-theme\" #owlCarousel\n      [ngClass]=\"{'owl-rtl': owlDOMData?.rtl,\n                  'owl-loaded': owlDOMData?.isLoaded,\n                  'owl-responsive': owlDOMData?.isResponsive,\n                  'owl-drag': owlDOMData?.isMouseDragable,\n                  'owl-grab': owlDOMData?.isGrab}\"\n      (mouseover)=\"startPausing()\"\n      (mouseleave)=\"startPlayML()\"\n      (touchstart)=\"startPausing()\"\n      (touchend)=\"startPlayTE()\">\n\n      <div *ngIf=\"carouselLoaded\" class=\"owl-stage-outer\">\n        <owl-stage [owlDraggable]=\"{'isMouseDragable': owlDOMData?.isMouseDragable, 'isTouchDragable': owlDOMData?.isTouchDragable}\"\n                    [stageData]=\"stageData\"\n                    [slidesData]=\"slidesData\"></owl-stage>\n      </div> <!-- /.owl-stage-outer -->\n      <ng-container *ngIf=\"slides.toArray().length\">\n        <div class=\"owl-nav\" [ngClass]=\"{'disabled': navData?.disabled}\">\n          <div class=\"owl-prev\" [ngClass]=\"{'disabled': navData?.prev?.disabled}\" (click)=\"prev()\" [innerHTML]=\"navData?.prev?.htmlText\"></div>\n          <div class=\"owl-next\" [ngClass]=\"{'disabled': navData?.next?.disabled}\" (click)=\"next()\" [innerHTML]=\"navData?.next?.htmlText\"></div>\n        </div> <!-- /.owl-nav -->\n        <div class=\"owl-dots\" [ngClass]=\"{'disabled': dotsData?.disabled}\">\n          <div *ngFor=\"let dot of dotsData?.dots\" class=\"owl-dot\" [ngClass]=\"{'active': dot.active, 'owl-dot-text': dot.showInnerContent}\" (click)=\"moveByDot(dot.id)\">\n            <span [innerHTML]=\"dot.innerContent\"></span>\n          </div>\n        </div> <!-- /.owl-dots -->\n      </ng-container>\n    </div> <!-- /.owl-carousel owl-loaded -->\n  `,\n      providers: [NavigationService, AutoplayService, CarouselService, LazyLoadService, AnimateService, AutoHeightService, HashService],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".owl-theme{display:block}\\n\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: ResizeService\n  }, {\n    type: CarouselService\n  }, {\n    type: NavigationService\n  }, {\n    type: AutoplayService\n  }, {\n    type: LazyLoadService\n  }, {\n    type: AnimateService\n  }, {\n    type: AutoHeightService\n  }, {\n    type: HashService\n  }, {\n    type: OwlLogger\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    slides: [{\n      type: ContentChildren,\n      args: [CarouselSlideDirective]\n    }],\n    translated: [{\n      type: Output\n    }],\n    dragging: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    changed: [{\n      type: Output\n    }],\n    initialized: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    onVisibilityChange: [{\n      type: HostListener,\n      args: ['document:visibilitychange', ['$event']]\n    }]\n  });\n})();\nclass OwlRouterLinkDirective {\n  router;\n  route;\n  // TODO(issue/24571): remove '!'.\n  queryParams;\n  // TODO(issue/24571): remove '!'.\n  fragment;\n  // TODO(issue/24571): remove '!'.\n  queryParamsHandling;\n  // TODO(issue/24571): remove '!'.\n  preserveFragment;\n  // TODO(issue/24571): remove '!'.\n  skipLocationChange;\n  // TODO(issue/24571): remove '!'.\n  replaceUrl;\n  stopLink = false;\n  commands = [];\n  // TODO(issue/24571): remove '!'.\n  preserve;\n  constructor(router, route, tabIndex, renderer, el) {\n    this.router = router;\n    this.route = route;\n    if (tabIndex == null) {\n      renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n    }\n  }\n  set owlRouterLink(commands) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n  /**\n   * @deprecated 4.0.0 use `queryParamsHandling` instead.\n   */\n  set preserveQueryParams(value) {\n    if (isDevMode() && console && console.warn) {\n      console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n  onClick() {\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl)\n    };\n    if (this.stopLink) {\n      return false;\n    }\n    this.router.navigateByUrl(this.urlTree, extras);\n    return true;\n  }\n  get urlTree() {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment)\n    });\n  }\n  static Éµfac = function OwlRouterLinkDirective_Factory(t) {\n    return new (t || OwlRouterLinkDirective)(i0.ÉµÉµdirectiveInject(i1.Router), i0.ÉµÉµdirectiveInject(i1.ActivatedRoute), i0.ÉµÉµinjectAttribute('tabindex'), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ElementRef));\n  };\n  static Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n    type: OwlRouterLinkDirective,\n    selectors: [[\"\", \"owlRouterLink\", \"\", 5, \"a\"]],\n    hostBindings: function OwlRouterLinkDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"click\", function OwlRouterLinkDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    },\n    inputs: {\n      queryParams: \"queryParams\",\n      fragment: \"fragment\",\n      queryParamsHandling: \"queryParamsHandling\",\n      preserveFragment: \"preserveFragment\",\n      skipLocationChange: \"skipLocationChange\",\n      replaceUrl: \"replaceUrl\",\n      stopLink: \"stopLink\",\n      owlRouterLink: \"owlRouterLink\",\n      preserveQueryParams: \"preserveQueryParams\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(OwlRouterLinkDirective, [{\n    type: Directive,\n    args: [{\n      selector: ':not(a)[owlRouterLink]'\n    }]\n  }], () => [{\n    type: i1.Router\n  }, {\n    type: i1.ActivatedRoute\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }], {\n    queryParams: [{\n      type: Input\n    }],\n    fragment: [{\n      type: Input\n    }],\n    queryParamsHandling: [{\n      type: Input\n    }],\n    preserveFragment: [{\n      type: Input\n    }],\n    skipLocationChange: [{\n      type: Input\n    }],\n    replaceUrl: [{\n      type: Input\n    }],\n    stopLink: [{\n      type: Input\n    }],\n    owlRouterLink: [{\n      type: Input\n    }],\n    preserveQueryParams: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass OwlRouterLinkWithHrefDirective {\n  router;\n  route;\n  locationStrategy;\n  // TODO(issue/24571): remove '!'.\n  target;\n  // TODO(issue/24571): remove '!'.\n  queryParams;\n  // TODO(issue/24571): remove '!'.\n  fragment;\n  // TODO(issue/24571): remove '!'.\n  queryParamsHandling;\n  // TODO(issue/24571): remove '!'.\n  preserveFragment;\n  // TODO(issue/24571): remove '!'.\n  skipLocationChange;\n  // TODO(issue/24571): remove '!'.\n  replaceUrl;\n  stopLink = false;\n  commands = [];\n  subscription;\n  // TODO(issue/24571): remove '!'.\n  preserve;\n  // the url displayed on the anchor element.\n  // TODO(issue/24571): remove '!'.\n  href;\n  constructor(router, route, locationStrategy) {\n    this.router = router;\n    this.route = route;\n    this.locationStrategy = locationStrategy;\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.updateTargetUrlAndHref();\n      }\n    });\n  }\n  set owlRouterLink(commands) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n  set preserveQueryParams(value) {\n    if (isDevMode() && console && console.warn) {\n      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n  ngOnChanges(changes) {\n    this.updateTargetUrlAndHref();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  onClick(button, ctrlKey, metaKey, shiftKey) {\n    if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n      return true;\n    }\n    if (typeof this.target === 'string' && this.target !== '_self') {\n      return true;\n    }\n    if (this.stopLink) {\n      return false;\n    }\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl)\n    };\n    this.router.navigateByUrl(this.urlTree, extras);\n    return false;\n  }\n  updateTargetUrlAndHref() {\n    this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n  }\n  get urlTree() {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment)\n    });\n  }\n  static Éµfac = function OwlRouterLinkWithHrefDirective_Factory(t) {\n    return new (t || OwlRouterLinkWithHrefDirective)(i0.ÉµÉµdirectiveInject(i1.Router), i0.ÉµÉµdirectiveInject(i1.ActivatedRoute), i0.ÉµÉµdirectiveInject(i3.LocationStrategy));\n  };\n  static Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n    type: OwlRouterLinkWithHrefDirective,\n    selectors: [[\"a\", \"owlRouterLink\", \"\"]],\n    hostVars: 2,\n    hostBindings: function OwlRouterLinkWithHrefDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"click\", function OwlRouterLinkWithHrefDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey);\n        });\n      }\n      if (rf & 2) {\n        i0.ÉµÉµhostProperty(\"href\", ctx.href, i0.ÉµÉµsanitizeUrl);\n        i0.ÉµÉµattribute(\"target\", ctx.target);\n      }\n    },\n    inputs: {\n      target: \"target\",\n      queryParams: \"queryParams\",\n      fragment: \"fragment\",\n      queryParamsHandling: \"queryParamsHandling\",\n      preserveFragment: \"preserveFragment\",\n      skipLocationChange: \"skipLocationChange\",\n      replaceUrl: \"replaceUrl\",\n      stopLink: \"stopLink\",\n      owlRouterLink: \"owlRouterLink\",\n      preserveQueryParams: \"preserveQueryParams\"\n    },\n    features: [i0.ÉµÉµNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(OwlRouterLinkWithHrefDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'a[owlRouterLink]'\n    }]\n  }], () => [{\n    type: i1.Router\n  }, {\n    type: i1.ActivatedRoute\n  }, {\n    type: i3.LocationStrategy\n  }], {\n    target: [{\n      type: HostBinding,\n      args: ['attr.target']\n    }, {\n      type: Input\n    }],\n    queryParams: [{\n      type: Input\n    }],\n    fragment: [{\n      type: Input\n    }],\n    queryParamsHandling: [{\n      type: Input\n    }],\n    preserveFragment: [{\n      type: Input\n    }],\n    skipLocationChange: [{\n      type: Input\n    }],\n    replaceUrl: [{\n      type: Input\n    }],\n    stopLink: [{\n      type: Input\n    }],\n    href: [{\n      type: HostBinding\n    }],\n    owlRouterLink: [{\n      type: Input\n    }],\n    preserveQueryParams: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]\n    }]\n  });\n})();\nfunction attrBoolValue(s) {\n  return s === '' || !!s;\n}\n\n/**\n * Data which will be passed out after ending of transition of carousel\n */\nclass SlidesOutputData {\n  startPosition;\n  slides;\n}\n;\nconst routes = [];\nclass CarouselModule {\n  static Éµfac = function CarouselModule_Factory(t) {\n    return new (t || CarouselModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: CarouselModule\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n    providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger],\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CarouselModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule\n      // BrowserAnimationsModule, // there's an issue with this import while using lazy loading of module consuming this library. I don't remove it because it could be needed during future enhancement of this lib.\n      // RouterModule.forChild(routes)\n      ],\n      declarations: [CarouselComponent, CarouselSlideDirective, StageComponent, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n      exports: [CarouselComponent, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n      providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger]\n    }]\n  }], null, null);\n})();\nclass SlideModel {\n  /**\n   * Id of slide\n   */\n  id;\n  /**\n   * Active state of slide. If true slide gets css-class .active\n   */\n  isActive;\n  /**\n   * TemplateRef of slide. In other words its html-markup\n   */\n  tplRef;\n  /**\n   * Number of grid parts to be used\n   */\n  dataMerge;\n  /**\n   * Width of slide\n   */\n  width;\n  /**\n   * Css-rule 'margin-left'\n   */\n  marginL;\n  /**\n   * Css-rule 'margin-right'\n   */\n  marginR;\n  /**\n   * Make slide to be on center of the carousel\n   */\n  isCentered;\n  /**\n   * Mark slide to be on center of the carousel (has .center)\n   */\n  center;\n  /**\n   * Cloned slide. It's being used when 'loop'=true\n   */\n  isCloned;\n  /**\n   * Indicates whether slide should be lazy loaded\n   */\n  load;\n  /**\n   * Css-rule 'left'\n   */\n  left;\n  /**\n   * Changeable classes of slide\n   */\n  classes;\n  /**\n   * Shows whether slide could be animated and could have css-class '.animated'\n   */\n  isAnimated;\n  /**\n   * Shows whether slide could be animated-in and could have css-class '.owl-animated-in'\n   */\n  isDefAnimatedIn;\n  /**\n   * Shows whether slide could be animated-out and could have css-class '.owl-animated-out'\n   */\n  isDefAnimatedOut;\n  /**\n   * Shows whether slide could be animated-in and could have animation css-class defined by user\n   */\n  isCustomAnimatedIn;\n  /**\n   * Shows whether slide could be animated-out and could have animation css-class defined by user\n   */\n  isCustomAnimatedOut;\n  /**\n   * State for defining the height of slide.It's values could be 'full' and 'nulled'. 'Full' sets css-height to 'auto', 'nulled' sets height to '0'.\n   */\n  heightState;\n  /**\n   * Hash (fragment) of url which corresponds to slide\n   */\n  hashFragment;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CarouselComponent, CarouselModule, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective, SlideModel, SlidesOutputData };\n","import { Component } from '@angular/core';\r\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\r\n\r\n@Component({\r\n  selector: 'app-banner-carousel',\r\n  standalone: true,\r\n  imports: [CarouselModule],\r\n  templateUrl: './banner-carousel.component.html',\r\n  styleUrl: './banner-carousel.component.scss'\r\n})\r\nexport class BannerCarouselComponent {\r\n  carouselOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n    },\r\n    nav: true,\r\n    lazyLoad: true,\r\n    autoplay: true,\r\n  }\r\n}\r\n","<div class=\"flex\">\r\n    <owl-carousel-o [options]=\"carouselOptions\" class=\"d-block w-3/4\">\r\n        <ng-template carouselSlide>\r\n            <img class=\"h-44 sm:h-56 md:h-80 lg:h-96\" src=\"../../../../../assets/images/slider-image-3.jpeg\" alt=\"slider-image\">\r\n        </ng-template>\r\n        <ng-template carouselSlide>\r\n            <img class=\"h-44 sm:h-56 md:h-80 lg:h-96\" src=\"../../../../../assets/images/slider-image-2.jpeg\" alt=\"slider-image\">\r\n        </ng-template>\r\n        <ng-template carouselSlide>\r\n            <img class=\"h-44 sm:h-56 md:h-80 lg:h-96\" src=\"../../../../../assets/images/slider-image-1.jpeg\" alt=\"slider-image\">\r\n        </ng-template>\r\n        <ng-template carouselSlide>\r\n            <img class=\"h-44 sm:h-56 md:h-80 lg:h-96\" src=\"../../../../../assets/images/slider-2.jpeg\" alt=\"slider-image\">\r\n        </ng-template>\r\n        <ng-template carouselSlide>\r\n            <img class=\"h-44 sm:h-56 md:h-80 lg:h-96\" src=\"../../../../../assets/images/grocery-banner.png\" alt=\"slider-image\">\r\n        </ng-template>\r\n        <ng-template carouselSlide>\r\n            <img class=\"h-44 sm:h-56 md:h-80 lg:h-96\" src=\"../../../../../assets/images/grocery-banner-2.jpeg\" alt=\"slider-image\">\r\n        </ng-template>\r\n    </owl-carousel-o>\r\n    <div class=\"w-1/4\">\r\n        <img class=\"h-[5.5rem] sm:h-28 md:h-40 lg:h-48 w-full\" src=\"../../../../../assets/images/slider-image-1.jpeg\" alt=\"slider-image\">\r\n        <img class=\"h-[5.5rem] sm:h-28 md:h-40 lg:h-48 w-full\" src=\"../../../../../assets/images/slider-image-2.jpeg\" alt=\"slider-image\">\r\n    </div>\r\n</div>","export enum BaseURL {\r\n    baseURL = \"https://ecommerce.routemisr.com\"\r\n}","import { Categories } from './../../Interfaces/Categories/categories';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseURL } from '../../Base/Environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoriesService {\r\n\r\n  constructor(private _HTTPClient:HttpClient) { }\r\n\r\n  getCategories(page?:string):Observable<null|Categories> {\r\n    let url:string = (page) ? `${BaseURL.baseURL}/api/v1/categories?page=${page}` : `${BaseURL.baseURL}/api/v1/categories`;\r\n    return this._HTTPClient.get<null|Categories>(url);\r\n  }\r\n\r\n  getSubcategoriesOnCategory(productId:string):Observable<Categories> {\r\n    return this._HTTPClient.get<Categories>(`${BaseURL.baseURL}/api/v1/categories/${productId}/subcategories`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Categories } from '../../../Interfaces/Categories/categories';\r\nimport { CategoriesService } from '../../../Services/Categories/categories.service';\r\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\r\nimport { NgClass } from '@angular/common';\r\nimport { BannerCarouselComponent } from \"../BannerCarousel/banner-carousel/banner-carousel.component\";\r\n\r\n@Component({\r\n  selector: 'app-home-page-carousel',\r\n  standalone: true,\r\n  imports: [CarouselModule, NgClass, BannerCarouselComponent],\r\n  templateUrl: './home-page-carousel.component.html',\r\n  styleUrl: './home-page-carousel.component.scss'\r\n})\r\nexport class HomePageCarouselComponent implements OnInit{\r\n  categoriesData:Categories | null = null;\r\n\r\n  carouselOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      400: {\r\n        items: 2\r\n      },\r\n      740: {\r\n        items: 3\r\n      },\r\n      940: {\r\n        items: 7\r\n      },\r\n      1280: {\r\n        items: 7\r\n      },\r\n    },\r\n    nav: true,\r\n    lazyLoad: true,\r\n    autoplay: true,\r\n    lazyLoadEager: 1\r\n  }\r\n\r\n  constructor(private _Categories:CategoriesService){}\r\n\r\n  ngOnInit(): void {\r\n      this.getCategories();\r\n  }\r\n\r\n  getCategories():void {\r\n    this._Categories.getCategories().subscribe({\r\n      next: (res) => {\r\n        this.categoriesData = res;\r\n      },\r\n      error: (err) => {\r\n\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"mt-4\">\r\n    @if(categoriesData === null) {\r\n        <div class=\"flex flex-wrap justify-center h-screen items-center\">\r\n            <span class=\"loader\"></span>\r\n        </div>\r\n    }\r\n    @else {\r\n        <app-banner-carousel></app-banner-carousel>\r\n        <h2 class=\"mb-1 text-lg\">Shop popular <strong>Categories</strong></h2>\r\n        <owl-carousel-o [options]=\"carouselOptions\">\r\n            @for(category of categoriesData.data; track $index) {\r\n                <ng-template carouselSlide [id]=\"category._id\">\r\n                    <img class=\"carousel-img\" [src]=\"category.image\" [alt]=\"category.name\" [title]=\"category.name\">\r\n                    <h3 class=\"mt-2\">{{category.name}}</h3>\r\n                </ng-template>\r\n            }\r\n        </owl-carousel-o>\r\n    }\r\n</div>","/**\n * @license Angular v17.3.12\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ÉµisPromise, ÉµisSubscribable, ÉµRuntimeError, Self, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, NgModule, Version } from '@angular/core';\nimport { ÉµgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n  constructor(_renderer, _elementRef) {\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @nodoc\n     */\n    this.onChange = _ => {};\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @nodoc\n     */\n    this.onTouched = () => {};\n  }\n  /**\n   * Helper method that sets a property on a target element using the current Renderer\n   * implementation.\n   * @nodoc\n   */\n  setProperty(key, value) {\n    this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n  }\n  /**\n   * Registers a function called when the control is touched.\n   * @nodoc\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  /**\n   * Sets the \"disabled\" property on the range input element.\n   * @nodoc\n   */\n  setDisabledState(isDisabled) {\n    this.setProperty('disabled', isDisabled);\n  }\n  static {\n    this.Éµfac = function BaseControlValueAccessor_Factory(t) {\n      return new (t || BaseControlValueAccessor)(i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: BaseControlValueAccessor\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BaseControlValueAccessor, [{\n    type: Directive\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }], null);\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµBuiltInControlValueAccessor_BaseFactory;\n      return function BuiltInControlValueAccessor_Factory(t) {\n        return (ÉµBuiltInControlValueAccessor_BaseFactory || (ÉµBuiltInControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(BuiltInControlValueAccessor)))(t || BuiltInControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: BuiltInControlValueAccessor,\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BuiltInControlValueAccessor, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"checked\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.setProperty('checked', value);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµCheckboxControlValueAccessor_BaseFactory;\n      return function CheckboxControlValueAccessor_Factory(t) {\n        return (ÉµCheckboxControlValueAccessor_BaseFactory || (ÉµCheckboxControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(CheckboxControlValueAccessor)))(t || CheckboxControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: CheckboxControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n      hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.checked);\n          })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CheckboxControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.checked)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [CHECKBOX_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = ÉµgetDOM() ? ÉµgetDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n  constructor(renderer, elementRef, _compositionMode) {\n    super(renderer, elementRef);\n    this._compositionMode = _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    this._composing = false;\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /** @internal */\n  _handleInput(value) {\n    if (!this._compositionMode || this._compositionMode && !this._composing) {\n      this.onChange(value);\n    }\n  }\n  /** @internal */\n  _compositionStart() {\n    this._composing = true;\n  }\n  /** @internal */\n  _compositionEnd(value) {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\n  static {\n    this.Éµfac = function DefaultValueAccessor_Factory(t) {\n      return new (t || DefaultValueAccessor)(i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: DefaultValueAccessor,\n      selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n      hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n            return ctx._handleInput($event.target.value);\n          })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n            return ctx._compositionStart();\n          })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n            return ctx._compositionEnd($event.target.value);\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(DefaultValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n      // TODO: vsavkin replace the above selector with the one below it once\n      // https://github.com/angular/angular/issues/3011 is implemented\n      // selector: '[ngModel],[formControl],[formControlName]',\n      host: {\n        '(input)': '$any(this)._handleInput($event.target.value)',\n        '(blur)': 'onTouched()',\n        '(compositionstart)': '$any(this)._compositionStart()',\n        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n      },\n      providers: [DEFAULT_VALUE_ACCESSOR]\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [COMPOSITION_BUFFER_MODE]\n    }]\n  }], null);\n})();\nfunction isEmptyInputValue(value) {\n  /**\n   * Check if the object is a string or array before evaluating the length attribute.\n   * This avoids falsely rejecting objects that contain a custom length attribute.\n   * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n   */\n  return value == null || (typeof value === 'string' || Array.isArray(value)) && value.length === 0;\n}\nfunction hasValidLength(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```typescript\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```typescript\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```typescript\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```typescript\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```typescript\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```typescript\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator(control);\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` property\n      return null;\n    }\n    return control.value.length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    return hasValidLength(control.value) && control.value.length > maxLength ? {\n      'maxlength': {\n        'requiredLength': maxLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = ÉµisPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ÉµisSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new ÉµRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  constructor() {\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    this._rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    this._rawAsyncValidators = [];\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  constructor() {\n    super(...arguments);\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    this._parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    this.name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    this.valueAccessor = null;\n  }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static {\n    this.Éµfac = function NgControlStatus_Factory(t) {\n      return new (t || NgControlStatus)(i0.ÉµÉµdirectiveInject(NgControl, 2));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgControlStatus,\n      selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n      hostVars: 14,\n      hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n        }\n      },\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgControlStatus, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName],[ngModel],[formControl]',\n      host: ngControlStatusHost\n    }]\n  }], () => [{\n    type: NgControl,\n    decorators: [{\n      type: Self\n    }]\n  }], null);\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n  constructor(cd) {\n    super(cd);\n  }\n  static {\n    this.Éµfac = function NgControlStatusGroup_Factory(t) {\n      return new (t || NgControlStatusGroup)(i0.ÉµÉµdirectiveInject(ControlContainer, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgControlStatusGroup,\n      selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n      hostVars: 16,\n      hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n        }\n      },\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgControlStatusGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n      host: ngGroupStatusHost\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }], null);\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException() {\n  return new ÉµRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n  return new ÉµRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new ÉµRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new ÉµRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new ÉµRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new ÉµRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new ÉµRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new ÉµRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n// clang-format on\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    /** @internal */\n    this._pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     *\n     * @internal\n     */\n    this._hasOwnPendingAsyncValidator = false;\n    /** @internal */\n    this._pendingTouched = false;\n    /** @internal */\n    this._onCollectionChange = () => {};\n    this._parent = null;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    this.pristine = true;\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    this.touched = false;\n    /** @internal */\n    this._onDisabledChange = [];\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  /**\n   * Marks the control as `touched`. A control is touched by focus and\n   * blur events that do not change the value.\n   *\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsTouched(opts = {}) {\n    this.touched = true;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   */\n  markAllAsTouched() {\n    this.markAsTouched({\n      onlySelf: true\n    });\n    this._forEachChild(control => control.markAllAsTouched());\n  }\n  /**\n   * Marks the control as `untouched`.\n   *\n   * If the control has any children, also marks all children as `untouched`\n   * and recalculates the `touched` status of all parent controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after the marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsUntouched(opts = {}) {\n    this.touched = false;\n    this._pendingTouched = false;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /**\n   * Marks the control as `dirty`. A control becomes dirty when\n   * the control's value is changed through the UI; compare `markAsTouched`.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsDirty(opts = {}) {\n    this.pristine = false;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n  /**\n   * Marks the control as `pristine`.\n   *\n   * If the control has any children, marks all children as `pristine`,\n   * and recalculates the `pristine` status of all parent\n   * controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   *\n   * @param opts Configuration options that determine how the control emits events after\n   * marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsPristine(opts = {}) {\n    this.pristine = true;\n    this._pendingDirty = false;\n    this._forEachChild(control => {\n      control.markAsPristine({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /**\n   * Marks the control as `pending`.\n   *\n   * A control is pending while the control performs async validation.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates changes and\n   * emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event with the latest status the control is marked pending.\n   * When false, no events are emitted.\n   *\n   */\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    if (opts.emitEvent !== false) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n  /**\n   * Disables the control. This means the control is exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children are also disabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control is disabled.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is disabled.\n   * When false, no events are emitted.\n   */\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine();\n      }\n      this._parent._updateTouched();\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  /**\n   * Recalculates the value and validation status of the control.\n   *\n   * By default, it also updates the value and validity of its ancestors.\n   *\n   * @param opts Configuration options determine how the control propagates changes and emits events\n   * after updates and validity checks are applied.\n   * * `onlySelf`: When true, only update this control. When false or not supplied,\n   * update all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is updated.\n   * When false, no events are emitted.\n   */\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        this._runAsyncValidator(opts.emitEvent);\n      }\n    }\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = true;\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = false;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      this._hasOwnPendingAsyncValidator = false;\n    }\n  }\n  /**\n   * Sets errors on a form control when running validations manually, rather than automatically.\n   *\n   * Calling `setErrors` also updates the validity of the parent control.\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control errors are set.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event after the errors are set.\n   *\n   * @usageNotes\n   *\n   * ### Manually set the errors for a control\n   *\n   * ```\n   * const login = new FormControl('someLogin');\n   * login.setErrors({\n   *   notUnique: true\n   * });\n   *\n   * expect(login.valid).toEqual(false);\n   * expect(login.errors).toEqual({ notUnique: true });\n   *\n   * login.setValue('someOtherLogin');\n   *\n   * expect(login.valid).toEqual(true);\n   * ```\n   */\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts = {}) {\n    this.pristine = !this._anyControlsDirty();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}) {\n    this.touched = this._anyControlsTouched();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue( /* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken('CallSetDisabledState', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ÉµRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ÉµRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    this.submitted = false;\n    this._directives = new Set();\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    this.ngSubmit = new EventEmitter();\n    this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n  /** @nodoc */\n  ngAfterViewInit() {\n    this._setUpdateStrategy();\n  }\n  /**\n   * @description\n   * The directive instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * The internal `FormGroup` instance.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it is always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Returns a map of the controls in this group.\n   */\n  get controls() {\n    return this.form.controls;\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  addControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      dir.control = container.registerControl(dir.name, dir.control);\n      setUpControl(dir.control, dir, this.callSetDisabledState);\n      dir.control.updateValueAndValidity({\n        emitEvent: false\n      });\n      this._directives.add(dir);\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `NgModel` instance from the internal list of directives\n   *\n   * @param dir The `NgModel` directive instance.\n   */\n  removeControl(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n      this._directives.delete(dir);\n    });\n  }\n  /**\n   * @description\n   * Adds a new `NgModelGroup` directive instance to the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  addFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      const group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({\n        emitEvent: false\n      });\n    });\n  }\n  /**\n   * @description\n   * Removes the `NgModelGroup` directive instance from the form.\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  removeFormGroup(dir) {\n    resolvedPromise$1.then(() => {\n      const container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n   *\n   * @param dir The `NgModelGroup` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `NgControl` directive.\n   *\n   * @param dir The `NgControl` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    resolvedPromise$1.then(() => {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    });\n  }\n  /**\n   * @description\n   * Sets the value for this `FormGroup`.\n   *\n   * @param value The new value\n   */\n  setValue(value) {\n    this.control.setValue(value);\n  }\n  /**\n   * @description\n   * Method called when the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this.submitted = true;\n    syncPendingControls(this.form, this._directives);\n    this.ngSubmit.emit($event);\n    // Forms with `method=\"dialog\"` have some special behavior\n    // that won't reload the page and that shouldn't be prevented.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value = undefined) {\n    this.form.reset(value);\n    this.submitted = false;\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.form._updateOn = this.options.updateOn;\n    }\n  }\n  _findContainer(path) {\n    path.pop();\n    return path.length ? this.form.get(path) : this.form;\n  }\n  static {\n    this.Éµfac = function NgForm_Factory(t) {\n      return new (t || NgForm)(i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgForm,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n      hostBindings: function NgForm_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function NgForm_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        options: [i0.ÉµÉµInputFlags.None, \"ngFormOptions\", \"options\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ÉµÉµProvidersFeature([formDirectiveProvider$1]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgForm, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n      providers: [formDirectiveProvider$1],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      outputs: ['ngSubmit'],\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    options: [{\n      type: Input,\n      args: ['ngFormOptions']\n    }]\n  });\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    /** @publicApi */\n    this.defaultValue = null;\n    /** @internal */\n    this._onChange = [];\n    /** @internal */\n    this._pendingChange = false;\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n  /** @nodoc */\n  ngOnInit() {\n    this._checkParentType();\n    // Register the group with its parent group.\n    this.formDirective.addFormGroup(this);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      // Remove the group from its parent group.\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormGroup(this);\n  }\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /** @internal */\n  _checkParentType() {}\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµAbstractFormGroupDirective_BaseFactory;\n      return function AbstractFormGroupDirective_Factory(t) {\n        return (ÉµAbstractFormGroupDirective_BaseFactory || (ÉµAbstractFormGroupDirective_BaseFactory = i0.ÉµÉµgetInheritedFactory(AbstractFormGroupDirective)))(t || AbstractFormGroupDirective);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: AbstractFormGroupDirective,\n      features: [i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AbstractFormGroupDirective, [{\n    type: Directive\n  }], null, null);\n})();\nfunction modelParentException() {\n  return new ÉµRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new ÉµRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new ÉµRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new ÉµRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    this.name = '';\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw modelGroupParentException();\n    }\n  }\n  static {\n    this.Éµfac = function NgModelGroup_Factory(t) {\n      return new (t || NgModelGroup)(i0.ÉµÉµdirectiveInject(ControlContainer, 5), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgModelGroup,\n      selectors: [[\"\", \"ngModelGroup\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"ngModelGroup\", \"name\"]\n      },\n      exportAs: [\"ngModelGroup\"],\n      features: [i0.ÉµÉµProvidersFeature([modelGroupProvider]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgModelGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModelGroup]',\n      providers: [modelGroupProvider],\n      exportAs: 'ngModelGroup'\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['ngModelGroup']\n    }]\n  });\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n  constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n    super();\n    this._changeDetectorRef = _changeDetectorRef;\n    this.callSetDisabledState = callSetDisabledState;\n    this.control = new FormControl();\n    /** @internal */\n    this._registered = false;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    this.name = '';\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    this.update = new EventEmitter();\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    this._checkForErrors();\n    if (!this._registered || 'name' in changes) {\n      if (this._registered) {\n        this._checkName();\n        if (this.formDirective) {\n          // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n          // changed. We also can't reset the name temporarily since the logic in `removeControl`\n          // is inside a promise and it won't run immediately. We work around it by giving it an\n          // object with the same shape instead.\n          const oldName = changes['name'].previousValue;\n          this.formDirective.removeControl({\n            name: oldName,\n            path: this._getPath(oldName)\n          });\n        }\n      }\n      this._setUpControl();\n    }\n    if ('isDisabled' in changes) {\n      this._updateDisabled(changes);\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this._updateValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this.formDirective && this.formDirective.removeControl(this);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return this._getPath(this.name);\n  }\n  /**\n   * @description\n   * The top-level directive for this control if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value emitted by `ngModelChange`.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _setUpControl() {\n    this._setUpdateStrategy();\n    this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n    this._registered = true;\n  }\n  _setUpdateStrategy() {\n    if (this.options && this.options.updateOn != null) {\n      this.control._updateOn = this.options.updateOn;\n    }\n  }\n  _isStandalone() {\n    return !this._parent || !!(this.options && this.options.standalone);\n  }\n  _setUpStandalone() {\n    setUpControl(this.control, this, this.callSetDisabledState);\n    this.control.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _checkForErrors() {\n    if (!this._isStandalone()) {\n      this._checkParentType();\n    }\n    this._checkName();\n  }\n  _checkParentType() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {\n        throw formGroupNameException();\n      } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n        throw modelParentException();\n      }\n    }\n  }\n  _checkName() {\n    if (this.options && this.options.name) this.name = this.options.name;\n    if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw missingNameException();\n    }\n  }\n  _updateValue(value) {\n    resolvedPromise.then(() => {\n      this.control.setValue(value, {\n        emitViewToModelChange: false\n      });\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _updateDisabled(changes) {\n    const disabledValue = changes['isDisabled'].currentValue;\n    // checking for 0 to avoid breaking change\n    const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n    resolvedPromise.then(() => {\n      if (isDisabled && !this.control.disabled) {\n        this.control.disable();\n      } else if (!isDisabled && this.control.disabled) {\n        this.control.enable();\n      }\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  _getPath(controlName) {\n    return this._parent ? controlPath(controlName, this._parent) : [controlName];\n  }\n  static {\n    this.Éµfac = function NgModel_Factory(t) {\n      return new (t || NgModel)(i0.ÉµÉµdirectiveInject(ControlContainer, 9), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ÉµÉµdirectiveInject(ChangeDetectorRef, 8), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgModel,\n      selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n      inputs: {\n        name: \"name\",\n        isDisabled: [i0.ÉµÉµInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ÉµÉµInputFlags.None, \"ngModel\", \"model\"],\n        options: [i0.ÉµÉµInputFlags.None, \"ngModelOptions\", \"options\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngModel\"],\n      features: [i0.ÉµÉµProvidersFeature([formControlBinding$1]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgModel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngModel]:not([formControlName]):not([formControl])',\n      providers: [formControlBinding$1],\n      exportAs: 'ngModel'\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ChangeDetectorRef]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    name: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    options: [{\n      type: Input,\n      args: ['ngModelOptions']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ÉµNgNoValidate {\n  static {\n    this.Éµfac = function ÉµNgNoValidate_Factory(t) {\n      return new (t || ÉµNgNoValidate)();\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: ÉµNgNoValidate,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n      hostAttrs: [\"novalidate\", \"\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ÉµNgNoValidate, [{\n    type: Directive,\n    args: [{\n      selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n      host: {\n        'novalidate': ''\n      }\n    }]\n  }], null, null);\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const normalizedValue = value == null ? '' : value;\n    this.setProperty('value', normalizedValue);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµNumberValueAccessor_BaseFactory;\n      return function NumberValueAccessor_Factory(t) {\n        return (ÉµNumberValueAccessor_BaseFactory || (ÉµNumberValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(NumberValueAccessor)))(t || NumberValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NumberValueAccessor,\n      selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n      hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NumberValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n      host: {\n        '(input)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [NUMBER_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new ÉµRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n  constructor() {\n    this._accessors = [];\n  }\n  /**\n   * @description\n   * Adds a control to the internal registry. For internal use only.\n   */\n  add(control, accessor) {\n    this._accessors.push([control, accessor]);\n  }\n  /**\n   * @description\n   * Removes a control from the internal registry. For internal use only.\n   */\n  remove(accessor) {\n    for (let i = this._accessors.length - 1; i >= 0; --i) {\n      if (this._accessors[i][1] === accessor) {\n        this._accessors.splice(i, 1);\n        return;\n      }\n    }\n  }\n  /**\n   * @description\n   * Selects a radio button. For internal use only.\n   */\n  select(accessor) {\n    this._accessors.forEach(c => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n  _isSameGroup(controlPair, accessor) {\n    if (!controlPair[0].control) return false;\n    return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n  }\n  static {\n    this.Éµfac = function RadioControlRegistry_Factory(t) {\n      return new (t || RadioControlRegistry)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: RadioControlRegistry,\n      factory: RadioControlRegistry.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RadioControlRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor(renderer, elementRef, _registry, _injector) {\n    super(renderer, elementRef);\n    this._registry = _registry;\n    this._injector = _injector;\n    this.setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @nodoc\n     */\n    this.onChange = () => {};\n    this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n      optional: true\n    }) ?? setDisabledStateDefault;\n  }\n  /** @nodoc */\n  ngOnInit() {\n    this._control = this._injector.get(NgControl);\n    this._checkName();\n    this._registry.add(this._control, this);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    this._registry.remove(this);\n  }\n  /**\n   * Sets the \"checked\" property value on the radio input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this._state = value === this.value;\n    this.setProperty('checked', this._state);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n  /** @nodoc */\n  setDisabledState(isDisabled) {\n    /**\n     * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n     * including upon control creation. However, a longstanding bug caused the method to not fire\n     * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n     *\n     * This had a side effect: previously, it was possible to instantiate a reactive form control\n     * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n     * model. This resulted in a mismatch between the model and the DOM. Now, because\n     * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n     * with the \"correct\" enabled value.\n     *\n     * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n     * models the entire group of radio buttons as a single `FormControl`, there is no way to\n     * control the disabled state for individual radios, so they can no longer be configured as\n     * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n     * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n     * is `false`, and we are not in legacy mode.\n     */\n    if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n      this.setProperty('disabled', isDisabled);\n    }\n    this.setDisabledStateFired = true;\n  }\n  /**\n   * Sets the \"value\" on the radio input element and unchecks it.\n   *\n   * @param value\n   */\n  fireUncheck(value) {\n    this.writeValue(value);\n  }\n  _checkName() {\n    if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwNameError();\n    }\n    if (!this.name && this.formControlName) this.name = this.formControlName;\n  }\n  static {\n    this.Éµfac = function RadioControlValueAccessor_Factory(t) {\n      return new (t || RadioControlValueAccessor)(i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(RadioControlRegistry), i0.ÉµÉµdirectiveInject(i0.Injector));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: RadioControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n      hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n            return ctx.onChange();\n          })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        name: \"name\",\n        formControlName: \"formControlName\",\n        value: \"value\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RadioControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n      host: {\n        '(change)': 'onChange()',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RADIO_VALUE_ACCESSOR]\n    }]\n  }], () => [{\n    type: i0.Renderer2\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: RadioControlRegistry\n  }, {\n    type: i0.Injector\n  }], {\n    name: [{\n      type: Input\n    }],\n    formControlName: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n  /**\n   * Sets the \"value\" property on the input element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.setProperty('value', parseFloat(value));\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = value => {\n      fn(value == '' ? null : parseFloat(value));\n    };\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµRangeValueAccessor_BaseFactory;\n      return function RangeValueAccessor_Factory(t) {\n        return (ÉµRangeValueAccessor_BaseFactory || (ÉµRangeValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(RangeValueAccessor)))(t || RangeValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: RangeValueAccessor,\n      selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n      hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RangeValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.value)',\n        '(input)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [RANGE_VALUE_ACCESSOR]\n    }]\n  }], null, null);\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlDirective. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static {\n    this._ngModelWarningSentOnce = false;\n  }\n  constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this.callSetDisabledState = callSetDisabledState;\n    /** @deprecated as of v6 */\n    this.update = new EventEmitter();\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    this._ngModelWarningSent = false;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (this._isControlChanged(changes)) {\n      const previousForm = changes['form'].previousValue;\n      if (previousForm) {\n        cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n      }\n      setUpControl(this.form, this, this.callSetDisabledState);\n      this.form.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n      }\n      this.form.setValue(this.model);\n      this.viewModel = this.model;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n    }\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * The `FormControl` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  _isControlChanged(changes) {\n    return changes.hasOwnProperty('form');\n  }\n  static {\n    this.Éµfac = function FormControlDirective_Factory(t) {\n      return new (t || FormControlDirective)(i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ÉµÉµdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormControlDirective,\n      selectors: [[\"\", \"formControl\", \"\"]],\n      inputs: {\n        form: [i0.ÉµÉµInputFlags.None, \"formControl\", \"form\"],\n        isDisabled: [i0.ÉµÉµInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ÉµÉµInputFlags.None, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ÉµÉµProvidersFeature([formControlBinding]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormControlDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formControl]',\n      providers: [formControlBinding],\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formControl']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n  constructor(validators, asyncValidators, callSetDisabledState) {\n    super();\n    this.callSetDisabledState = callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    this.submitted = false;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    this._onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    this.directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    this.form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    this.ngSubmit = new EventEmitter();\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n      this._oldForm = this.form;\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.form) {\n      cleanUpValidators(this.form, this);\n      // Currently the `onCollectionChange` callback is rewritten each time the\n      // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n      // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n      // Otherwise it might cause overriding a callback of some other directive instances. We should\n      // consider updating this logic later to make it similar to how `onChange` callbacks are\n      // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n      if (this.form._onCollectionChange === this._onCollectionChange) {\n        this.form._registerOnCollectionChange(() => {});\n      }\n    }\n  }\n  /**\n   * @description\n   * Returns this directive's instance.\n   */\n  get formDirective() {\n    return this;\n  }\n  /**\n   * @description\n   * Returns the `FormGroup` bound to this directive.\n   */\n  get control() {\n    return this.form;\n  }\n  /**\n   * @description\n   * Returns an array representing the path to this group. Because this directive\n   * always lives at the top level of a form, it always an empty array.\n   */\n  get path() {\n    return [];\n  }\n  /**\n   * @description\n   * Method that sets up the control directive in this group, re-calculates its value\n   * and validity, and adds the instance to the internal list of directives.\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  addControl(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpControl(ctrl, dir, this.callSetDisabledState);\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n    this.directives.push(dir);\n    return ctrl;\n  }\n  /**\n   * @description\n   * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  getControl(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * @description\n   * Removes the `FormControlName` instance from the internal list of directives\n   *\n   * @param dir The `FormControlName` directive instance.\n   */\n  removeControl(dir) {\n    cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n    removeListItem$1(this.directives, dir);\n  }\n  /**\n   * Adds a new `FormGroupName` directive instance to the form.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  addFormGroup(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  removeFormGroup(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n   *\n   * @param dir The `FormGroupName` directive instance.\n   */\n  getFormGroup(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  addFormArray(dir) {\n    this._setUpFormContainer(dir);\n  }\n  /**\n   * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n   * view.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  removeFormArray(dir) {\n    this._cleanUpFormContainer(dir);\n  }\n  /**\n   * @description\n   * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n   *\n   * @param dir The `FormArrayName` directive instance.\n   */\n  getFormArray(dir) {\n    return this.form.get(dir.path);\n  }\n  /**\n   * Sets the new value for the provided `FormControlName` directive.\n   *\n   * @param dir The `FormControlName` directive instance.\n   * @param value The new value for the directive's control.\n   */\n  updateModel(dir, value) {\n    const ctrl = this.form.get(dir.path);\n    ctrl.setValue(value);\n  }\n  /**\n   * @description\n   * Method called with the \"submit\" event is triggered on the form.\n   * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n   *\n   * @param $event The \"submit\" event object\n   */\n  onSubmit($event) {\n    this.submitted = true;\n    syncPendingControls(this.form, this.directives);\n    this.ngSubmit.emit($event);\n    // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n    // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n    // some internal apps call this method directly with the wrong arguments.\n    return $event?.target?.method === 'dialog';\n  }\n  /**\n   * @description\n   * Method called when the \"reset\" event is triggered on the form.\n   */\n  onReset() {\n    this.resetForm();\n  }\n  /**\n   * @description\n   * Resets the form to an initial value and resets its submitted status.\n   *\n   * @param value The new value for the form.\n   */\n  resetForm(value = undefined) {\n    this.form.reset(value);\n    this.submitted = false;\n  }\n  /** @internal */\n  _updateDomValue() {\n    this.directives.forEach(dir => {\n      const oldCtrl = dir.control;\n      const newCtrl = this.form.get(dir.path);\n      if (oldCtrl !== newCtrl) {\n        // Note: the value of the `dir.control` may not be defined, for example when it's a first\n        // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n        cleanUpControl(oldCtrl || null, dir);\n        // Check whether new control at the same location inside the corresponding `FormGroup` is an\n        // instance of `FormControl` and perform control setup only if that's the case.\n        // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n        // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n        // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n        if (isFormControl(newCtrl)) {\n          setUpControl(newCtrl, dir, this.callSetDisabledState);\n          dir.control = newCtrl;\n        }\n      }\n    });\n    this.form._updateTreeValidity({\n      emitEvent: false\n    });\n  }\n  _setUpFormContainer(dir) {\n    const ctrl = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    // NOTE: this operation looks unnecessary in case no new validators were added in\n    // `setUpFormContainer` call. Consider updating this code to match the logic in\n    // `_cleanUpFormContainer` function.\n    ctrl.updateValueAndValidity({\n      emitEvent: false\n    });\n  }\n  _cleanUpFormContainer(dir) {\n    if (this.form) {\n      const ctrl = this.form.get(dir.path);\n      if (ctrl) {\n        const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n        if (isControlUpdated) {\n          // Run validity check only in case a control was updated (i.e. view validators were\n          // removed) as removing view validators might cause validity to change.\n          ctrl.updateValueAndValidity({\n            emitEvent: false\n          });\n        }\n      }\n    }\n  }\n  _updateRegistrations() {\n    this.form._registerOnCollectionChange(this._onCollectionChange);\n    if (this._oldForm) {\n      this._oldForm._registerOnCollectionChange(() => {});\n    }\n  }\n  _updateValidators() {\n    setUpValidators(this.form, this);\n    if (this._oldForm) {\n      cleanUpValidators(this._oldForm, this);\n    }\n  }\n  _checkFormPresent() {\n    if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw missingFormException();\n    }\n  }\n  static {\n    this.Éµfac = function FormGroupDirective_Factory(t) {\n      return new (t || FormGroupDirective)(i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormGroupDirective,\n      selectors: [[\"\", \"formGroup\", \"\"]],\n      hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        form: [i0.ÉµÉµInputFlags.None, \"formGroup\", \"form\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      features: [i0.ÉµÉµProvidersFeature([formDirectiveProvider]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroup]',\n      providers: [formDirectiveProvider],\n      host: {\n        '(submit)': 'onSubmit($event)',\n        '(reset)': 'onReset()'\n      },\n      exportAs: 'ngForm'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CALL_SET_DISABLED_STATE]\n    }]\n  }], {\n    form: [{\n      type: Input,\n      args: ['formGroup']\n    }],\n    ngSubmit: [{\n      type: Output\n    }]\n  });\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    this.name = null;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /** @internal */\n  _checkParentType() {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw groupParentException();\n    }\n  }\n  static {\n    this.Éµfac = function FormGroupName_Factory(t) {\n      return new (t || FormGroupName)(i0.ÉµÉµdirectiveInject(ControlContainer, 13), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormGroupName,\n      selectors: [[\"\", \"formGroupName\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"formGroupName\", \"name\"]\n      },\n      features: [i0.ÉµÉµProvidersFeature([formGroupNameProvider]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormGroupName, [{\n    type: Directive,\n    args: [{\n      selector: '[formGroupName]',\n      providers: [formGroupNameProvider]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formGroupName']\n    }]\n  });\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n  constructor(parent, validators, asyncValidators) {\n    super();\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    this.name = null;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n  }\n  /**\n   * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n   * @throws If the directive does not have a valid parent.\n   * @nodoc\n   */\n  ngOnInit() {\n    this._checkParentType();\n    this.formDirective.addFormArray(this);\n  }\n  /**\n   * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n   * @nodoc\n   */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      this.formDirective.removeFormArray(this);\n    }\n  }\n  /**\n   * @description\n   * The `FormArray` bound to this directive.\n   */\n  get control() {\n    return this.formDirective.getFormArray(this);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  _checkParentType() {\n    if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw arrayParentException();\n    }\n  }\n  static {\n    this.Éµfac = function FormArrayName_Factory(t) {\n      return new (t || FormArrayName)(i0.ÉµÉµdirectiveInject(ControlContainer, 13), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormArrayName,\n      selectors: [[\"\", \"formArrayName\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"formArrayName\", \"name\"]\n      },\n      features: [i0.ÉµÉµProvidersFeature([formArrayNameProvider]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormArrayName, [{\n    type: Directive,\n    args: [{\n      selector: '[formArrayName]',\n      providers: [formArrayNameProvider]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formArrayName']\n    }]\n  });\n})();\nfunction _hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n  /**\n   * @description\n   * Triggers a warning in dev mode that this input should not be used with reactive forms.\n   */\n  set isDisabled(isDisabled) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      console.warn(disabledAttrWarning);\n    }\n  }\n  /**\n   * @description\n   * Static property used to track whether any ngModel warnings have been sent across\n   * all instances of FormControlName. Used to support warning config of \"once\".\n   *\n   * @internal\n   */\n  static {\n    this._ngModelWarningSentOnce = false;\n  }\n  constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n    super();\n    this._ngModelWarningConfig = _ngModelWarningConfig;\n    this._added = false;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    this.name = null;\n    /** @deprecated as of v6 */\n    this.update = new EventEmitter();\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    this._ngModelWarningSent = false;\n    this._parent = parent;\n    this._setValidators(validators);\n    this._setAsyncValidators(asyncValidators);\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (!this._added) this._setUpControl();\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n      }\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n  /**\n   * @description\n   * Sets the new value for the view model and emits an `ngModelChange` event.\n   *\n   * @param newValue The new value for the view model.\n   */\n  viewToModelUpdate(newValue) {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  get formDirective() {\n    return this._parent ? this._parent.formDirective : null;\n  }\n  _checkParentType() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {\n        throw ngModelGroupException();\n      } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {\n        throw controlParentException();\n      }\n    }\n  }\n  _setUpControl() {\n    this._checkParentType();\n    this.control = this.formDirective.addControl(this);\n    this._added = true;\n  }\n  static {\n    this.Éµfac = function FormControlName_Factory(t) {\n      return new (t || FormControlName)(i0.ÉµÉµdirectiveInject(ControlContainer, 13), i0.ÉµÉµdirectiveInject(NG_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ÉµÉµdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ÉµÉµdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: FormControlName,\n      selectors: [[\"\", \"formControlName\", \"\"]],\n      inputs: {\n        name: [i0.ÉµÉµInputFlags.None, \"formControlName\", \"name\"],\n        isDisabled: [i0.ÉµÉµInputFlags.None, \"disabled\", \"isDisabled\"],\n        model: [i0.ÉµÉµInputFlags.None, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([controlNameBinding]), i0.ÉµÉµInheritDefinitionFeature, i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormControlName, [{\n    type: Directive,\n    args: [{\n      selector: '[formControlName]',\n      providers: [controlNameBinding]\n    }]\n  }], () => [{\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_ASYNC_VALIDATORS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n    }]\n  }], {\n    name: [{\n      type: Input,\n      args: ['formControlName']\n    }],\n    isDisabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    model: [{\n      type: Input,\n      args: ['ngModel']\n    }],\n    update: [{\n      type: Output,\n      args: ['ngModelChange']\n    }]\n  });\n})();\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this._optionMap = new Map();\n    /** @internal */\n    this._idCounter = 0;\n    this._compareWith = Object.is;\n  }\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new ÉµRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  /**\n   * Sets the \"value\" property on the select element.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.value = value;\n    const id = this._getOptionId(value);\n    const valueString = _buildValueString$1(id, value);\n    this.setProperty('value', valueString);\n  }\n  /**\n   * Registers a function called when the control value changes.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = valueString => {\n      this.value = this._getOptionValue(valueString);\n      fn(this.value);\n    };\n  }\n  /** @internal */\n  _registerOption() {\n    return (this._idCounter++).toString();\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId$1(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµSelectControlValueAccessor_BaseFactory;\n      return function SelectControlValueAccessor_Factory(t) {\n        return (ÉµSelectControlValueAccessor_BaseFactory || (ÉµSelectControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(SelectControlValueAccessor)))(t || SelectControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: SelectControlValueAccessor,\n      selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n      hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(SelectControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n      host: {\n        '(change)': 'onChange($event.target.value)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) this.id = this._select._registerOption();\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString$1(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    this._setElementValue(value);\n    if (this._select) this._select.writeValue(this._select.value);\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n  static {\n    this.Éµfac = function NgSelectOption_Factory(t) {\n      return new (t || NgSelectOption)(i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(SelectControlValueAccessor, 9));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: NgSelectOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgSelectOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this._optionMap = new Map();\n    /** @internal */\n    this._idCounter = 0;\n    this._compareWith = Object.is;\n  }\n  /**\n   * @description\n   * Tracks the option comparison algorithm for tracking identities when\n   * checking for changes.\n   */\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new ÉµRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\n  /**\n   * Sets the \"value\" property on one or of more of the select's options.\n   * @nodoc\n   */\n  writeValue(value) {\n    this.value = value;\n    let optionSelectedStateSetter;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const ids = value.map(v => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(ids.indexOf(o.toString()) > -1);\n      };\n    } else {\n      optionSelectedStateSetter = (opt, o) => {\n        opt._setSelected(false);\n      };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n  /**\n   * Registers a function called when the control value changes\n   * and writes an array of the selected options.\n   * @nodoc\n   */\n  registerOnChange(fn) {\n    this.onChange = element => {\n      const selected = [];\n      const selectedOptions = element.selectedOptions;\n      if (selectedOptions !== undefined) {\n        const options = selectedOptions;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          const val = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade to use `options` when `selectedOptions` property is not available.\n      // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n      // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n      else {\n        const options = element.options;\n        for (let i = 0; i < options.length; i++) {\n          const opt = options[i];\n          if (opt.selected) {\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n  /** @internal */\n  _registerOption(value) {\n    const id = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n  /** @internal */\n  _getOptionId(value) {\n    for (const id of this._optionMap.keys()) {\n      if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n    }\n    return null;\n  }\n  /** @internal */\n  _getOptionValue(valueString) {\n    const id = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµSelectMultipleControlValueAccessor_BaseFactory;\n      return function SelectMultipleControlValueAccessor_Factory(t) {\n        return (ÉµSelectMultipleControlValueAccessor_BaseFactory || (ÉµSelectMultipleControlValueAccessor_BaseFactory = i0.ÉµÉµgetInheritedFactory(SelectMultipleControlValueAccessor)))(t || SelectMultipleControlValueAccessor);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: SelectMultipleControlValueAccessor,\n      selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n      hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target);\n          })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(SelectMultipleControlValueAccessor, [{\n    type: Directive,\n    args: [{\n      selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n      host: {\n        '(change)': 'onChange($event.target)',\n        '(blur)': 'onTouched()'\n      },\n      providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n    }]\n  }], null, {\n    compareWith: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ÉµNgSelectMultipleOption {\n  constructor(_element, _renderer, _select) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this._select = _select;\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n  /**\n   * @description\n   * Tracks the value bound to the option element. Unlike the value binding,\n   * ngValue supports binding to objects.\n   */\n  set ngValue(value) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n  /**\n   * @description\n   * Tracks simple string values bound to the option element.\n   * For objects, use the `ngValue` input binding.\n   */\n  set value(value) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n  /** @internal */\n  _setElementValue(value) {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n  /** @internal */\n  _setSelected(selected) {\n    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n  }\n  /** @nodoc */\n  ngOnDestroy() {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\n  static {\n    this.Éµfac = function ÉµNgSelectMultipleOption_Factory(t) {\n      return new (t || ÉµNgSelectMultipleOption)(i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(i0.Renderer2), i0.ÉµÉµdirectiveInject(SelectMultipleControlValueAccessor, 9));\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: ÉµNgSelectMultipleOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ÉµNgSelectMultipleOption, [{\n    type: Directive,\n    args: [{\n      selector: 'option'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: SelectMultipleControlValueAccessor,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }], {\n    ngValue: [{\n      type: Input,\n      args: ['ngValue']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n  constructor() {\n    this._validator = nullValidator;\n  }\n  /** @nodoc */\n  ngOnChanges(changes) {\n    if (this.inputName in changes) {\n      const input = this.normalizeInput(changes[this.inputName].currentValue);\n      this._enabled = this.enabled(input);\n      this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n      if (this._onChange) {\n        this._onChange();\n      }\n    }\n  }\n  /** @nodoc */\n  validate(control) {\n    return this._validator(control);\n  }\n  /** @nodoc */\n  registerOnValidatorChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * @description\n   * Determines whether this validator should be active or not based on an input.\n   * Base class implementation checks whether an input is defined (if the value is different from\n   * `null` and `undefined`). Validator classes that extend this base class can override this\n   * function with the logic specific to a particular validator directive.\n   */\n  enabled(input) {\n    return input != null /* both `null` and `undefined` */;\n  }\n  static {\n    this.Éµfac = function AbstractValidatorDirective_Factory(t) {\n      return new (t || AbstractValidatorDirective)();\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: AbstractValidatorDirective,\n      features: [i0.ÉµÉµNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AbstractValidatorDirective, [{\n    type: Directive\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'max';\n    /** @internal */\n    this.normalizeInput = input => toFloat(input);\n    /** @internal */\n    this.createValidator = max => maxValidator(max);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMaxValidator_BaseFactory;\n      return function MaxValidator_Factory(t) {\n        return (ÉµMaxValidator_BaseFactory || (ÉµMaxValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MaxValidator)))(t || MaxValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MaxValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"max\", ctx._enabled ? ctx.max : null);\n        }\n      },\n      inputs: {\n        max: \"max\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MAX_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MaxValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n      providers: [MAX_VALIDATOR],\n      host: {\n        '[attr.max]': '_enabled ? max : null'\n      }\n    }]\n  }], null, {\n    max: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'min';\n    /** @internal */\n    this.normalizeInput = input => toFloat(input);\n    /** @internal */\n    this.createValidator = min => minValidator(min);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMinValidator_BaseFactory;\n      return function MinValidator_Factory(t) {\n        return (ÉµMinValidator_BaseFactory || (ÉµMinValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MinValidator)))(t || MinValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MinValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"min\", ctx._enabled ? ctx.min : null);\n        }\n      },\n      inputs: {\n        min: \"min\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MIN_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MinValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n      providers: [MIN_VALIDATOR],\n      host: {\n        '[attr.min]': '_enabled ? min : null'\n      }\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'required';\n    /** @internal */\n    this.normalizeInput = booleanAttribute;\n    /** @internal */\n    this.createValidator = input => requiredValidator;\n  }\n  /** @nodoc */\n  enabled(input) {\n    return input;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµRequiredValidator_BaseFactory;\n      return function RequiredValidator_Factory(t) {\n        return (ÉµRequiredValidator_BaseFactory || (ÉµRequiredValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(RequiredValidator)))(t || RequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: RequiredValidator,\n      selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n      hostVars: 1,\n      hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      inputs: {\n        required: \"required\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([REQUIRED_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(RequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n      providers: [REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      }\n    }]\n  }], null, {\n    required: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.createValidator = input => requiredTrueValidator;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµCheckboxRequiredValidator_BaseFactory;\n      return function CheckboxRequiredValidator_Factory(t) {\n        return (ÉµCheckboxRequiredValidator_BaseFactory || (ÉµCheckboxRequiredValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(CheckboxRequiredValidator)))(t || CheckboxRequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: CheckboxRequiredValidator,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      features: [i0.ÉµÉµProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(CheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n      providers: [CHECKBOX_REQUIRED_VALIDATOR],\n      host: {\n        '[attr.required]': '_enabled ? \"\" : null'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'email';\n    /** @internal */\n    this.normalizeInput = booleanAttribute;\n    /** @internal */\n    this.createValidator = input => emailValidator;\n  }\n  /** @nodoc */\n  enabled(input) {\n    return input;\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµEmailValidator_BaseFactory;\n      return function EmailValidator_Factory(t) {\n        return (ÉµEmailValidator_BaseFactory || (ÉµEmailValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(EmailValidator)))(t || EmailValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: EmailValidator,\n      selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n      inputs: {\n        email: \"email\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([EMAIL_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(EmailValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n      providers: [EMAIL_VALIDATOR]\n    }]\n  }], null, {\n    email: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'minlength';\n    /** @internal */\n    this.normalizeInput = input => toInteger(input);\n    /** @internal */\n    this.createValidator = minlength => minLengthValidator(minlength);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMinLengthValidator_BaseFactory;\n      return function MinLengthValidator_Factory(t) {\n        return (ÉµMinLengthValidator_BaseFactory || (ÉµMinLengthValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MinLengthValidator)))(t || MinLengthValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MinLengthValidator,\n      selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n        }\n      },\n      inputs: {\n        minlength: \"minlength\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MinLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n      providers: [MIN_LENGTH_VALIDATOR],\n      host: {\n        '[attr.minlength]': '_enabled ? minlength : null'\n      }\n    }]\n  }], null, {\n    minlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'maxlength';\n    /** @internal */\n    this.normalizeInput = input => toInteger(input);\n    /** @internal */\n    this.createValidator = maxlength => maxLengthValidator(maxlength);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµMaxLengthValidator_BaseFactory;\n      return function MaxLengthValidator_Factory(t) {\n        return (ÉµMaxLengthValidator_BaseFactory || (ÉµMaxLengthValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(MaxLengthValidator)))(t || MaxLengthValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: MaxLengthValidator,\n      selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n        }\n      },\n      inputs: {\n        maxlength: \"maxlength\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(MaxLengthValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n      providers: [MAX_LENGTH_VALIDATOR],\n      host: {\n        '[attr.maxlength]': '_enabled ? maxlength : null'\n      }\n    }]\n  }], null, {\n    maxlength: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n  constructor() {\n    super(...arguments);\n    /** @internal */\n    this.inputName = 'pattern';\n    /** @internal */\n    this.normalizeInput = input => input;\n    /** @internal */\n    this.createValidator = input => patternValidator(input);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµPatternValidator_BaseFactory;\n      return function PatternValidator_Factory(t) {\n        return (ÉµPatternValidator_BaseFactory || (ÉµPatternValidator_BaseFactory = i0.ÉµÉµgetInheritedFactory(PatternValidator)))(t || PatternValidator);\n      };\n    })();\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: PatternValidator,\n      selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ÉµÉµattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n        }\n      },\n      inputs: {\n        pattern: \"pattern\"\n      },\n      features: [i0.ÉµÉµProvidersFeature([PATTERN_VALIDATOR]), i0.ÉµÉµInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(PatternValidator, [{\n    type: Directive,\n    args: [{\n      selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n      providers: [PATTERN_VALIDATOR],\n      host: {\n        '[attr.pattern]': '_enabled ? pattern : null'\n      }\n    }]\n  }], null, {\n    pattern: [{\n      type: Input\n    }]\n  });\n})();\nconst SHARED_FORM_DIRECTIVES = [ÉµNgNoValidate, NgSelectOption, ÉµNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ÉµInternalFormsSharedModule {\n  static {\n    this.Éµfac = function ÉµInternalFormsSharedModule_Factory(t) {\n      return new (t || ÉµInternalFormsSharedModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: ÉµInternalFormsSharedModule\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ÉµInternalFormsSharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: SHARED_FORM_DIRECTIVES,\n      exports: SHARED_FORM_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n// clang-format on\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n  constructor() {\n    this.useNonNullable = false;\n  }\n  /**\n   * @description\n   * Returns a FormBuilder in which automatically constructed `FormControl` elements\n   * have `{nonNullable: true}` and are non-nullable.\n   *\n   * **Constructing non-nullable controls**\n   *\n   * When constructing a control, it will be non-nullable, and will reset to its initial value.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.control('Alex'); // FormControl<string>\n   * name.reset();\n   * console.log(name); // 'Alex'\n   * ```\n   *\n   * **Constructing non-nullable groups or arrays**\n   *\n   * When constructing a group or array, all automatically created inner controls will be\n   * non-nullable, and will reset to their initial values.\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n   * name.reset();\n   * console.log(name); // {who: 'Alex'}\n   * ```\n   * **Constructing *nullable* fields on groups or arrays**\n   *\n   * It is still possible to have a nullable field. In particular, any `FormControl` which is\n   * *already* constructed will not be altered. For example:\n   *\n   * ```ts\n   * let nnfb = new FormBuilder().nonNullable;\n   * // FormGroup<{who: FormControl<string|null>}>\n   * let name = nnfb.group({who: new FormControl('Alex')});\n   * name.reset(); console.log(name); // {who: null}\n   * ```\n   *\n   * Because the inner control is constructed explicitly by the caller, the builder has\n   * no control over how it is created, and cannot exclude the `null`.\n   */\n  get nonNullable() {\n    const nnfb = new FormBuilder();\n    nnfb.useNonNullable = true;\n    return nnfb;\n  }\n  group(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    let newOptions = {};\n    if (isAbstractControlOptions(options)) {\n      // `options` are `AbstractControlOptions`\n      newOptions = options;\n    } else if (options !== null) {\n      // `options` are legacy form group options\n      newOptions.validators = options.validator;\n      newOptions.asyncValidators = options.asyncValidator;\n    }\n    return new FormGroup(reducedControls, newOptions);\n  }\n  /**\n   * @description\n   * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n   * containing all the keys and corresponding inner control types.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param options Configuration options object for the `FormRecord`. The object should have the\n   * `AbstractControlOptions` type and might contain the following fields:\n   * * `validators`: A synchronous validator function, or an array of validator functions.\n   * * `asyncValidators`: A single async validator or array of async validator functions.\n   * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n   * | submit').\n   */\n  record(controls, options = null) {\n    const reducedControls = this._reduceControls(controls);\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormRecord(reducedControls, options);\n  }\n  /**\n   * @description\n   * Constructs a new `FormControl` with the given state, validators and options. Sets\n   * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n   * control will be nullable. Accepts a single generic argument, which is the type  of the\n   * control's value.\n   *\n   * @param formState Initializes the control with an initial state value, or\n   * with an object that contains both a value and a disabled status.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or a `FormControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator\n   * functions.\n   *\n   * @usageNotes\n   *\n   * ### Initialize a control as disabled\n   *\n   * The following example returns a control with an initial value in a disabled state.\n   *\n   * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n   * </code-example>\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    let newOptions = {};\n    if (!this.useNonNullable) {\n      return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    if (isAbstractControlOptions(validatorOrOpts)) {\n      // If the second argument is options, then they are copied.\n      newOptions = validatorOrOpts;\n    } else {\n      // If the other arguments are validators, they are copied into an options object.\n      newOptions.validators = validatorOrOpts;\n      newOptions.asyncValidators = asyncValidator;\n    }\n    return new FormControl(formState, {\n      ...newOptions,\n      nonNullable: true\n    });\n  }\n  /**\n   * Constructs a new `FormArray` from the given array of configurations,\n   * validators and options. Accepts a single generic argument, which is the type of each control\n   * inside the array.\n   *\n   * @param controls An array of child controls or control configs. Each child control is given an\n   *     index when it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n   *     `AbstractControlOptions` object that contains\n   * validation functions and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions.\n   */\n  array(controls, validatorOrOpts, asyncValidator) {\n    const createdControls = controls.map(c => this._createControl(c));\n    // Cast to `any` because the inferred types are not as specific as Element.\n    return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n  }\n  /** @internal */\n  _reduceControls(controls) {\n    const createdControls = {};\n    Object.keys(controls).forEach(controlName => {\n      createdControls[controlName] = this._createControl(controls[controlName]);\n    });\n    return createdControls;\n  }\n  /** @internal */\n  _createControl(controls) {\n    if (controls instanceof FormControl) {\n      return controls;\n    } else if (controls instanceof AbstractControl) {\n      // A control; just return it\n      return controls;\n    } else if (Array.isArray(controls)) {\n      // ControlConfig Tuple\n      const value = controls[0];\n      const validator = controls.length > 1 ? controls[1] : null;\n      const asyncValidator = controls.length > 2 ? controls[2] : null;\n      return this.control(value, validator, asyncValidator);\n    } else {\n      // T or FormControlState<T>\n      return this.control(controls);\n    }\n  }\n  static {\n    this.Éµfac = function FormBuilder_Factory(t) {\n      return new (t || FormBuilder)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: FormBuilder,\n      factory: FormBuilder.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n  static {\n    this.Éµfac = function NonNullableFormBuilder_Factory(t) {\n      return new (t || NonNullableFormBuilder)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: NonNullableFormBuilder,\n      factory: () => (() => inject(FormBuilder).nonNullable)(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NonNullableFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(FormBuilder).nonNullable\n    }]\n  }], null, null);\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n  group(controlsConfig, options = null) {\n    return super.group(controlsConfig, options);\n  }\n  /**\n   * Like `FormBuilder#control`, except the resulting control is untyped.\n   */\n  control(formState, validatorOrOpts, asyncValidator) {\n    return super.control(formState, validatorOrOpts, asyncValidator);\n  }\n  /**\n   * Like `FormBuilder#array`, except the resulting array is untyped.\n   */\n  array(controlsConfig, validatorOrOpts, asyncValidator) {\n    return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n  }\n  static {\n    this.Éµfac = /* @__PURE__ */(() => {\n      let ÉµUntypedFormBuilder_BaseFactory;\n      return function UntypedFormBuilder_Factory(t) {\n        return (ÉµUntypedFormBuilder_BaseFactory || (ÉµUntypedFormBuilder_BaseFactory = i0.ÉµÉµgetInheritedFactory(UntypedFormBuilder)))(t || UntypedFormBuilder);\n      };\n    })();\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: UntypedFormBuilder,\n      factory: UntypedFormBuilder.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(UntypedFormBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('17.3.12');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n  /**\n   * @description\n   * Provides options for configuring the forms module.\n   *\n   * @param opts An object of configuration options\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: FormsModule,\n      providers: [{\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static {\n    this.Éµfac = function FormsModule_Factory(t) {\n      return new (t || FormsModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: FormsModule\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      imports: [ÉµInternalFormsSharedModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(FormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n      exports: [ÉµInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n  /**\n   * @description\n   * Provides options for configuring the reactive forms module.\n   *\n   * @param opts An object of configuration options\n   * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n   * binding is used with reactive form directives.\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts) {\n    return {\n      ngModule: ReactiveFormsModule,\n      providers: [{\n        provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n        useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n      }, {\n        provide: CALL_SET_DISABLED_STATE,\n        useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n      }]\n    };\n  }\n  static {\n    this.Éµfac = function ReactiveFormsModule_Factory(t) {\n      return new (t || ReactiveFormsModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: ReactiveFormsModule\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      imports: [ÉµInternalFormsSharedModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ReactiveFormsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n      exports: [ÉµInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, isFormArray, isFormControl, isFormGroup, isFormRecord, ÉµInternalFormsSharedModule, ÉµNgNoValidate, ÉµNgSelectMultipleOption };\n","import { NgClass } from '@angular/common';\r\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  standalone: true,\r\n  imports: [NgClass],\r\n  templateUrl: './pagination.component.html',\r\n  styleUrl: './pagination.component.scss'\r\n})\r\nexport class PaginationComponent implements OnInit,AfterViewInit{\r\n  @Input() pages!:number;\r\n  @Input() currentPage!:number;\r\n  @Output() targetPage:EventEmitter<string> = new EventEmitter<string>();\r\n  limit!:number;\r\n  start!:number;\r\n  bigPagination:boolean = false;\r\n\r\n  constructor(private RendereV2:Renderer2){}\r\n\r\n  ngOnInit(): void {\r\n      this.initializeProperties();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.constructView();\r\n  }\r\n  \r\n  initializeProperties():void {\r\n    this.limit = (this.currentPage + 3 <= this.pages) ? this.currentPage + 3 : this.pages;\r\n\r\n      if(this.pages >= 5 && this.pages - this.currentPage <= 3) {\r\n        this.bigPagination = true;\r\n\r\n        if(this.pages - this.currentPage === 0)\r\n          this.start = this.pages - 3;\r\n        else if(this.pages - this.currentPage === 1)\r\n          this.start = this.currentPage - 2;\r\n        else if(this.pages - this.currentPage === 2)\r\n          this.start = this.currentPage - 1;\r\n        else\r\n          this.start = this.currentPage;\r\n      }\r\n      else\r\n        this.start = (this.pages < 5) ? 1 : this.currentPage;\r\n  }\r\n\r\n  constructView():void {\r\n    const paginationContainer = document.querySelector(\".pagination-container\");\r\n\r\n    for(let i = this.start; i <= this.limit; i++) {\r\n      const pageNumber = this.createPageNumber(i.toString(), (i === this.currentPage) ? true : false);\r\n      this.RendereV2.appendChild(paginationContainer, pageNumber);\r\n\r\n      if(i === this.limit && this.limit !== this.pages) {\r\n        const dots = this.createDots();\r\n        const pageNumber = this.createPageNumber(this.pages.toString());\r\n        this.RendereV2.appendChild(paginationContainer, dots);\r\n        this.RendereV2.appendChild(paginationContainer, pageNumber);\r\n      }\r\n      else if(i === this.limit && this.limit === this.pages && this.bigPagination) {\r\n        const dots = this.createDots();\r\n        const pageNumber = this.createPageNumber(\"1\");\r\n        this.RendereV2.insertBefore(paginationContainer, dots, paginationContainer?.firstChild);\r\n        this.RendereV2.insertBefore(paginationContainer, pageNumber, paginationContainer?.firstChild);\r\n      }\r\n    }\r\n  }\r\n\r\n  createDots():HTMLDivElement {\r\n    const dots = this.RendereV2.createElement(\"div\");\r\n    this.RendereV2.addClass(dots, \"dots\");\r\n    this.RendereV2.setProperty(dots, \"innerText\", \".....\");\r\n    return dots;\r\n  }\r\n\r\n  createPageNumber(text:string, isCurrentPage?:boolean):HTMLDivElement {\r\n    const pageNumber = this.RendereV2.createElement(\"div\");\r\n    if(isCurrentPage) {\r\n      this.RendereV2.addClass(pageNumber, \"clicked\");\r\n    }\r\n    this.RendereV2.setProperty(pageNumber, \"innerText\", text);\r\n    this.RendereV2.addClass(pageNumber, \"page-number\");\r\n    this.RendereV2.listen(pageNumber, \"click\", this.openPage);\r\n    return pageNumber;\r\n  }\r\n\r\n  private openPage = ($event?:Event):void => {\r\n    const page = ($event!.currentTarget as HTMLDivElement).textContent;\r\n    this.changeClickedPage(($event?.currentTarget as HTMLDivElement));\r\n    this.targetPage.emit((page as string));\r\n  }\r\n\r\n  nextPage = ():void => {\r\n    if(this.currentPage !== this.pages) {\r\n      this.targetPage.emit((this.currentPage + 1).toString());\r\n      let newPageNumber = Array.from(document.querySelectorAll(\".page-number\")).filter((item) => {\r\n        if(item.textContent === (this.currentPage + 1).toString())\r\n          return true;\r\n        else\r\n          return false;\r\n      })[0];\r\n      this.changeClickedPage(newPageNumber as HTMLDivElement);\r\n    }\r\n  }\r\n\r\n  prevPage = ():void => {\r\n    if(this.currentPage !== 1) {\r\n      this.targetPage.emit((this.currentPage - 1).toString());\r\n      let newPageNumber = Array.from(document.querySelectorAll(\".page-number\")).filter((item) => {\r\n        if(item.textContent === (this.currentPage - 1).toString())\r\n          return true;\r\n        else\r\n          return false;\r\n      })[0];\r\n      this.changeClickedPage(newPageNumber as HTMLDivElement);\r\n    }\r\n  }\r\n\r\n  changeClickedPage(pageNumber:HTMLDivElement):void {\r\n    document.querySelectorAll(\".page-number\").forEach((item) => {\r\n      item.classList.remove(\"clicked\");\r\n    });\r\n    this.RendereV2.addClass(pageNumber, \"clicked\");\r\n  }\r\n}","<div class=\"main-container my-8\">\r\n    <div class=\"flex justify-center items-center page-number\" [ngClass]=\"{'!bg-[#a1a1a1] !text-black !cursor-not-allowed': (currentPage == 1)}\" (click)=\"prevPage()\">\r\n        <i class=\"fa-solid fa-arrow-left\"></i>\r\n    </div>\r\n    <div class=\"pagination-container\"></div>\r\n    <div class=\"flex justify-center items-center page-number\" [ngClass]=\"{'!bg-[#a1a1a1] !text-black !cursor-not-allowed': (currentPage == pages)}\" (click)=\"nextPage()\">\r\n        <i class=\"fa-solid fa-arrow-right\"></i>\r\n    </div>\r\n</div>","import { Product, Products } from './../../Interfaces/Products/products';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseURL } from '../../Base/Environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  constructor(private _HTTPClient:HttpClient) { }\r\n\r\n  getProducts(page?:string):Observable<null|Products> {\r\n    let url:string = (page) ? `${BaseURL.baseURL}/api/v1/products?page=${page}` : `${BaseURL.baseURL}/api/v1/products`;\r\n    return this._HTTPClient.get<null|Products>(url);\r\n  }\r\n\r\n  getSpecificProduct(productId:string):Observable<null|{data:Product}> {\r\n    return this._HTTPClient.get<null|{data:Product}>(`${BaseURL.baseURL}/api/v1/products/${productId}`);\r\n  }\r\n}\r\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Injectable, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, Inject, signal, Component, ChangeDetectionStrategy, HostBinding, HostListener, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, NgIf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/platform-browser';\nconst _c0 = [\"toast-component\", \"\"];\nfunction Toast_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"button\", 5);\n    i0.ÉµÉµlistener(\"click\", function Toast_button_0_Template_button_click_0_listener() {\n      i0.ÉµÉµrestoreView(_r1);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.remove());\n    });\n    i0.ÉµÉµelementStart(1, \"span\", 6);\n    i0.ÉµÉµtext(2, \"\\xD7\");\n    i0.ÉµÉµelementEnd()();\n  }\n}\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\"[\", ctx_r1.duplicatesCount + 1, \"]\");\n  }\n}\nfunction Toast_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\");\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµtemplate(2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.options.titleClass);\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.title);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\nfunction Toast_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.options.messageClass);\n    i0.ÉµÉµproperty(\"innerHTML\", ctx_r1.message, i0.ÉµÉµsanitizeHtml);\n  }\n}\nfunction Toast_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 8);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.options.messageClass);\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.message);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r1.message, \" \");\n  }\n}\nfunction Toast_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\");\n    i0.ÉµÉµelement(1, \"div\", 9);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµstyleProp(\"width\", ctx_r1.width() + \"%\");\n  }\n}\nfunction ToastNoAnimation_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"button\", 5);\n    i0.ÉµÉµlistener(\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() {\n      i0.ÉµÉµrestoreView(_r1);\n      const ctx_r1 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r1.remove());\n    });\n    i0.ÉµÉµelementStart(1, \"span\", 6);\n    i0.ÉµÉµtext(2, \"\\xD7\");\n    i0.ÉµÉµelementEnd()();\n  }\n}\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementContainerStart(0);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\"[\", ctx_r1.duplicatesCount + 1, \"]\");\n  }\n}\nfunction ToastNoAnimation_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\");\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµtemplate(2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.options.titleClass);\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.title);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\nfunction ToastNoAnimation_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.options.messageClass);\n    i0.ÉµÉµproperty(\"innerHTML\", ctx_r1.message, i0.ÉµÉµsanitizeHtml);\n  }\n}\nfunction ToastNoAnimation_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 8);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµclassMap(ctx_r1.options.messageClass);\n    i0.ÉµÉµattribute(\"aria-label\", ctx_r1.message);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate1(\" \", ctx_r1.message, \" \");\n  }\n}\nfunction ToastNoAnimation_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\");\n    i0.ÉµÉµelement(1, \"div\", 9);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµstyleProp(\"width\", ctx_r1.width() + \"%\");\n  }\n}\nclass ToastContainerDirective {\n  el;\n  constructor(el) {\n    this.el = el;\n  }\n  getContainerElement() {\n    return this.el.nativeElement;\n  }\n  static Éµfac = function ToastContainerDirective_Factory(t) {\n    return new (t || ToastContainerDirective)(i0.ÉµÉµdirectiveInject(i0.ElementRef));\n  };\n  static Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n    type: ToastContainerDirective,\n    selectors: [[\"\", \"toastContainer\", \"\"]],\n    exportAs: [\"toastContainer\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToastContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[toastContainer]',\n      exportAs: 'toastContainer',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], null);\n})();\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n  _attachedHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component;\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef;\n  /** Injector used for the instantiation of the component. */\n  injector;\n  constructor(component, injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n  /** Attach this portal to a host. */\n  attach(host, newestOnTop) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n  /** The portal currently attached to the host. */\n  _attachedPortal;\n  /** A function that will permanently dispose this host. */\n  _disposeFn;\n  attach(portal, newestOnTop) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n}\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n  _overlayRef;\n  /** The instance of component opened into the toast. */\n  componentInstance;\n  /** Count of duplicates of this toast */\n  duplicatesCount = 0;\n  /** Subject for notifying the user that the toast has finished closing. */\n  _afterClosed = new Subject();\n  /** triggered when toast is activated */\n  _activate = new Subject();\n  /** notifies the toast that it should close before the timeout */\n  _manualClose = new Subject();\n  /** notifies the toast that it should reset the timeouts */\n  _resetTimeout = new Subject();\n  /** notifies the toast that it should count a duplicate toast */\n  _countDuplicate = new Subject();\n  constructor(_overlayRef) {\n    this._overlayRef = _overlayRef;\n  }\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n  manualClosed() {\n    return this._manualClose.asObservable();\n  }\n  timeoutReset() {\n    return this._resetTimeout.asObservable();\n  }\n  countDuplicate() {\n    return this._countDuplicate.asObservable();\n  }\n  /**\n   * Close the toast.\n   */\n  close() {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._manualClose.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n    this._resetTimeout.complete();\n    this._countDuplicate.complete();\n  }\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed() {\n    return this._afterClosed.asObservable();\n  }\n  isInactive() {\n    return this._activate.isStopped;\n  }\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate() {\n    return this._activate.asObservable();\n  }\n  /** Reset the toast timouts and count duplicates */\n  onDuplicate(resetTimeout, countDuplicate) {\n    if (resetTimeout) {\n      this._resetTimeout.next();\n    }\n    if (countDuplicate) {\n      this._countDuplicate.next(++this.duplicatesCount);\n    }\n  }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n  toastId;\n  config;\n  message;\n  title;\n  toastType;\n  toastRef;\n  _onTap = new Subject();\n  _onAction = new Subject();\n  constructor(toastId, config, message, title, toastType, toastRef) {\n    this.toastId = toastId;\n    this.config = config;\n    this.message = message;\n    this.title = title;\n    this.toastType = toastType;\n    this.toastRef = toastRef;\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n  onTap() {\n    return this._onTap.asObservable();\n  }\n  /** available for use in custom toast */\n  triggerAction(action) {\n    this._onAction.next(action);\n  }\n  onAction() {\n    return this._onAction.asObservable();\n  }\n}\nconst DefaultNoComponentGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning'\n  },\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing'\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n  _hostDomElement;\n  _componentFactoryResolver;\n  _appRef;\n  constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n    super();\n    this._hostDomElement = _hostDomElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal(portal, newestOnTop) {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef;\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n    return componentRef;\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n  _document = inject(DOCUMENT);\n  _containerElement;\n  ngOnDestroy() {\n    if (this._containerElement && this._containerElement.parentNode) {\n      this._containerElement.parentNode.removeChild(this._containerElement);\n    }\n  }\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement() {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n    return this._containerElement;\n  }\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body\n   * and 'aria-live=\"polite\"'\n   */\n  _createContainer() {\n    const container = this._document.createElement('div');\n    container.classList.add('overlay-container');\n    container.setAttribute('aria-live', 'polite');\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n  static Éµfac = function OverlayContainer_Factory(t) {\n    return new (t || OverlayContainer)();\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: OverlayContainer,\n    factory: OverlayContainer.Éµfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(OverlayContainer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n  _portalHost;\n  constructor(_portalHost) {\n    this._portalHost = _portalHost;\n  }\n  attach(portal, newestOnTop = true) {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n  _overlayContainer = inject(OverlayContainer);\n  _componentFactoryResolver = inject(ComponentFactoryResolver);\n  _appRef = inject(ApplicationRef);\n  _document = inject(DOCUMENT);\n  // Namespace panes by overlay container\n  _paneElements = new Map();\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass, overlayContainer) {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n  getPaneElement(positionClass = '', overlayContainer) {\n    if (!this._paneElements.get(overlayContainer)) {\n      this._paneElements.set(overlayContainer, {});\n    }\n    if (!this._paneElements.get(overlayContainer)[positionClass]) {\n      this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements.get(overlayContainer)[positionClass];\n  }\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  _createPaneElement(positionClass, overlayContainer) {\n    const pane = this._document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  _createPortalHost(pane) {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  _createOverlayRef(pane) {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n  static Éµfac = function Overlay_Factory(t) {\n    return new (t || Overlay)();\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: Overlay,\n    factory: Overlay.Éµfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(Overlay, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ToastrService {\n  overlay;\n  _injector;\n  sanitizer;\n  ngZone;\n  toastrConfig;\n  currentlyActive = 0;\n  toasts = [];\n  overlayContainer;\n  previousToastMessage;\n  index = 0;\n  constructor(token, overlay, _injector, sanitizer, ngZone) {\n    this.overlay = overlay;\n    this._injector = _injector;\n    this.sanitizer = sanitizer;\n    this.ngZone = ngZone;\n    this.toastrConfig = {\n      ...token.default,\n      ...token.config\n    };\n    if (token.config.iconClasses) {\n      this.toastrConfig.iconClasses = {\n        ...token.default.iconClasses,\n        ...token.config.iconClasses\n      };\n    }\n  }\n  /** show toast */\n  show(message, title, override = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n  /**\n   * Determines if toast message is already shown\n   */\n  findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n    const {\n      includeTitleDuplicates\n    } = this.toastrConfig;\n    for (const toast of this.toasts) {\n      const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n      if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n        toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n        return toast;\n      }\n    }\n    return null;\n  }\n  /** create a clone of global config and apply individual settings */\n  applyConfig(override = {}) {\n    return {\n      ...this.toastrConfig,\n      ...override\n    };\n  }\n  /**\n   * Find toast object by id\n   */\n  _findToast(toastId) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return {\n          index: i,\n          activeToast: this.toasts[i]\n        };\n      }\n    }\n    return null;\n  }\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  _preBuildNotification(toastType, message, title, config) {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n  /**\n   * Creates and attaches toast data to component\n   * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n   */\n  _buildNotification(toastType, message, title, config) {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n    // a timeout at all\n    const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n    if ((this.toastrConfig.includeTitleDuplicates && title || message) && this.toastrConfig.preventDuplicates && duplicate !== null) {\n      return duplicate;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[0].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n    /** New injector that contains an instance of `ToastPackage`. */\n    const providers = [{\n      provide: ToastPackage,\n      useValue: toastPackage\n    }];\n    const toastInjector = Injector.create({\n      providers,\n      parent: this._injector\n    });\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const portal = overlayRef.attach(component, config.newestOnTop);\n    toastRef.componentInstance = portal.instance;\n    const ins = {\n      toastId: this.index,\n      title: title || '',\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal\n    };\n    if (!keepInactive) {\n      this.currentlyActive = this.currentlyActive + 1;\n      setTimeout(() => {\n        ins.toastRef.activate();\n      });\n    }\n    this.toasts.push(ins);\n    return ins;\n  }\n  static Éµfac = function ToastrService_Factory(t) {\n    return new (t || ToastrService)(i0.ÉµÉµinject(TOAST_CONFIG), i0.ÉµÉµinject(Overlay), i0.ÉµÉµinject(i0.Injector), i0.ÉµÉµinject(i2.DomSanitizer), i0.ÉµÉµinject(i0.NgZone));\n  };\n  static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n    token: ToastrService,\n    factory: ToastrService.Éµfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToastrService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [TOAST_CONFIG]\n    }]\n  }, {\n    type: Overlay\n  }, {\n    type: i0.Injector\n  }, {\n    type: i2.DomSanitizer\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\nclass Toast {\n  toastrService;\n  toastPackage;\n  ngZone;\n  message;\n  title;\n  options;\n  duplicatesCount;\n  originalTimeout;\n  /** width of progress bar */\n  width = signal(-1);\n  /** a combination of toast type and options.toastClass */\n  toastClasses = '';\n  state;\n  /** controls animation */\n  get _state() {\n    return this.state();\n  }\n  /** hides component when waiting to be displayed */\n  get displayStyle() {\n    if (this.state().value === 'inactive') {\n      return 'none';\n    }\n    return;\n  }\n  timeout;\n  intervalId;\n  hideTime;\n  sub;\n  sub1;\n  sub2;\n  sub3;\n  constructor(toastrService, toastPackage, ngZone) {\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.ngZone = ngZone;\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n    this.state = signal({\n      value: 'inactive',\n      params: {\n        easeTime: this.toastPackage.config.easeTime,\n        easing: 'ease-in'\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state.update(state => ({\n      ...state,\n      value: 'active'\n    }));\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width() === 0 || this.width() === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width.set(remaining / this.options.timeOut * 100);\n    if (this.options.progressAnimation === 'increasing') {\n      this.width.update(width => 100 - width);\n    }\n    if (this.width() <= 0) {\n      this.width.set(0);\n    }\n    if (this.width() >= 100) {\n      this.width.set(100);\n    }\n  }\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state.update(state => ({\n      ...state,\n      value: 'active'\n    }));\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\n    this.options.timeOut = this.originalTimeout;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width.set(-1);\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state().value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state.update(state => ({\n      ...state,\n      value: 'removed'\n    }));\n    this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n  }\n  tapToast() {\n    if (this.state().value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  stickAround() {\n    if (this.state().value === 'removed') {\n      return;\n    }\n    if (this.options.disableTimeOut !== 'extendedTimeOut') {\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0;\n      // disable progressBar\n      clearInterval(this.intervalId);\n      this.width.set(0);\n    }\n  }\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state().value === 'removed') {\n      return;\n    }\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width.set(-1);\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n  outsideTimeout(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.timeout = setTimeout(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n  outsideInterval(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.intervalId = setInterval(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n  runInsideAngular(func) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n  static Éµfac = function Toast_Factory(t) {\n    return new (t || Toast)(i0.ÉµÉµdirectiveInject(ToastrService), i0.ÉµÉµdirectiveInject(ToastPackage), i0.ÉµÉµdirectiveInject(i0.NgZone));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: Toast,\n    selectors: [[\"\", \"toast-component\", \"\"]],\n    hostVars: 5,\n    hostBindings: function Toast_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"click\", function Toast_click_HostBindingHandler() {\n          return ctx.tapToast();\n        })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() {\n          return ctx.stickAround();\n        })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() {\n          return ctx.delayedHideToast();\n        });\n      }\n      if (rf & 2) {\n        i0.ÉµÉµsyntheticHostProperty(\"@flyInOut\", ctx._state);\n        i0.ÉµÉµclassMap(ctx.toastClasses);\n        i0.ÉµÉµstyleProp(\"display\", ctx.displayStyle);\n      }\n    },\n    standalone: true,\n    features: [i0.ÉµÉµStandaloneFeature],\n    attrs: _c0,\n    decls: 5,\n    vars: 5,\n    consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n    template: function Toast_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµtemplate(0, Toast_button_0_Template, 3, 0, \"button\", 0)(1, Toast_div_1_Template, 3, 5, \"div\", 1)(2, Toast_div_2_Template, 1, 3, \"div\", 2)(3, Toast_div_3_Template, 2, 4, \"div\", 3)(4, Toast_div_4_Template, 2, 2, \"div\", 4);\n      }\n      if (rf & 2) {\n        i0.ÉµÉµproperty(\"ngIf\", ctx.options.closeButton);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.title);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.options.progressBar);\n      }\n    },\n    dependencies: [NgIf],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('flyInOut', [state('inactive', style({\n        opacity: 0\n      })), state('active', style({\n        opacity: 1\n      })), state('removed', style({\n        opacity: 0\n      })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(Toast, [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width() + '%'\"></div>\n  </div>\n  `,\n      animations: [trigger('flyInOut', [state('inactive', style({\n        opacity: 0\n      })), state('active', style({\n        opacity: 1\n      })), state('removed', style({\n        opacity: 0\n      })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])],\n      preserveWhitespaces: false,\n      standalone: true,\n      imports: [NgIf],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], () => [{\n    type: ToastrService\n  }, {\n    type: ToastPackage\n  }, {\n    type: i0.NgZone\n  }], {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    _state: [{\n      type: HostBinding,\n      args: ['@flyInOut']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nconst DefaultGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: Toast\n};\n/**\n * @description\n * Provides the `TOAST_CONFIG` token with the given config.\n *\n * @param config The config to configure toastr.\n * @returns The environment providers.\n *\n * @example\n * ```ts\n * import { provideToastr } from 'ngx-toastr';\n *\n * bootstrap(AppComponent, {\n *   providers: [\n *     provideToastr({\n *       timeOut: 2000,\n *       positionClass: 'toast-top-right',\n *     }),\n *   ],\n * })\n */\nconst provideToastr = (config = {}) => {\n  const providers = [{\n    provide: TOAST_CONFIG,\n    useValue: {\n      default: DefaultGlobalConfig,\n      config\n    }\n  }];\n  return makeEnvironmentProviders(providers);\n};\nclass ToastrModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [provideToastr(config)]\n    };\n  }\n  static Éµfac = function ToastrModule_Factory(t) {\n    return new (t || ToastrModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: ToastrModule\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToastrModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Toast],\n      exports: [Toast]\n    }]\n  }], null, null);\n})();\nclass ToastrComponentlessModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoComponentGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n  static Éµfac = function ToastrComponentlessModule_Factory(t) {\n    return new (t || ToastrComponentlessModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: ToastrComponentlessModule\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToastrComponentlessModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\nclass ToastNoAnimation {\n  toastrService;\n  toastPackage;\n  appRef;\n  message;\n  title;\n  options;\n  duplicatesCount;\n  originalTimeout;\n  /** width of progress bar */\n  width = signal(-1);\n  /** a combination of toast type and options.toastClass */\n  toastClasses = '';\n  /** hides component when waiting to be displayed */\n  get displayStyle() {\n    if (this.state() === 'inactive') {\n      return 'none';\n    }\n    return null;\n  }\n  /** controls animation */\n  state = signal('inactive');\n  timeout;\n  intervalId;\n  hideTime;\n  sub;\n  sub1;\n  sub2;\n  sub3;\n  constructor(toastrService, toastPackage, appRef) {\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.appRef = appRef;\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state.set('active');\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width() === 0 || this.width() === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width.set(remaining / this.options.timeOut * 100);\n    if (this.options.progressAnimation === 'increasing') {\n      this.width.update(width => 100 - width);\n    }\n    if (this.width() <= 0) {\n      this.width.set(0);\n    }\n    if (this.width() >= 100) {\n      this.width.set(100);\n    }\n  }\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state.set('active');\n    this.options.timeOut = this.originalTimeout;\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n    this.width.set(-1);\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state() === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state.set('removed');\n    this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n  }\n  tapToast() {\n    if (this.state() === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  stickAround() {\n    if (this.state() === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width.set(0);\n  }\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state() === 'removed') {\n      return;\n    }\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width.set(-1);\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n  static Éµfac = function ToastNoAnimation_Factory(t) {\n    return new (t || ToastNoAnimation)(i0.ÉµÉµdirectiveInject(ToastrService), i0.ÉµÉµdirectiveInject(ToastPackage), i0.ÉµÉµdirectiveInject(i0.ApplicationRef));\n  };\n  static Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n    type: ToastNoAnimation,\n    selectors: [[\"\", \"toast-component\", \"\"]],\n    hostVars: 4,\n    hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµlistener(\"click\", function ToastNoAnimation_click_HostBindingHandler() {\n          return ctx.tapToast();\n        })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() {\n          return ctx.stickAround();\n        })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() {\n          return ctx.delayedHideToast();\n        });\n      }\n      if (rf & 2) {\n        i0.ÉµÉµclassMap(ctx.toastClasses);\n        i0.ÉµÉµstyleProp(\"display\", ctx.displayStyle);\n      }\n    },\n    standalone: true,\n    features: [i0.ÉµÉµStandaloneFeature],\n    attrs: _c0,\n    decls: 5,\n    vars: 5,\n    consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n    template: function ToastNoAnimation_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµtemplate(0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0)(1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1)(2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2)(3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3)(4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n      }\n      if (rf & 2) {\n        i0.ÉµÉµproperty(\"ngIf\", ctx.options.closeButton);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.title);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµproperty(\"ngIf\", ctx.options.progressBar);\n      }\n    },\n    dependencies: [NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToastNoAnimation, [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width() + '%'\"></div>\n  </div>\n  `,\n      standalone: true,\n      imports: [NgIf],\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], () => [{\n    type: ToastrService\n  }, {\n    type: ToastPackage\n  }, {\n    type: i0.ApplicationRef\n  }], {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nconst DefaultNoAnimationsGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: ToastNoAnimation\n};\nclass ToastNoAnimationModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastNoAnimationModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoAnimationsGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n  static Éµfac = function ToastNoAnimationModule_Factory(t) {\n    return new (t || ToastNoAnimationModule)();\n  };\n  static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n    type: ToastNoAnimationModule\n  });\n  static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToastNoAnimationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ToastNoAnimation],\n      exports: [ToastNoAnimation]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService, provideToastr };\n","import { Injectable } from '@angular/core';\r\nimport { Cart } from '../../Interfaces/Cart/cart';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BaseURL } from '../../Base/Environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  cartItemsCount:BehaviorSubject<number> = new BehaviorSubject<number>(0)\r\n  constructor(private _HTTPClient:HttpClient, private _ToastrService:ToastrService) { }\r\n\r\n  addProductToCart(productId:string):Observable<null|Cart> {\r\n    return this._HTTPClient.post<null|Cart>(`${BaseURL.baseURL}/api/v1/cart`, {productId:productId})\r\n  }\r\n\r\n  getUserCart():Observable<null|Cart> {\r\n    return this._HTTPClient.get<null|Cart>(`${BaseURL.baseURL}/api/v1/cart`)\r\n  }\r\n\r\n  removeItem(productId:string):Observable<null|Cart> {\r\n    return this._HTTPClient.delete<null|Cart>(`${BaseURL.baseURL}/api/v1/cart/${productId}`)\r\n  }\r\n\r\n  updateProductQuantity(productId:string, count:number):Observable<null|Cart> {\r\n    return this._HTTPClient.put<null|Cart>(`${BaseURL.baseURL}/api/v1/cart/${productId}`, {count:count})\r\n  }\r\n\r\n  clearCart():Observable<null|{message:string}> {\r\n    return this._HTTPClient.delete<null|{message:string}>(`${BaseURL.baseURL}/api/v1/cart`)\r\n  }\r\n\r\n  frontAddProductToCart(productId:string):void {\r\n    this.addProductToCart(productId).subscribe(res => {\r\n      this.cartItemsCount.next(this.cartItemsCount.getValue() + 1);\r\n      this._ToastrService.success('Product Successfully Added to Cart', 'Added To Cart!', {\r\n        progressBar: true,\r\n        timeOut: 3000\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Wishlist, WishlistData } from '../../Interfaces/Wishlist/wishlist';\r\nimport { BaseURL } from '../../Base/Environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WishlistService {\r\n  wishlistItemsCount:BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  constructor(private _HTTPClient:HttpClient, private _ToastrService:ToastrService) { }\r\n\r\n  addProductToWishlist(productId:string):Observable<null|Wishlist> {\r\n    return this._HTTPClient.post<null|Wishlist>(`${BaseURL.baseURL}/api/v1/wishlist`, {productId:productId})\r\n  }\r\n\r\n  getUserWishlist():Observable<null|WishlistData> {\r\n    return this._HTTPClient.get<null|WishlistData>(`${BaseURL.baseURL}/api/v1/wishlist`);\r\n  }\r\n\r\n  removeItemFromWishlist(productId:string):Observable<null|Wishlist> {\r\n    return this._HTTPClient.delete<null|Wishlist>(`${BaseURL.baseURL}/api/v1/wishlist/${productId}`);\r\n  }\r\n\r\n  frontAddProductToWishlist($event:Event, productId:string):void {\r\n    let heartFilled:HTMLElement = ($event.currentTarget as HTMLElement).querySelector(\".heart-filled\")!;\r\n    let heartHollow:HTMLElement = ($event.currentTarget as HTMLElement).querySelector(\".heart-hollow\")!;\r\n\r\n    this.getUserWishlist().subscribe(res => {\r\n      let found:boolean = false;\r\n      for(let i = 0; i < res!.data.length; i++) {\r\n        if(res!.data[i]._id === productId) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if(!found) {\r\n        this.addProductToWishlist(productId).subscribe(res => {\r\n          heartFilled.classList.replace(\"hidden\", \"inline-block\");\r\n          heartHollow.classList.replace(\"inline-block\", \"hidden\");\r\n          this._ToastrService.success('Product Successfully Added to Wishlist', 'Added To Wishlist!', {\r\n            progressBar: true,\r\n            timeOut: 3000\r\n          });\r\n          this.wishlistItemsCount.next(this.wishlistItemsCount.getValue() + 1);\r\n        })\r\n      }\r\n      else {\r\n        this.removeItemFromWishlist(productId).subscribe(res => {\r\n          heartFilled.classList.replace(\"inline-block\", \"hidden\");\r\n          heartHollow.classList.replace(\"hidden\", \"inline-block\");\r\n          this._ToastrService.success(\"Proudct removed from Wishlist.\", \"Product Removed!\", {\r\n            progressBar: true,\r\n            timeOut: 3000\r\n          })\r\n          this.wishlistItemsCount.next((this.wishlistItemsCount.getValue() === 0) ? 0 : this.wishlistItemsCount.getValue() - 1);\r\n        })\r\n      }\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { HomePageCarouselComponent } from \"../../../Additions/home-page-carousel/home-page-carousel.component\";\r\nimport { ProductsService } from '../../../../Services/Products/products.service';\r\nimport { Products } from '../../../../Interfaces/Products/products';\r\nimport { RouterLink } from '@angular/router';\r\nimport { SearchPipe } from '../../../../Pipes/Search/search.pipe';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CartService } from '../../../../Services/Cart/cart.service';\r\nimport { WishlistService } from '../../../../Services/Wishlist/wishlist.service';\r\nimport { PaginationComponent } from '../../../Additions/pagination/pagination.component';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  standalone: true,\r\n  imports: [HomePageCarouselComponent, RouterLink, SearchPipe, FormsModule, PaginationComponent],\r\n  templateUrl: './home-page.component.html',\r\n  styleUrl: './home-page.component.scss'\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  searchWord:string = \"\";\r\n  productsData:Products|null = null;\r\n  constructor(private _Products:ProductsService, protected _Cart:CartService, protected _Wishlist:WishlistService){}\r\n\r\n  ngOnInit(): void {\r\n    if(typeof localStorage !== typeof undefined)\r\n      localStorage.setItem(\"currentPage\", \"home-page\");\r\n    this.getProducts();\r\n  }\r\n\r\n  getProducts(page?:string):void {\r\n    this._Products.getProducts(page).subscribe({\r\n      next: (res) => {\r\n        this.productsData = res;\r\n      },\r\n      error: (err) => {\r\n\r\n      }\r\n    })\r\n  }\r\n}\r\n","<app-home-page-carousel></app-home-page-carousel>\r\n@if(productsData) {\r\n    <input class=\"w-1/2 block mx-auto p-1 my-4 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"text\" placeholder=\"Search by Name...\" [(ngModel)]=\"searchWord\">\r\n}\r\n<div class=\"flex flex-wrap mt-4 items-stretch\">\r\n    @if(productsData !== null) {\r\n        @defer(on viewport) {\r\n            @for(product of productsData!.data |search: searchWord; track product._id) {\r\n                <div class=\"w-full sm:w-6/12 md:w-3/12 lg:w-2/12 cursor-pointer\">\r\n                    <div class=\"h-full p-4 pb-10 rounded-sm border-2 border-transparent transition-all hover:border-green-500 hover:shadow-green-500 hover:shadow-md relative group overflow-hidden\">\r\n                        <div [routerLink]=\"['/product-details-page', product._id]\">\r\n                            <img class=\"w-full\" [src]=\"product.imageCover\" [alt]=\"product.title\">\r\n                            <h3 class=\"text-green-500\">{{product.category.name}}</h3>\r\n                            <h3 class=\"text-lg\">{{product.title.split(\" \").slice(0, 2).join(\" \")}}</h3>\r\n                            <div class=\"mt-4 flex justify-between\">\r\n                                <span>EGP {{product.price}}</span>\r\n                                <span><i class=\"fa-solid fa-star\" style=\"color: #FFD43B;\"></i>{{product.ratingsAverage}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <button class=\"w-full text-white p-1 mt-6 bg-[#08AC0B] cursor-pointer hover:bg-[#197717] absolute -bottom-full opacity-0 start-1/2 -translate-x-1/2 group-hover:opacity-100 group-hover:bottom-0 transition-all\" (click)=\"this._Cart.frontAddProductToCart(product._id)\">Add To Cart <i class=\"fa-solid fa-cart-shopping\" style=\"color: #ffffff;\"></i></button>\r\n                        <button class=\"absolute -end-full transition-all group-hover:end-0 top-0 translate-y-1/2 -translate-x-1/4 bg-[#ffe4e4] p-2 rounded-md shadow-xl hover:bg-[#cdb8b8]\" (click)=\"this._Wishlist.frontAddProductToWishlist($event, product._id)\">\r\n                            <i class=\"heart-filled hidden fa-solid fa-heart text-red-700 text-4xl sm:text-2xl md:text-base\"></i>\r\n                            <i class=\"heart-hollow  inline-block fa-regular fa-heart text-black text-4xl sm:text-2xl md:text-base\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        }\r\n        @placeholder {\r\n            <div></div>\r\n        }\r\n    }\r\n</div>\r\n@if(productsData !== null && productsData.metadata.numberOfPages !== 0) {\r\n    <app-pagination [pages]=\"productsData.metadata.numberOfPages\" [currentPage]=\"productsData.metadata.currentPage\" (targetPage)=\"getProducts($event)\"></app-pagination>\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CartService } from '../../../../Services/Cart/cart.service';\r\nimport { Cart, Product } from '../../../../Interfaces/Cart/cart';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgClass } from '@angular/common';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cart-page',\r\n  standalone: true,\r\n  imports: [NgClass, RouterLink],\r\n  templateUrl: './cart-page.component.html',\r\n  styleUrl: './cart-page.component.scss'\r\n})\r\nexport class CartPageComponent implements OnInit {\r\n  loading:boolean = true;\r\n  userCart:Cart|null = null;\r\n  constructor(private _Cart:CartService, private _ToastrService:ToastrService){}\r\n  ngOnInit(): void {\r\n    if(typeof localStorage !== typeof undefined)\r\n      localStorage.setItem(\"currentPage\", \"cart-page\");\r\n    this.getUserCart();\r\n  }\r\n\r\n  getUserCart():void {\r\n    this._Cart.getUserCart().subscribe(res => {\r\n      this.userCart = res;\r\n      this._Cart.cartItemsCount.next(this.addCartItemsCount(this.userCart!.data.products));\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  removeItem($event:Event, productId:string) {\r\n    ($event.target as HTMLElement).closest(\".cart-item-container\")?.querySelector(\".loader-container\")?.classList.replace(\"hidden\", \"flex\");\r\n    this._Cart.removeItem(productId).subscribe(res => {\r\n      this.userCart = res;\r\n      this._Cart.cartItemsCount.next(this.addCartItemsCount(this.userCart!.data.products));\r\n      this._ToastrService.success(\"Product Successfully removed from cart\", \"Removed from Cart!\", {\r\n        progressBar: true,\r\n        timeOut: 3000\r\n      });\r\n    });\r\n  }\r\n  \r\n  increaseProductQuantity(productId:string, count:number):void {\r\n    this._Cart.updateProductQuantity(productId, count).subscribe(res => {\r\n      this.userCart = res;\r\n      this._Cart.cartItemsCount.next(this.addCartItemsCount(this.userCart!.data.products));\r\n    })\r\n  }\r\n\r\n  decreaseProductQuantity(productId:string, count:number, $event:Event):void {\r\n    if(count === 0) {\r\n      this.removeItem($event, productId);\r\n      this._Cart.cartItemsCount.next(0);\r\n      return;\r\n    }\r\n    this._Cart.updateProductQuantity(productId, count).subscribe(res => {\r\n      this.userCart = res;\r\n      this._Cart.cartItemsCount.next(this.addCartItemsCount(this.userCart!.data.products));\r\n    })\r\n  }\r\n\r\n  clearCart():void {\r\n    document.querySelectorAll(\".loader-container\").forEach(elmnt => {\r\n      elmnt.classList.replace(\"hidden\", \"flex\");\r\n    })\r\n    this._Cart.clearCart().subscribe(res => {\r\n      this.userCart = null;\r\n      this._Cart.cartItemsCount.next(0);\r\n    });\r\n  }\r\n\r\n  addCartItemsCount(products:Product[]):number {\r\n    let totalCount:number = 0;\r\n    products.forEach((item) => {\r\n      totalCount += item.count;\r\n    })\r\n    return totalCount;\r\n  }\r\n}\r\n","<h2 class=\"text-2xl\">Shopping Cart</h2>\r\n@if(userCart !== null) {\r\n    <p class=\"text-green-500\">Total Cart Price: {{userCart.data.totalCartPrice}} EGP</p>\r\n    @for(product of userCart.data.products; track product.product._id) {\r\n        <div class=\"cart-item-container flex flex-wrap items-center shadow-md relative mt-6 p-4 bg-gray-50 w-10/12 mx-auto\">\r\n            <div class=\"loader-container hidden absolute inset-0 bg-gray-500 bg-opacity-30 justify-center items-center\">\r\n                <span class=\"loader\"></span>\r\n            </div>\r\n            <div class=\"w-full md:w-2/12\">\r\n                <img class=\"w-full\" [src]=\"product.product.imageCover\" [alt]=\"product.product.title\">\r\n            </div>\r\n            <div class=\"w-full md:w-8/12 px-2\">\r\n                <h3 class=\"text-xl lg:text-2xl font-semibold\">{{product.product.title}}</h3>\r\n                <p class=\"text-green-500 text-lg\">Price: {{product.price}} EGP</p>\r\n                <button (click)=\"removeItem($event, product.product._id)\">Remove <i class=\"fa-solid fa-trash-can text-green-500\"></i></button>\r\n            </div>\r\n            <div class=\"w-full mt-4 md:mt-0 md:w-2/12 md:text-center\">\r\n                <button class=\"bg-green-500 p-1 rounded-sm text-center w-10 md:w-5 xl:w-12 xl:p4 hover:bg-green-700 text-white\" (click)=\"increaseProductQuantity(product.product._id, product.count + 1)\">\r\n                    +\r\n                </button>\r\n                <span class=\"mx-1 font-semibold\">{{product.count}}</span>\r\n                <button class=\"bg-red-500 p-1 rounded-sm text-center w-10 md:w-5 xl:w-12 xl:p4 hover:bg-red-700 text-white\" (click)=\"decreaseProductQuantity(product.product._id, product.count - 1, $event)\">\r\n                    -\r\n                </button>\r\n            </div>\r\n            <hr class=\"w-3/4 h-1 bg-green-500 absolute bottom-0 start-1/2 -translate-x-1/2 rounded-sm\">\r\n        </div>\r\n    }\r\n    @if(userCart.data.products.length !== 0) {\r\n        <div class=\"flex justify-end w-10/12 mx-auto\">\r\n            <button class=\"w-24 mx-1 rounded-md text-white p-1 mt-6 bg-[#ac0808] cursor-pointer hover:bg-[#771717] transition-all duration-200\" (click)=\"clearCart()\">Clear Cart</button>\r\n            <button class=\"w-24 mx-1 p-1 mt-6 bg-green-500 hover:bg-green-600 disabled:bg-[#70CA79] disabled:cursor-not-allowed text-white rounded-md\" [routerLink]=\"['/shipping-address-details', userCart.cartId]\">Checkout</button>\r\n        </div>\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from '../../../../Services/Products/products.service';\r\nimport { CartService } from '../../../../Services/Cart/cart.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { WishlistService } from '../../../../Services/Wishlist/wishlist.service';\r\nimport { Products } from '../../../../Interfaces/Products/products';\r\nimport { RouterLink } from '@angular/router';\r\nimport { SearchPipe } from '../../../../Pipes/Search/search.pipe';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PaginationComponent } from '../../../Additions/pagination/pagination.component';\r\n\r\n@Component({\r\n  selector: 'app-products-page',\r\n  standalone: true,\r\n  imports: [RouterLink, SearchPipe, FormsModule, PaginationComponent],\r\n  templateUrl: './products-page.component.html',\r\n  styleUrl: './products-page.component.scss'\r\n})\r\nexport class ProductsPageComponent implements OnInit {\r\n  searchWord:string = \"\";\r\n  productsData:Products|null = null;\r\n  constructor(private _Products:ProductsService, protected _Cart:CartService, protected _Wishlist:WishlistService){}\r\n\r\n  ngOnInit(): void {\r\n    if(typeof localStorage !== typeof undefined)\r\n      localStorage.setItem(\"currentPage\", \"products-page\");\r\n    this.getProducts();\r\n  }\r\n\r\n  getProducts(page?:string):void {\r\n    this._Products.getProducts(page).subscribe({\r\n      next: (res) => {\r\n        this.productsData = res;\r\n      },\r\n      error: (err) => {\r\n\r\n      }\r\n    })\r\n  }\r\n}\r\n","@if(productsData) {\r\n    <input class=\"w-1/2 block mx-auto p-1 rounded-md mt-8 border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"text\" placeholder=\"Search by Name...\" [(ngModel)]=\"searchWord\">\r\n}\r\n<div class=\"flex flex-wrap mt-4 items-stretch\">\r\n    @if(productsData !== null) {\r\n        @defer(on viewport) {\r\n            @for(product of productsData!.data |search: searchWord; track product._id) {\r\n                <div class=\"w-full sm:w-6/12 md:w-3/12 lg:w-2/12 cursor-pointer\">\r\n                    <div class=\"h-full p-4 pb-10 rounded-sm border-2 border-transparent transition-all hover:border-green-500 hover:shadow-green-500 hover:shadow-md relative group overflow-hidden\">\r\n                        <div [routerLink]=\"['/product-details-page', product._id]\">\r\n                            <img class=\"w-full\" [src]=\"product.imageCover\" [alt]=\"product.title\">\r\n                            <h3 class=\"text-green-500\">{{product.category.name}}</h3>\r\n                            <h3 class=\"text-lg\">{{product.title.split(\" \").slice(0, 2).join(\" \")}}</h3>\r\n                            <div class=\"mt-4 flex justify-between\">\r\n                                <span>{{product.price}} EGP</span>\r\n                                <span><i class=\"fa-solid fa-star\" style=\"color: #FFD43B;\"></i>{{product.ratingsAverage}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <button class=\"w-full text-white p-1 mt-6 bg-[#08AC0B] cursor-pointer hover:bg-[#197717] absolute -bottom-full opacity-0 start-1/2 -translate-x-1/2 group-hover:opacity-100 group-hover:bottom-0 transition-all\" (click)=\"this._Cart.frontAddProductToCart(product._id)\">Add To Cart <i class=\"fa-solid fa-cart-shopping\" style=\"color: #ffffff;\"></i></button>\r\n                        <button class=\"absolute -end-full transition-all group-hover:end-0 top-0 translate-y-1/2 -translate-x-1/4 bg-[#ffe4e4] p-2 rounded-md shadow-xl hover:bg-[#cdb8b8]\" (click)=\"this._Wishlist.frontAddProductToWishlist($event, product._id)\">\r\n                            <i class=\"heart-filled hidden fa-solid fa-heart text-red-700 text-4xl sm:text-2xl md:text-base\"></i>\r\n                            <i class=\"heart-hollow  inline-block fa-regular fa-heart text-black text-4xl sm:text-2xl md:text-base\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        }\r\n        @placeholder {\r\n            <div></div>\r\n        }\r\n    }\r\n</div>\r\n\r\n@if(productsData !== null && productsData.metadata.numberOfPages !== 0) {\r\n    <app-pagination [pages]=\"productsData.metadata.numberOfPages\" [currentPage]=\"productsData.metadata.currentPage\" (targetPage)=\"getProducts($event)\"></app-pagination>\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CategoriesService } from '../../../../Services/Categories/categories.service';\r\nimport { Categories, Category } from '../../../../Interfaces/Categories/categories';\r\nimport { PaginationComponent } from '../../../Additions/pagination/pagination.component';\r\n\r\n@Component({\r\n  selector: 'app-categories-page',\r\n  standalone: true,\r\n  imports: [PaginationComponent],\r\n  templateUrl: './categories-page.component.html',\r\n  styleUrl: './categories-page.component.scss'\r\n})\r\nexport class CategoriesPageComponent implements OnInit {\r\n  subCategoriesData:Category[]|null = null;\r\n  mainCategory!:string;\r\n  categoriesData:Categories|null = null;\r\n  constructor(private _CategoriesService:CategoriesService){}\r\n  ngOnInit(): void {\r\n    if(typeof localStorage !== typeof undefined)\r\n      localStorage.setItem(\"currentPage\", \"categories-page\");\r\n    this.getCategories();\r\n  }\r\n\r\n  getCategories(page?:string):void {\r\n    this._CategoriesService.getCategories(page).subscribe(res => {\r\n      this.categoriesData = res;\r\n    })\r\n  }\r\n\r\n  getSubcategoriesOnCategory(productId:string, mainCategory:string):void {\r\n    this.mainCategory = mainCategory;\r\n    this._CategoriesService.getSubcategoriesOnCategory(productId).subscribe(res => {\r\n      this.subCategoriesData = res.data;\r\n    })\r\n  }\r\n}\r\n","@if(categoriesData !== null) {\r\n    <div class=\"flex flex-wrap mt-6\">\r\n        @for(category of categoriesData.data; track category._id) {\r\n            <div class=\"w-full md:w-4/12 p-4\">\r\n                <div class=\"flex flex-col justify-center items-center border rounded-md hover:shadow-md hover:shadow-green-400 transition-all pb-6 cursor-pointer\" (click)=\"getSubcategoriesOnCategory(category._id, category.name)\">\r\n                    <div class=\"w-full\">\r\n                        <img class=\"w-full h-[300px] object-cover object-center\" [src]=\"category.image\" [alt]=\"category.name\">\r\n                    </div>\r\n                    <h4 class=\"text-2xl text-green-500 font-semibold mt-6 text-center\">{{category.name}}</h4>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n@if(categoriesData !== null && categoriesData.metadata.numberOfPages !== 0) {\r\n    <app-pagination [pages]=\"categoriesData.metadata.numberOfPages\" [currentPage]=\"categoriesData.metadata.currentPage\" (targetPage)=\"getCategories($event)\"></app-pagination>\r\n}\r\n\r\n@if(subCategoriesData !== null) {\r\n    <h2 class=\"text-4xl text-green-500 font-semibold mt-6 text-center\">{{mainCategory}} Subcategories</h2>\r\n    <div class=\"flex flex-wrap mt-6\">\r\n        @for(category of subCategoriesData; track category._id) {\r\n            <div class=\"w-full md:w-4/12 p-4\">\r\n                <div class=\"flex flex-col justify-center items-center border rounded-md hover:shadow-md hover:shadow-green-400 transition-all pb-6 cursor-pointer\">\r\n                    <h4 class=\"text-2xl font-semibold mt-6 text-center\">{{category.name}}</h4>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Brands } from '../../Interfaces/Brands/brands';\r\nimport { BaseURL } from '../../Base/Environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrandsService {\r\n\r\n  constructor(private _HTTPClient:HttpClient) { }\r\n\r\n  getAllBrands(page?:string):Observable<Brands> {\r\n    let url:string = (page) ? `${BaseURL.baseURL}/api/v1/brands?page=${page}` : `${BaseURL.baseURL}/api/v1/brands`;\r\n    return this._HTTPClient.get<Brands>(url);\r\n  }\r\n}\r\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlowbiteService {\r\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\r\n\r\n  loadFlowbite(callback: (flowbite: any) => void) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      import('flowbite').then(flowbite => {\r\n        callback(flowbite);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BrandsService } from '../../../../Services/Brands/brands.service';\r\nimport { Brands } from '../../../../Interfaces/Brands/brands';\r\nimport { FlowbiteService } from '../../../../Services/Flowbite/flowbite.service';\r\nimport { PaginationComponent } from '../../../Additions/pagination/pagination.component';\r\n\r\n@Component({\r\n  selector: 'app-brands-page',\r\n  standalone: true,\r\n  imports: [PaginationComponent],\r\n  templateUrl: './brands-page.component.html',\r\n  styleUrl: './brands-page.component.scss'\r\n})\r\nexport class BrandsPageComponent implements OnInit {\r\n  brandsData:Brands|null = null;\r\n  constructor(private _BrandsService:BrandsService, private _FlowbiteService:FlowbiteService){}\r\n\r\n  ngOnInit(): void {\r\n    this._FlowbiteService.loadFlowbite(() => {})\r\n    if(typeof localStorage !== typeof undefined)\r\n      localStorage.setItem(\"currentPage\", \"brands-page\");\r\n    this.getAllBrands();\r\n  }\r\n\r\n  getAllBrands(page?:string):void {\r\n    this._BrandsService.getAllBrands(page).subscribe(res => {\r\n      this.brandsData = res;\r\n    })\r\n  }\r\n\r\n  openModal(image:string, name:string):void {\r\n    let modalContainer = document.querySelector(\".modal-container\");\r\n    let modalImage = document.querySelector(\".modal-image\");\r\n    let modalHeader = document.querySelector(\".modal-header\");\r\n    \r\n    modalContainer?.classList.replace(\"invisible\", \"visible\");\r\n    modalContainer?.classList.replace(\"top-[-40%]\", \"top-0\");\r\n    document.querySelector(\".modal-popup\")?.classList.replace(\"opacity-0\", \"opacity-100\");\r\n    modalImage?.setAttribute(\"src\", image);\r\n    modalImage?.setAttribute(\"alt\", name);\r\n    modalHeader!.textContent = name;\r\n  }\r\n\r\n  closeModal():void {\r\n    let modalContainer = document.querySelector(\".modal-container\");\r\n    let modalPopup = document.querySelector(\".modal-popup\");\r\n\r\n    modalContainer?.classList.replace(\"top-0\", \"top-[-40%]\");\r\n    modalPopup?.classList.replace(\"opacity-100\", \"opacity-0\");\r\n    modalContainer?.classList.replace(\"visible\", \"invisible\");\r\n  }\r\n}\r\n","<h2 class=\"text-5xl mt-4 font-semibold text-green-500 text-center\">All Brands</h2>\r\n@if(brandsData !== null) {\r\n    <div class=\"flex flex-wrap mt-6\">\r\n    @for(brand of brandsData.data; track brand._id) {\r\n            <div class=\"w-full md:w-3/12 p-4\">\r\n                <div class=\"flex flex-col justify-center items-center border rounded-md hover:shadow-md hover:shadow-green-400 transition-all pt-4 pb-2 cursor-pointer\" (click)=\"openModal(brand.image, brand.name)\">\r\n                    <div class=\"w-10/12\">\r\n                        <img class=\"w-full\" [src]=\"brand.image\" [alt]=\"brand.name\">\r\n                    </div>\r\n                    <h4 class=\"text-lg\">{{brand.name}}</h4>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n@if(brandsData !== null && brandsData.metadata.numberOfPages !== 0) {\r\n    <app-pagination [pages]=\"brandsData.metadata.numberOfPages\" [currentPage]=\"brandsData.metadata.currentPage\" (targetPage)=\"getAllBrands($event)\"></app-pagination>\r\n}\r\n\r\n<div class=\"modal-container fixed inset-0 w-full h-[200vh] bg-black bg-opacity-30 block transition-all duration-500 top-[-40%] invisible z-10\" (click)=\"closeModal()\">\r\n    <div class=\"modal-popup w-full sm:w-[450px] bg-white rounded-md mt-28 mx-auto transition-all duration-500 opacity-0 flex flex-col relative z-10\">\r\n        <div class=\"flex justify-end p-4 border-b border-solid\">\r\n            <button class=\"text-xl\" (click)=\"closeModal()\"><i class=\"fa-solid fa-xmark\"></i></button>\r\n        </div>\r\n        <div class=\"w-full p-4 pb-8\">\r\n            <div class=\"w-10/12 mx-auto\">\r\n                <img class=\"modal-image w-full\" src=\"brand.image\" alt=\"brand.name\">\r\n            </div>\r\n            <h4 class=\"modal-header text-2xl text-green-500 font-semibold text-center\">brand.name</h4>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './not-found.component.html',\r\n  styleUrl: './not-found.component.scss'\r\n})\r\nexport class NotFoundComponent {\r\n\r\n}\r\n","<div class=\"grid place-items-center w-10/12 mx-auto\">\r\n    <img class=\"w-full\" src=\"assets/images/error.svg\" alt=\"Not Found\">\r\n</div>","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import { SignalResetPassword } from './../../Interfaces/SignalResetPassword/signal-reset-password';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Register } from '../../Interfaces/Register/register';\r\nimport { Login } from '../../Interfaces/Login/login';\r\nimport { BaseURL } from '../../Base/Environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { AuthenticationSuccess } from '../../Interfaces/AuthenticationSuccess/authentication-success';\r\nimport { AuthenticationFail } from '../../Interfaces/AuthenticationFail/authentication-fail';\r\nimport { UserData } from '../../Interfaces/UserData/user-data';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { Router } from '@angular/router';\r\nimport { ResetPassword } from '../../Interfaces/ResetPassword/reset-password';\r\nimport { CartService } from '../Cart/cart.service';\r\nimport { WishlistService } from '../Wishlist/wishlist.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  userData:BehaviorSubject<null|UserData> = new BehaviorSubject<null|UserData>(null);\r\n  resetPasswordSignal:BehaviorSubject<null|SignalResetPassword> = new BehaviorSubject<null|SignalResetPassword>(null);\r\n\r\n  constructor(private _HTTPClient:HttpClient, private _Router:Router, private _CartService:CartService, private _WishlistService:WishlistService) { }\r\n\r\n  register(registerInfo:Register):Observable<AuthenticationSuccess | AuthenticationFail> {\r\n    return this._HTTPClient.post<AuthenticationSuccess | AuthenticationFail>(`${BaseURL.baseURL}/api/v1/auth/signup`, registerInfo);\r\n  }\r\n\r\n  login(loginInfo:Login):Observable<AuthenticationSuccess | AuthenticationFail> {\r\n    return this._HTTPClient.post<AuthenticationSuccess | AuthenticationFail>(`${BaseURL.baseURL}/api/v1/auth/signin`, loginInfo);\r\n  }\r\n\r\n  logout():void {\r\n    localStorage.removeItem(\"userToken\");\r\n    this.userData.next(null);\r\n    this._Router.navigate([\"/login-page\"]);\r\n    this._WishlistService.wishlistItemsCount.next(0);\r\n    this._CartService.cartItemsCount.next(0);\r\n  }\r\n\r\n  resetPassword(info:{email:string}):Observable<ResetPassword> {\r\n    return this._HTTPClient.post<ResetPassword>(`${BaseURL.baseURL}/api/v1/auth/forgotPasswords`, info)\r\n  }\r\n\r\n  verifyCode(info:{resetCode:string}):Observable<ResetPassword> {\r\n    return this._HTTPClient.post<ResetPassword>(`${BaseURL.baseURL}/api/v1/auth/verifyResetCode`, info);\r\n  }\r\n\r\n  newPassword(info:{email:string, newPassword:string}):Observable<ResetPassword|{token:string}> {\r\n    return this._HTTPClient.put<ResetPassword|{token:string}>(`${BaseURL.baseURL}/api/v1/auth/resetPassword`, info);\r\n  }\r\n\r\n  decodeUserData():void {\r\n    let token = JSON.stringify(localStorage.getItem(\"userToken\"));\r\n    let decodedData = jwtDecode(token);\r\n    this.userData.next((decodedData as UserData));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl } from '@angular/forms';\r\nimport { AuthenticationService } from '../../../../Services/Authentication/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './register-page.component.html',\r\n  styleUrl: './register-page.component.scss'\r\n})\r\nexport class RegisterPageComponent {\r\n  registerFailed!:boolean;\r\n  isLoading!:boolean;\r\n  constructor(private _Authentication:AuthenticationService, private _Router:Router){}\r\n\r\n  registerForm:FormGroup = new FormGroup(\r\n    {\r\n      name: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      rePassword: new FormControl('', [Validators.required]),\r\n      phone: new FormControl('', [Validators.required, Validators.pattern(/^((\\+20)|(0))?(10|11|12|15){1}[0-9]{8}$/)])\r\n    }, this.isSamePassword)\r\n\r\n  isSamePassword(formGroup: AbstractControl) {\r\n    if(formGroup.get('password')?.value === formGroup.get('rePassword')?.value)\r\n      return null;\r\n    else {\r\n      formGroup.get('rePassword')?.setErrors({mismatch: true});\r\n      return {mismatch: true};\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.isLoading = true;\r\n    this._Authentication.register(this.registerForm.value).subscribe({\r\n      next: (res) => {\r\n        this.registerFailed = false;\r\n        this._Router.navigate([\"/login-page\"]);\r\n        this.isLoading = false;\r\n      },\r\n      error: (err) => {\r\n        this.registerFailed = true;\r\n        this.isLoading = false;\r\n      },\r\n    });\r\n  }\r\n}\r\n","<form class=\"w-9/12 mx-auto mt-8\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h3 class=\"mb-4 text-xl\">Register Now:</h3>\r\n\r\n    <label for=\"nameInput\">Name:</label>\r\n    <input class=\"w-full mb-4 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"text\" id=\"nameInput\" formControlName=\"name\">\r\n    @if(registerForm.get('name')!.invalid && registerForm.get('name')!.touched) {\r\n        <div class=\"bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">Name Field is requied.</div>\r\n    }\r\n\r\n    <label for=\"emailInput\">Email:</label>\r\n    <input class=\"w-full mb-4 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"email\" id=\"emailInput\" formControlName=\"email\">\r\n    @if(registerForm.get('email')!.invalid && registerForm.get('email')!.touched) {\r\n        <div class=\"bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Email Field is required / Email Format not correct.\r\n        </div>\r\n    }\r\n    \r\n    <label for=\"phoneInput\">Phone:</label>\r\n    <input class=\"w-full mb-4 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"tel\" id=\"phoneInput\" formControlName=\"phone\">\r\n    @if(registerForm.get('phone')!.invalid && registerForm.get('phone')!.touched) {\r\n        <div class=\"bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Phone Field is required / Please enter a valid egyption phone number.\r\n        </div>\r\n    }\r\n\r\n    <label for=\"passwordInput\">Password:</label>\r\n    <input class=\"w-full mb-4 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"password\" id=\"passwordInput\" formControlName=\"password\">\r\n    @if(registerForm.get('password')!.invalid && registerForm.get('password')!.touched) {\r\n        <div class=\"bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Password Field is required / Minimum Length is 8 characters.\r\n        </div>\r\n    }\r\n\r\n    <label for=\"repasswordInput\">Re-enter Password:</label>\r\n    <input class=\"w-full mb-4 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"password\" id=\"repasswordInput\" formControlName=\"rePassword\">\r\n    @if(registerForm.get('rePassword')!.invalid && registerForm.get('rePassword')!.touched) {\r\n        <div class=\"bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Re-enter your password / Passwords don't match.\r\n        </div>\r\n    }\r\n\r\n\r\n    @if(registerFailed) {\r\n        <div class=\"bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Account already exists.\r\n        </div>\r\n    }\r\n\r\n    <div class=\"flex justify-end\">\r\n        <button class=\"py-2 mt-2 px-4 bg-green-500 hover:bg-green-600 disabled:bg-[#70CA79] disabled:cursor-not-allowed text-white rounded-md\" [disabled]=\"registerForm.invalid\">\r\n            @if(isLoading) {\r\n                <span><i class=\"fa fa-spin fa-spinner\"></i></span>\r\n            }\r\n            @else {\r\n                <span>Register</span>\r\n            }\r\n        </button>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '../../../../Services/Authentication/authentication.service';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { AuthenticationSuccess } from '../../../../Interfaces/AuthenticationSuccess/authentication-success';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, RouterLink],\r\n  templateUrl: './login-page.component.html',\r\n  styleUrl: './login-page.component.scss'\r\n})\r\nexport class LoginPageComponent {\r\n  loginFailed!:boolean;\r\n  isLoading!:boolean;\r\n\r\n  constructor(private _Authentication:AuthenticationService, private _Router:Router){}\r\n\r\n  loginForm:FormGroup = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required])\r\n  })\r\n\r\n  onSubmit() {\r\n    this.isLoading = true;\r\n    this._Authentication.login(this.loginForm.value).subscribe({\r\n      next: (res) => {\r\n        this.loginFailed = false;\r\n        this.isLoading = false;\r\n        localStorage.setItem(\"userToken\", (res as AuthenticationSuccess).token)\r\n        this._Authentication.decodeUserData();\r\n        this._Router.navigate([\"/home-page\"]);\r\n      },\r\n      error: (err) => {\r\n        this.loginFailed = true;\r\n        this.isLoading = false;\r\n      }\r\n    })\r\n  }\r\n}\r\n","<form class=\"w-9/12 mx-auto mt-8\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h3 class=\"mb-4 text-xl\">Login:</h3>\r\n\r\n    <label for=\"emailInputLogin\">Email:</label>\r\n    <input class=\"w-full mb-4 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"email\" id=\"emailInputLogin\" formControlName=\"email\">\r\n\r\n    <label for=\"passwordInputLogin\">Password:</label>\r\n    <input class=\"w-full mb-4 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"password\" id=\"passwordInputLogin\" formControlName=\"password\">\r\n\r\n    @if(loginFailed) {\r\n        <div class=\"bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Email or password is incorrect.\r\n        </div>\r\n    }\r\n\r\n    <div class=\"flex justify-end\">\r\n        <button id=\"signoutButton\" type=\"button\" class=\"opacity-70 me-4 md:me-2 cursor-pointer hover:text-green-500 transition-all\" routerLink=\"/forgot-password-page\">Forgot Password?</button>\r\n        <button class=\"py-2 px-4 mt-2 bg-green-500 hover:bg-green-600 disabled:bg-[#70CA79] disabled:cursor-not-allowed text-white rounded-md\" [disabled]=\"loginForm.invalid\">\r\n            @if(isLoading) {\r\n                <span><i class=\"fa fa-spin fa-spinner\"></i></span>\r\n            }\r\n            @else {\r\n                <span>Login</span>\r\n            }\r\n        </button>\r\n    </div>\r\n</form>","import { inject, PLATFORM_ID } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../Services/Authentication/authentication.service';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\nexport const authenticationGuard: CanActivateFn = (route, state) => {\r\n  let _Authentication:AuthenticationService = inject(AuthenticationService);\r\n  let _Router:Router = inject(Router);\r\n  let platformID:Object = inject(PLATFORM_ID);\r\n  if(_Authentication.userData.getValue() !== null) {\r\n    return true;\r\n  }\r\n  return (isPlatformServer(platformID)) ? false : _Router.createUrlTree(['/login-page']);\r\n};\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '../../../../../Services/Authentication/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password-page',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './forgot-password-page.component.html',\r\n  styleUrl: './forgot-password-page.component.scss'\r\n})\r\nexport class ForgotPasswordPageComponent {\r\n  isLoading!:boolean;\r\n\r\n  constructor(private _Authentication:AuthenticationService, private _Router:Router){}\r\n\r\n  forgotPasswordForm:FormGroup = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n  });\r\n\r\n  onSubmit():void {\r\n    this.isLoading = true;\r\n    this._Authentication.resetPassword(this.forgotPasswordForm.value).subscribe({\r\n      next: (res) => {\r\n        this.isLoading = false;\r\n        this._Authentication.resetPasswordSignal.next({signalForgotPassword: true, signalVerifyPassword: false});\r\n        this._Router.navigate(['/verify-password-page']);\r\n      },\r\n      error: (err) => {\r\n        this.isLoading = false;\r\n      }\r\n    })\r\n  }\r\n}\r\n","<form class=\"w-9/12 mx-auto mt-28\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n    <label class=\"text-2xl\" for=\"emailInputReset\">Enter you Email:</label>\r\n    <input class=\"w-full mb-4 mt-2 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"email\" id=\"emailInputReset\" formControlName=\"email\">\r\n    <p>Enter your email and a reset code will be sent shortly. </p>\r\n    <div class=\"flex justify-end\">\r\n        <button class=\"py-2 px-4 mt-2 bg-green-500 hover:bg-green-600 disabled:bg-[#70CA79] disabled:cursor-not-allowed text-white rounded-md\" [disabled]=\"forgotPasswordForm.invalid\">\r\n            @if(isLoading) {\r\n                <span><i class=\"fa fa-spin fa-spinner\"></i></span>\r\n            }\r\n            @else {\r\n                <span>Reset</span>\r\n            }\r\n        </button>\r\n    </div>\r\n</form>","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../../../../Services/Authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-verify-password-page',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './verify-password-page.component.html',\r\n  styleUrl: './verify-password-page.component.scss'\r\n})\r\nexport class VerifyPasswordPageComponent implements AfterViewInit {\r\n  intervalID!:any;\r\n  isLoading!:boolean;\r\n  timer:number = 59;\r\n\r\n  constructor(private _Authentication:AuthenticationService, private _Router:Router){}\r\n\r\n  ngAfterViewInit(): void {\r\n    if(typeof document !== typeof undefined) {\r\n      let counter = document.querySelector(\".time-counter\");\r\n      (counter as Element).textContent = \"1:00\";\r\n      this.intervalID = setInterval(() => {\r\n        (counter as Element).textContent = (this.timer > 10) ? `0:${this.timer}` : `0:0${this.timer}`;\r\n        this.timer--;\r\n        if(this.timer < 0) {\r\n          clearInterval(this.intervalID);\r\n        }\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  verifyCodeForm:FormGroup = new FormGroup({\r\n    resetCode: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  onSubmit():void {\r\n    this.isLoading = true;\r\n    this._Authentication.verifyCode(this.verifyCodeForm.value).subscribe({\r\n      next: (res) => {\r\n        this.isLoading = false;\r\n        this._Authentication.resetPasswordSignal.next({signalForgotPassword: true, signalVerifyPassword: true});\r\n        this._Router.navigate(['/reset-password-page']);\r\n      },\r\n      error: (err) => {\r\n        this.isLoading = false;\r\n      }\r\n    })\r\n  }\r\n}\r\n","<form class=\"w-9/12 mx-auto mt-28\" [formGroup]=\"verifyCodeForm\" (ngSubmit)=\"onSubmit()\">\r\n    <label class=\"text-2xl\" for=\"verifyCodeInputReset\">Enter Verification Code:</label>\r\n    <span class=\"time-counter ms-4 font-medium\">code</span>\r\n    <input class=\"w-full mb-4 mt-2 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"text\" id=\"verifyCodeInputReset\" formControlName=\"resetCode\">\r\n    <p>Enter the verification code sent to your email.</p>\r\n    <div class=\"flex justify-end\">\r\n        <button class=\"py-2 px-4 mt-2 bg-green-500 hover:bg-green-600 disabled:bg-[#70CA79] disabled:cursor-not-allowed text-white rounded-md\" [disabled]=\"verifyCodeForm.invalid\">\r\n            @if(isLoading) {\r\n                <span><i class=\"fa fa-spin fa-spinner\"></i></span>\r\n            }\r\n            @else {\r\n                <span>Verify</span>\r\n            }\r\n        </button>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '../../../../../Services/Authentication/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-page',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './reset-password-page.component.html',\r\n  styleUrl: './reset-password-page.component.scss'\r\n})\r\nexport class ResetPasswordPageComponent {\r\n  isLoading!:boolean;\r\n  constructor(private _Authentication:AuthenticationService, private _Router:Router){}\r\n\r\n  resetPasswordForm:FormGroup = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    newPassword: new FormControl('', [Validators.required, Validators.minLength(8)])\r\n  })\r\n\r\n  onSubmit():void {\r\n    this.isLoading = true;\r\n    this._Authentication.newPassword(this.resetPasswordForm.value).subscribe({\r\n      next: (res) => {\r\n        this.isLoading = false;\r\n        localStorage.setItem(\"userToken\", (res as {token:string}).token);\r\n        this._Authentication.decodeUserData();\r\n        this._Router.navigate([\"/home-page\"]);\r\n      },\r\n      error: (err) => {\r\n        this.isLoading = false;\r\n      }\r\n    })\r\n  }\r\n}\r\n","<form class=\"w-9/12 mx-auto mt-28\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n    <label class=\"text-xl\" for=\"emailInputResetPassword\">Enter Email:</label>\r\n    <input class=\"w-full mb-4 mt-2 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"text\" id=\"emailInputResetPassword\" formControlName=\"email\">\r\n    <label class=\"text-xl\" for=\"passwordInputResetPassword\">Enter New Password:</label>\r\n    <input class=\"w-full mb-4 mt-2 p-1 rounded-md border-gray-300 focus:border-green-500 focus:ring-green-500\" type=\"password\" id=\"passwordInputResetPassword\" formControlName=\"newPassword\">\r\n    <div class=\"flex justify-end\">\r\n        <button class=\"py-2 px-4 mt-2 bg-green-500 hover:bg-green-600 disabled:bg-[#70CA79] disabled:cursor-not-allowed text-white rounded-md\" [disabled]=\"resetPasswordForm.invalid\">\r\n            @if(isLoading) {\r\n                <span><i class=\"fa fa-spin fa-spinner\"></i></span>\r\n            }\r\n            @else {\r\n                <span>Reset Password</span>\r\n            }\r\n        </button>\r\n    </div>\r\n</form>","import { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../Services/Authentication/authentication.service';\r\nimport { inject } from '@angular/core';\r\n\r\nexport const forgotPasswordGuard: CanActivateFn = (route, state) => {\r\n  let _Authentication:AuthenticationService = inject(AuthenticationService);\r\n  let _Router:Router = inject(Router);\r\n  if(_Authentication.resetPasswordSignal.getValue()?.signalForgotPassword)\r\n    return true;\r\n  return _Router.createUrlTree([\"/forgot-password-page\"]);\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\r\nimport { ProductsService } from '../../../../../Services/Products/products.service';\r\nimport { Product } from '../../../../../Interfaces/Products/products';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CartService } from '../../../../../Services/Cart/cart.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { WishlistService } from '../../../../../Services/Wishlist/wishlist.service';\r\n\r\n@Component({\r\n  selector: 'app-product-details-page',\r\n  standalone: true,\r\n  imports: [CarouselModule],\r\n  templateUrl: './product-details-page.component.html',\r\n  styleUrl: './product-details-page.component.scss'\r\n})\r\nexport class ProductDetailsPageComponent implements OnInit{\r\n  productData:Product|null = null;\r\n  productID!:string;\r\n\r\n  constructor(private _ProductsService:ProductsService, private _ActivatedRoute:ActivatedRoute, protected _Cart:CartService, protected _Wishlist:WishlistService){}\r\n\r\n  carouselOptions: OwlOptions = {\r\n    loop: true,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n    },\r\n    nav: true,\r\n    lazyLoad: true,\r\n    autoplay: true,\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.getSpecificProduct();\r\n  }\r\n\r\n  getSpecificProduct():void {\r\n    this._ActivatedRoute.params.subscribe(res => {\r\n      this.productID = res['id'];\r\n    });\r\n    this._ProductsService.getSpecificProduct(this.productID).subscribe(res => {\r\n      this.productData = res!.data\r\n    });\r\n  }\r\n}\r\n","@if(productData) {\r\n    <div class=\"flex flex-wrap items-center md:h-screen\">\r\n        <div class=\"w-full md:w-3/12\">\r\n            <owl-carousel-o [options]=\"carouselOptions\" class=\"d-block w-3/4\">\r\n                @for(image of productData.images; track $index) {\r\n                    <ng-template carouselSlide>\r\n                        <img class=\"w-full\" [src]=\"image\" alt=\"slider-image\">\r\n                    </ng-template>\r\n                }\r\n            </owl-carousel-o>\r\n        </div>\r\n        <div class=\"w-full md:w-9/12 flex flex-col justify-center p-4 relative group shadow-xl\">\r\n            <h2>{{productData.title}}</h2>\r\n            <p class=\"mt-4 mb-2 text-gray-400 opacity-70\">{{productData.description}}</p>\r\n            <span class=\"text-green-500\">{{productData.category.name}}</span>\r\n            <div class=\"flex justify-between\">\r\n                <span>{{productData.price}} EGP</span>\r\n                <span><i class=\"fa-solid fa-star\" style=\"color: #FFD43B;\"></i>{{productData.ratingsAverage}}</span>\r\n            </div>\r\n            <div class=\"flex justify-end\">\r\n                <button class=\"rounded-md text-white p-4 mt-6 bg-[#08AC0B] cursor-pointer hover:bg-[#197717] transition-all duration-200\" (click)=\"this._Cart.frontAddProductToCart(productData._id)\">Add To Cart <i class=\"fa-solid fa-cart-shopping\" style=\"color: #ffffff;\"></i></button>\r\n            </div>\r\n            <button class=\"absolute -end-full transition-all group-hover:end-0 top-0 translate-y-1/2 -translate-x-1/4 bg-[#ffe4e4] p-2 rounded-md shadow-xl hover:bg-[#cdb8b8]\" (click)=\"this._Wishlist.frontAddProductToWishlist($event, productData._id)\">\r\n                <i class=\"heart-filled hidden fa-solid fa-heart text-red-700 text-4xl sm:text-2xl md:text-base\"></i>\r\n                <i class=\"heart-hollow  inline-block fa-regular fa-heart text-black text-4xl sm:text-2xl md:text-base\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { WishlistService } from '../../../../../Services/Wishlist/wishlist.service';\r\nimport { WishlistData } from '../../../../../Interfaces/Wishlist/wishlist';\r\nimport { CartService } from '../../../../../Services/Cart/cart.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-wishlist-page',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './wishlist-page.component.html',\r\n  styleUrl: './wishlist-page.component.scss'\r\n})\r\nexport class WishlistPageComponent implements OnInit{\r\n  wishlistData:WishlistData|null = null;\r\n  constructor(private _Wishlist:WishlistService, private _Cart:CartService, private _ToastrService:ToastrService){}\r\n\r\n  ngOnInit(): void {\r\n      this._Wishlist.getUserWishlist().subscribe(res => {\r\n        this.wishlistData = res;\r\n        this._Wishlist.wishlistItemsCount.next((this.wishlistData?.count === undefined) ? 0 : this.wishlistData.count);\r\n      })\r\n  }\r\n\r\n  addProductToCart(productId:string):void {\r\n    this._Cart.addProductToCart(productId).subscribe(res => {\r\n      this._Cart.cartItemsCount.next(this._Cart.cartItemsCount.getValue() + 1);\r\n      this._ToastrService.success('Product Successfully Added to Cart', 'Added To Cart!', {\r\n        progressBar: true,\r\n        timeOut: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  removeItemFromWishlist($event:Event, productId:string):void {\r\n    ($event.target as HTMLElement).closest(\".wishlist-item-container\")?.querySelector(\".loader-container\")?.classList.replace(\"hidden\", \"flex\");\r\n    this._Wishlist.removeItemFromWishlist(productId).subscribe(res => {\r\n      ($event.target as HTMLElement).closest(\".wishlist-item-container\")?.remove();\r\n      if(res?.data.length === 0)\r\n        this._Wishlist.wishlistItemsCount.next(0);\r\n    })\r\n  }\r\n}\r\n","<h2 class=\"text-2xl font-semibold mt-4\">My Wishlist</h2>\r\n@if(wishlistData !== null) {\r\n    @for(product of wishlistData.data; track product._id) {\r\n        <div class=\"wishlist-item-container flex flex-wrap items-center shadow-md relative mt-6 p-4 bg-gray-50 w-10/12 mx-auto\">\r\n            <div class=\"loader-container hidden absolute inset-0 bg-gray-500 bg-opacity-30 justify-center items-center\">\r\n                <span class=\"loader\"></span>\r\n            </div>\r\n            <div class=\"w-full md:w-2/12\">\r\n                <img class=\"w-full\" [src]=\"product.imageCover\" [alt]=\"product.title\">\r\n            </div>\r\n            <div class=\"w-full md:w-10/12 px-2\">\r\n                <h3 class=\"text-xl lg:text-2xl font-semibold\">{{product.title}}</h3>\r\n                <p class=\"text-green-500 text-lg\">Price: {{product.price}} EGP</p>\r\n                <button (click)=\"removeItemFromWishlist($event, product._id)\">Remove <i class=\"fa-solid fa-trash-can text-green-500\"></i></button>\r\n                <button class=\"w-full rounded-sm text-white p-1 mt-6 bg-[#08AC0B] cursor-pointer hover:bg-[#197717] transition-all\" (click)=\"addProductToCart(product._id)\">Add To Cart <i class=\"fa-solid fa-cart-shopping\" style=\"color: #ffffff;\"></i></button>\r\n            </div>\r\n            <hr class=\"w-3/4 h-1 bg-green-500 absolute bottom-0 start-1/2 -translate-x-1/2 rounded-sm\">\r\n        </div>\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ShippingAddress } from '../../Interfaces/UserData/user-data';\r\nimport { CreditOrder, FailedOrder, Order } from '../../Interfaces/Order/order';\r\nimport { BaseURL } from '../../Base/Environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n\r\n  constructor(private _HTTPClient:HttpClient) { }\r\n\r\n  createCashOrder(cartId:string, shippingAddress:ShippingAddress):Observable<Order|FailedOrder> {\r\n    return this._HTTPClient.post<Order|FailedOrder>(`${BaseURL.baseURL}/api/v1/orders/${cartId}`, shippingAddress);\r\n  }\r\n\r\n  createCreditOrder(cartId:string, shippingAddress:ShippingAddress):Observable<CreditOrder|FailedOrder> {\r\n    return this._HTTPClient.post<CreditOrder|FailedOrder>(`${BaseURL.baseURL}/api/v1/orders/checkout-session/${cartId}?url=${window.location.origin}`, shippingAddress)\r\n  }\r\n}\r\n","import { Component, inject, PLATFORM_ID } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { PaymentService } from '../../../../Services/Payment/payment.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CartService } from '../../../../Services/Cart/cart.service';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { CreditOrder } from '../../../../Interfaces/Order/order';\r\n\r\n@Component({\r\n  selector: 'app-shipping-address-details',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './shipping-address-details.component.html',\r\n  styleUrl: './shipping-address-details.component.scss'\r\n})\r\nexport class ShippingAddressDetailsComponent {\r\n  isLoading:boolean = false;\r\n  cartId!:string;\r\n  platformId:Object = inject(PLATFORM_ID);\r\n  constructor(private _PaymentService:PaymentService, private _ActivatedRoute:ActivatedRoute, private _Router:Router, private _ToastrService:ToastrService, private _CartService:CartService){}\r\n\r\n  shippingAddressForm:FormGroup = new FormGroup({\r\n    details: new FormControl('', Validators.required),\r\n    phone: new FormControl('', [Validators.required, Validators.pattern(/^((\\+20)|(0))?(10|11|12|15){1}[0-9]{8}$/)]),\r\n    city: new FormControl('', Validators.required)\r\n  });\r\n\r\n  paymentMethodForm:FormGroup = new FormGroup({\r\n    payment: new FormControl('', Validators.required)\r\n  });\r\n\r\n  onSubmit():void {\r\n    this.isLoading = true;\r\n    this._ActivatedRoute.params.subscribe(res => {\r\n      this.cartId = res['cartId'];\r\n    })\r\n    if(this.shippingAddressForm.valid && this.paymentMethodForm.valid) {\r\n      if(this.paymentMethodForm.value.payment === 'cash') {\r\n        this._PaymentService.createCashOrder(this.cartId, this.shippingAddressForm.value).subscribe(res => {\r\n          this._ToastrService.success(\"Ordered created successfully.\", \"Order Created!\", {\r\n            progressBar: true,\r\n            timeOut: 3000\r\n          })\r\n          this._Router.navigate(['/home-page']);\r\n          this._CartService.cartItemsCount.next(0);\r\n        })\r\n      }\r\n      else if(this.paymentMethodForm.value.payment === 'credit') {\r\n        if(isPlatformBrowser(this.platformId)) {\r\n          this._PaymentService.createCreditOrder(this.cartId, this.shippingAddressForm.value).subscribe(res => {\r\n            window.location.href = (res as CreditOrder).session.url;\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","<form class=\"mt-8 pt-24\" [formGroup]=\"shippingAddressForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h2 class=\"text-2xl font-semibold\">Shipping Address Details</h2>\r\n    <div class=\"relative h-10 w-full min-w-[200px] mt-4\">\r\n        <input\r\n            class=\"peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-green-500 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50\"\r\n            placeholder=\" \" formControlName=\"details\"/>\r\n        <label\r\n            class=\"before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none text-[11px] font-normal leading-tight text-blue-gray-400 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-green-500 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:border-green-500 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:border-green-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500\">\r\n            Shipping Address\r\n        </label>\r\n    </div>\r\n    @if(shippingAddressForm.get('details')!.invalid && shippingAddressForm.get('details')!.touched) {\r\n        <div class=\"mt-4 bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Shipping Address is required.\r\n        </div>\r\n    }\r\n    <div class=\"relative h-10 w-full min-w-[200px] mt-4\">\r\n        <input\r\n            class=\"peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-green-500 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50\"\r\n            placeholder=\" \" formControlName=\"phone\"/>\r\n        <label\r\n            class=\"before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none text-[11px] font-normal leading-tight text-blue-gray-400 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-green-500 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:border-green-500 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:border-green-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500\">\r\n            Phone\r\n        </label>\r\n    </div>\r\n    @if(shippingAddressForm.get('phone')!.invalid && shippingAddressForm.get('phone')!.touched) {\r\n        <div class=\"mt-4 bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            Phone Field is required / Please enter a valid egyption phone number.\r\n        </div>\r\n    }\r\n    <div class=\"relative h-10 w-full min-w-[200px] mt-4\">\r\n        <input\r\n            class=\"peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-green-500 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50\"\r\n            placeholder=\" \" formControlName=\"city\"/>\r\n        <label\r\n            class=\"before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none text-[11px] font-normal leading-tight text-blue-gray-400 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-green-500 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:border-green-500 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:border-green-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500\">\r\n            City\r\n        </label>\r\n    </div>\r\n    @if(shippingAddressForm.get('city')!.invalid && shippingAddressForm.get('city')!.touched) {\r\n        <div class=\"mt-4 bg-red-600 text-white rounded-md border border-solid border-red-400 ring-red-400 p-3\">\r\n            City is required.\r\n        </div>\r\n    }\r\n    <form [formGroup]=\"paymentMethodForm\">\r\n        <div class=\"flex flex-col sm:flex-row gap-4 mt-4\">\r\n            <div class=\"relative py-2 px-8 transition-all rounded-md border border-solid border-green-600 flex flex-row justify-between items-center has-[:checked]:bg-green-500 has-[:checked]:shadow-lg has-[:checked]:shadow-green-500 has-[:checked]:!text-white\">\r\n                <input class=\"absolute inset-0 w-full h-full rounded-none opacity-0 cursor-pointer\" type=\"radio\" name=\"payment\" value=\"cash\" formControlName=\"payment\">\r\n                <h3 class=\"text-lg font-semibold\">Cash</h3>\r\n                <i class=\"fa-solid fa-money-bill mx-1 text-lg\"></i>\r\n            </div>\r\n            <div class=\"relative py-2 px-8 transition-all rounded-md border border-solid border-green-600 flex justify-between items-center has-[:checked]:bg-green-500 has-[:checked]:shadow-lg has-[:checked]:shadow-green-500 has-[:checked]:!text-white\">\r\n                <input class=\"absolute inset-0 w-full h-full rounded-none opacity-0 cursor-pointer\" type=\"radio\" name=\"payment\" value=\"credit\" formControlName=\"payment\">\r\n                <h3 class=\"text-lg font-semibold\">Credit Card</h3>\r\n                <i class=\"fa-solid fa-credit-card mx-1 text-lg\"></i>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"flex justify-end\">\r\n        <button class=\"w-24 mx-1 p-2 mt-6 bg-green-500 hover:bg-green-600 disabled:bg-[#70CA79] disabled:cursor-not-allowed text-white rounded-md\" [disabled]=\"shippingAddressForm.invalid || paymentMethodForm.invalid\" type=\"submit\">\r\n            @if(isLoading) {\r\n                <span><i class=\"fa fa-spin fa-spinner\"></i></span>\r\n            }\r\n            @else {\r\n                Checkout\r\n            }\r\n        </button>\r\n    </div>\r\n</form>\r\n","import { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../Services/Authentication/authentication.service';\r\nimport { inject } from '@angular/core';\r\n\r\nexport const verifyPasswordGuard: CanActivateFn = (route, state) => {\r\n  let _Authentication:AuthenticationService = inject(AuthenticationService);\r\n  let _Router:Router = inject(Router);\r\n  if(_Authentication.resetPasswordSignal.getValue()?.signalForgotPassword && _Authentication.resetPasswordSignal.getValue()?.signalVerifyPassword) {\r\n    _Authentication.resetPasswordSignal.next({signalForgotPassword: false, signalVerifyPassword: false});\r\n    return true;\r\n  }\r\n  return _Router.createUrlTree(['/verify-password-page']);\r\n};\r\n","import { Routes } from '@angular/router';\r\nimport { HomePageComponent } from './Components/Layout/Pages/home-page/home-page.component';\r\nimport { CartPageComponent } from './Components/Layout/Pages/cart-page/cart-page.component';\r\nimport { ProductsPageComponent } from './Components/Layout/Pages/products-page/products-page.component';\r\nimport { CategoriesPageComponent } from './Components/Layout/Pages/categories-page/categories-page.component';\r\nimport { BrandsPageComponent } from './Components/Layout/Pages/brands-page/brands-page.component';\r\nimport { NotFoundComponent } from './Components/Layout/not-found/not-found.component';\r\nimport { RegisterPageComponent } from './Components/Layout/Pages/register-page/register-page.component';\r\nimport { LoginPageComponent } from './Components/Layout/Pages/login-page/login-page.component';\r\nimport { authenticationGuard } from './Guard/Guard/authentication.guard';\r\nimport { ForgotPasswordPageComponent } from './Components/Layout/Pages/ForgotPassword/forgot-password-page/forgot-password-page.component';\r\nimport { VerifyPasswordPageComponent } from './Components/Layout/Pages/ForgotPassword/verify-password-page/verify-password-page.component';\r\nimport { ResetPasswordPageComponent } from './Components/Layout/Pages/ForgotPassword/reset-password-page/reset-password-page.component';\r\nimport { forgotPasswordGuard } from './Guard/ForgotPasswordGuard/forgot-password.guard';\r\nimport { ProductDetailsPageComponent } from './Components/Layout/Pages/ProductDetailsPage/product-details-page/product-details-page.component';\r\nimport { WishlistPageComponent } from './Components/Layout/Pages/wishlist-page/wishlist-page/wishlist-page.component';\r\nimport { ShippingAddressDetailsComponent } from './Components/Layout/Pages/shipping-address-details/shipping-address-details.component';\r\nimport { verifyPasswordGuard } from './Guard/VerifyPasswordGuard/verify-password.guard';\r\n\r\n\r\nexport const routes: Routes = [\r\n    {path: \"home-page\", component: HomePageComponent, canActivate: [authenticationGuard], title: \"Home\"},\r\n    {path: \"cart-page\", component: CartPageComponent, canActivate: [authenticationGuard], title: \"Cart\"},\r\n    {path: \"wishlist-page\", component: WishlistPageComponent, canActivate: [authenticationGuard], title: \"Wishlist\"},\r\n    {path: \"products-page\", component: ProductsPageComponent, canActivate: [authenticationGuard], title: \"Products\"},\r\n    {path: \"categories-page\", component: CategoriesPageComponent, canActivate: [authenticationGuard], title: \"Cataegories\"},\r\n    {path: \"brands-page\", component: BrandsPageComponent, canActivate: [authenticationGuard], title: \"Brands\"},\r\n    {path: \"product-details-page/:id\", component: ProductDetailsPageComponent, canActivate: [authenticationGuard], title: \"Product Details\"},\r\n    {path: \"shipping-address-details/:cartId\", component: ShippingAddressDetailsComponent, canActivate: [authenticationGuard], title: \"Shipping Address\"},\r\n    {path: \"register-page\", component: RegisterPageComponent, title: \"Register\"},\r\n    {path: \"login-page\", component: LoginPageComponent, title: \"Login\"},\r\n    {path: \"forgot-password-page\", component: ForgotPasswordPageComponent, title: \"Forgot Password\"},\r\n    {path: \"verify-password-page\", component: VerifyPasswordPageComponent, canActivate: [forgotPasswordGuard], title: \"Verify Password\"},\r\n    {path: \"reset-password-page\", component: ResetPasswordPageComponent, canActivate: [verifyPasswordGuard], title: \"Reset Password\"},\r\n    {path: \"\", redirectTo: \"home-page\", pathMatch: \"full\"},\r\n    {path: \"**\", component: NotFoundComponent, title: \"Not Found\"}\r\n];\r\n","/**\n * @license Angular v17.3.12\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ÉµAnimationGroupPlayer, NoopAnimationPlayer, AUTO_STYLE, ÉµPRE_STYLE, sequence, AnimationMetadataType, style } from '@angular/animations';\nimport * as i0 from '@angular/core';\nimport { ÉµRuntimeError, Injectable } from '@angular/core';\nconst LINE_START = '\\n - ';\nfunction invalidTimingValue(exp) {\n  return new ÉµRuntimeError(3000 /* RuntimeErrorCode.INVALID_TIMING_VALUE */, ngDevMode && `The provided timing value \"${exp}\" is invalid.`);\n}\nfunction negativeStepValue() {\n  return new ÉµRuntimeError(3100 /* RuntimeErrorCode.NEGATIVE_STEP_VALUE */, ngDevMode && 'Duration values below 0 are not allowed for this animation step.');\n}\nfunction negativeDelayValue() {\n  return new ÉµRuntimeError(3101 /* RuntimeErrorCode.NEGATIVE_DELAY_VALUE */, ngDevMode && 'Delay values below 0 are not allowed for this animation step.');\n}\nfunction invalidStyleParams(varName) {\n  return new ÉµRuntimeError(3001 /* RuntimeErrorCode.INVALID_STYLE_PARAMS */, ngDevMode && `Unable to resolve the local animation param ${varName} in the given list of values`);\n}\nfunction invalidParamValue(varName) {\n  return new ÉµRuntimeError(3003 /* RuntimeErrorCode.INVALID_PARAM_VALUE */, ngDevMode && `Please provide a value for the animation param ${varName}`);\n}\nfunction invalidNodeType(nodeType) {\n  return new ÉµRuntimeError(3004 /* RuntimeErrorCode.INVALID_NODE_TYPE */, ngDevMode && `Unable to resolve animation metadata node #${nodeType}`);\n}\nfunction invalidCssUnitValue(userProvidedProperty, value) {\n  return new ÉµRuntimeError(3005 /* RuntimeErrorCode.INVALID_CSS_UNIT_VALUE */, ngDevMode && `Please provide a CSS unit value for ${userProvidedProperty}:${value}`);\n}\nfunction invalidTrigger() {\n  return new ÉµRuntimeError(3006 /* RuntimeErrorCode.INVALID_TRIGGER */, ngDevMode && \"animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))\");\n}\nfunction invalidDefinition() {\n  return new ÉµRuntimeError(3007 /* RuntimeErrorCode.INVALID_DEFINITION */, ngDevMode && 'only state() and transition() definitions can sit inside of a trigger()');\n}\nfunction invalidState(metadataName, missingSubs) {\n  return new ÉµRuntimeError(3008 /* RuntimeErrorCode.INVALID_STATE */, ngDevMode && `state(\"${metadataName}\", ...) must define default values for all the following style substitutions: ${missingSubs.join(', ')}`);\n}\nfunction invalidStyleValue(value) {\n  return new ÉµRuntimeError(3002 /* RuntimeErrorCode.INVALID_STYLE_VALUE */, ngDevMode && `The provided style string value ${value} is not allowed.`);\n}\nfunction invalidProperty(prop) {\n  return new ÉµRuntimeError(3009 /* RuntimeErrorCode.INVALID_PROPERTY */, ngDevMode && `The provided animation property \"${prop}\" is not a supported CSS property for animations`);\n}\nfunction invalidParallelAnimation(prop, firstStart, firstEnd, secondStart, secondEnd) {\n  return new ÉµRuntimeError(3010 /* RuntimeErrorCode.INVALID_PARALLEL_ANIMATION */, ngDevMode && `The CSS property \"${prop}\" that exists between the times of \"${firstStart}ms\" and \"${firstEnd}ms\" is also being animated in a parallel animation between the times of \"${secondStart}ms\" and \"${secondEnd}ms\"`);\n}\nfunction invalidKeyframes() {\n  return new ÉµRuntimeError(3011 /* RuntimeErrorCode.INVALID_KEYFRAMES */, ngDevMode && `keyframes() must be placed inside of a call to animate()`);\n}\nfunction invalidOffset() {\n  return new ÉµRuntimeError(3012 /* RuntimeErrorCode.INVALID_OFFSET */, ngDevMode && `Please ensure that all keyframe offsets are between 0 and 1`);\n}\nfunction keyframeOffsetsOutOfOrder() {\n  return new ÉµRuntimeError(3200 /* RuntimeErrorCode.KEYFRAME_OFFSETS_OUT_OF_ORDER */, ngDevMode && `Please ensure that all keyframe offsets are in order`);\n}\nfunction keyframesMissingOffsets() {\n  return new ÉµRuntimeError(3202 /* RuntimeErrorCode.KEYFRAMES_MISSING_OFFSETS */, ngDevMode && `Not all style() steps within the declared keyframes() contain offsets`);\n}\nfunction invalidStagger() {\n  return new ÉµRuntimeError(3013 /* RuntimeErrorCode.INVALID_STAGGER */, ngDevMode && `stagger() can only be used inside of query()`);\n}\nfunction invalidQuery(selector) {\n  return new ÉµRuntimeError(3014 /* RuntimeErrorCode.INVALID_QUERY */, ngDevMode && `\\`query(\"${selector}\")\\` returned zero elements. (Use \\`query(\"${selector}\", { optional: true })\\` if you wish to allow this.)`);\n}\nfunction invalidExpression(expr) {\n  return new ÉµRuntimeError(3015 /* RuntimeErrorCode.INVALID_EXPRESSION */, ngDevMode && `The provided transition expression \"${expr}\" is not supported`);\n}\nfunction invalidTransitionAlias(alias) {\n  return new ÉµRuntimeError(3016 /* RuntimeErrorCode.INVALID_TRANSITION_ALIAS */, ngDevMode && `The transition alias value \"${alias}\" is not supported`);\n}\nfunction validationFailed(errors) {\n  return new ÉµRuntimeError(3500 /* RuntimeErrorCode.VALIDATION_FAILED */, ngDevMode && `animation validation failed:\\n${errors.map(err => err.message).join('\\n')}`);\n}\nfunction buildingFailed(errors) {\n  return new ÉµRuntimeError(3501 /* RuntimeErrorCode.BUILDING_FAILED */, ngDevMode && `animation building failed:\\n${errors.map(err => err.message).join('\\n')}`);\n}\nfunction triggerBuildFailed(name, errors) {\n  return new ÉµRuntimeError(3404 /* RuntimeErrorCode.TRIGGER_BUILD_FAILED */, ngDevMode && `The animation trigger \"${name}\" has failed to build due to the following errors:\\n - ${errors.map(err => err.message).join('\\n - ')}`);\n}\nfunction animationFailed(errors) {\n  return new ÉµRuntimeError(3502 /* RuntimeErrorCode.ANIMATION_FAILED */, ngDevMode && `Unable to animate due to the following errors:${LINE_START}${errors.map(err => err.message).join(LINE_START)}`);\n}\nfunction registerFailed(errors) {\n  return new ÉµRuntimeError(3503 /* RuntimeErrorCode.REGISTRATION_FAILED */, ngDevMode && `Unable to build the animation due to the following errors: ${errors.map(err => err.message).join('\\n')}`);\n}\nfunction missingOrDestroyedAnimation() {\n  return new ÉµRuntimeError(3300 /* RuntimeErrorCode.MISSING_OR_DESTROYED_ANIMATION */, ngDevMode && \"The requested animation doesn't exist or has already been destroyed\");\n}\nfunction createAnimationFailed(errors) {\n  return new ÉµRuntimeError(3504 /* RuntimeErrorCode.CREATE_ANIMATION_FAILED */, ngDevMode && `Unable to create the animation due to the following errors:${errors.map(err => err.message).join('\\n')}`);\n}\nfunction missingPlayer(id) {\n  return new ÉµRuntimeError(3301 /* RuntimeErrorCode.MISSING_PLAYER */, ngDevMode && `Unable to find the timeline player referenced by ${id}`);\n}\nfunction missingTrigger(phase, name) {\n  return new ÉµRuntimeError(3302 /* RuntimeErrorCode.MISSING_TRIGGER */, ngDevMode && `Unable to listen on the animation trigger event \"${phase}\" because the animation trigger \"${name}\" doesn\\'t exist!`);\n}\nfunction missingEvent(name) {\n  return new ÉµRuntimeError(3303 /* RuntimeErrorCode.MISSING_EVENT */, ngDevMode && `Unable to listen on the animation trigger \"${name}\" because the provided event is undefined!`);\n}\nfunction unsupportedTriggerEvent(phase, name) {\n  return new ÉµRuntimeError(3400 /* RuntimeErrorCode.UNSUPPORTED_TRIGGER_EVENT */, ngDevMode && `The provided animation trigger event \"${phase}\" for the animation trigger \"${name}\" is not supported!`);\n}\nfunction unregisteredTrigger(name) {\n  return new ÉµRuntimeError(3401 /* RuntimeErrorCode.UNREGISTERED_TRIGGER */, ngDevMode && `The provided animation trigger \"${name}\" has not been registered!`);\n}\nfunction triggerTransitionsFailed(errors) {\n  return new ÉµRuntimeError(3402 /* RuntimeErrorCode.TRIGGER_TRANSITIONS_FAILED */, ngDevMode && `Unable to process animations due to the following failed trigger transitions\\n ${errors.map(err => err.message).join('\\n')}`);\n}\nfunction triggerParsingFailed(name, errors) {\n  return new ÉµRuntimeError(3403 /* RuntimeErrorCode.TRIGGER_PARSING_FAILED */, ngDevMode && `Animation parsing for the ${name} trigger have failed:${LINE_START}${errors.map(err => err.message).join(LINE_START)}`);\n}\nfunction transitionFailed(name, errors) {\n  return new ÉµRuntimeError(3505 /* RuntimeErrorCode.TRANSITION_FAILED */, ngDevMode && `@${name} has failed due to:\\n ${errors.map(err => err.message).join('\\n- ')}`);\n}\n\n/**\n * Set of all animatable CSS properties\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties\n */\nconst ANIMATABLE_PROP_SET = new Set(['-moz-outline-radius', '-moz-outline-radius-bottomleft', '-moz-outline-radius-bottomright', '-moz-outline-radius-topleft', '-moz-outline-radius-topright', '-ms-grid-columns', '-ms-grid-rows', '-webkit-line-clamp', '-webkit-text-fill-color', '-webkit-text-stroke', '-webkit-text-stroke-color', 'accent-color', 'all', 'backdrop-filter', 'background', 'background-color', 'background-position', 'background-size', 'block-size', 'border', 'border-block-end', 'border-block-end-color', 'border-block-end-width', 'border-block-start', 'border-block-start-color', 'border-block-start-width', 'border-bottom', 'border-bottom-color', 'border-bottom-left-radius', 'border-bottom-right-radius', 'border-bottom-width', 'border-color', 'border-end-end-radius', 'border-end-start-radius', 'border-image-outset', 'border-image-slice', 'border-image-width', 'border-inline-end', 'border-inline-end-color', 'border-inline-end-width', 'border-inline-start', 'border-inline-start-color', 'border-inline-start-width', 'border-left', 'border-left-color', 'border-left-width', 'border-radius', 'border-right', 'border-right-color', 'border-right-width', 'border-start-end-radius', 'border-start-start-radius', 'border-top', 'border-top-color', 'border-top-left-radius', 'border-top-right-radius', 'border-top-width', 'border-width', 'bottom', 'box-shadow', 'caret-color', 'clip', 'clip-path', 'color', 'column-count', 'column-gap', 'column-rule', 'column-rule-color', 'column-rule-width', 'column-width', 'columns', 'filter', 'flex', 'flex-basis', 'flex-grow', 'flex-shrink', 'font', 'font-size', 'font-size-adjust', 'font-stretch', 'font-variation-settings', 'font-weight', 'gap', 'grid-column-gap', 'grid-gap', 'grid-row-gap', 'grid-template-columns', 'grid-template-rows', 'height', 'inline-size', 'input-security', 'inset', 'inset-block', 'inset-block-end', 'inset-block-start', 'inset-inline', 'inset-inline-end', 'inset-inline-start', 'left', 'letter-spacing', 'line-clamp', 'line-height', 'margin', 'margin-block-end', 'margin-block-start', 'margin-bottom', 'margin-inline-end', 'margin-inline-start', 'margin-left', 'margin-right', 'margin-top', 'mask', 'mask-border', 'mask-position', 'mask-size', 'max-block-size', 'max-height', 'max-inline-size', 'max-lines', 'max-width', 'min-block-size', 'min-height', 'min-inline-size', 'min-width', 'object-position', 'offset', 'offset-anchor', 'offset-distance', 'offset-path', 'offset-position', 'offset-rotate', 'opacity', 'order', 'outline', 'outline-color', 'outline-offset', 'outline-width', 'padding', 'padding-block-end', 'padding-block-start', 'padding-bottom', 'padding-inline-end', 'padding-inline-start', 'padding-left', 'padding-right', 'padding-top', 'perspective', 'perspective-origin', 'right', 'rotate', 'row-gap', 'scale', 'scroll-margin', 'scroll-margin-block', 'scroll-margin-block-end', 'scroll-margin-block-start', 'scroll-margin-bottom', 'scroll-margin-inline', 'scroll-margin-inline-end', 'scroll-margin-inline-start', 'scroll-margin-left', 'scroll-margin-right', 'scroll-margin-top', 'scroll-padding', 'scroll-padding-block', 'scroll-padding-block-end', 'scroll-padding-block-start', 'scroll-padding-bottom', 'scroll-padding-inline', 'scroll-padding-inline-end', 'scroll-padding-inline-start', 'scroll-padding-left', 'scroll-padding-right', 'scroll-padding-top', 'scroll-snap-coordinate', 'scroll-snap-destination', 'scrollbar-color', 'shape-image-threshold', 'shape-margin', 'shape-outside', 'tab-size', 'text-decoration', 'text-decoration-color', 'text-decoration-thickness', 'text-emphasis', 'text-emphasis-color', 'text-indent', 'text-shadow', 'text-underline-offset', 'top', 'transform', 'transform-origin', 'translate', 'vertical-align', 'visibility', 'width', 'word-spacing', 'z-index', 'zoom']);\nfunction optimizeGroupPlayer(players) {\n  switch (players.length) {\n    case 0:\n      return new NoopAnimationPlayer();\n    case 1:\n      return players[0];\n    default:\n      return new ÉµAnimationGroupPlayer(players);\n  }\n}\nfunction normalizeKeyframes$1(normalizer, keyframes, preStyles = new Map(), postStyles = new Map()) {\n  const errors = [];\n  const normalizedKeyframes = [];\n  let previousOffset = -1;\n  let previousKeyframe = null;\n  keyframes.forEach(kf => {\n    const offset = kf.get('offset');\n    const isSameOffset = offset == previousOffset;\n    const normalizedKeyframe = isSameOffset && previousKeyframe || new Map();\n    kf.forEach((val, prop) => {\n      let normalizedProp = prop;\n      let normalizedValue = val;\n      if (prop !== 'offset') {\n        normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n        switch (normalizedValue) {\n          case ÉµPRE_STYLE:\n            normalizedValue = preStyles.get(prop);\n            break;\n          case AUTO_STYLE:\n            normalizedValue = postStyles.get(prop);\n            break;\n          default:\n            normalizedValue = normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n            break;\n        }\n      }\n      normalizedKeyframe.set(normalizedProp, normalizedValue);\n    });\n    if (!isSameOffset) {\n      normalizedKeyframes.push(normalizedKeyframe);\n    }\n    previousKeyframe = normalizedKeyframe;\n    previousOffset = offset;\n  });\n  if (errors.length) {\n    throw animationFailed(errors);\n  }\n  return normalizedKeyframes;\n}\nfunction listenOnPlayer(player, eventName, event, callback) {\n  switch (eventName) {\n    case 'start':\n      player.onStart(() => callback(event && copyAnimationEvent(event, 'start', player)));\n      break;\n    case 'done':\n      player.onDone(() => callback(event && copyAnimationEvent(event, 'done', player)));\n      break;\n    case 'destroy':\n      player.onDestroy(() => callback(event && copyAnimationEvent(event, 'destroy', player)));\n      break;\n  }\n}\nfunction copyAnimationEvent(e, phaseName, player) {\n  const totalTime = player.totalTime;\n  const disabled = player.disabled ? true : false;\n  const event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime, disabled);\n  const data = e['_data'];\n  if (data != null) {\n    event['_data'] = data;\n  }\n  return event;\n}\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName = '', totalTime = 0, disabled) {\n  return {\n    element,\n    triggerName,\n    fromState,\n    toState,\n    phaseName,\n    totalTime,\n    disabled: !!disabled\n  };\n}\nfunction getOrSetDefaultValue(map, key, defaultValue) {\n  let value = map.get(key);\n  if (!value) {\n    map.set(key, value = defaultValue);\n  }\n  return value;\n}\nfunction parseTimelineCommand(command) {\n  const separatorPos = command.indexOf(':');\n  const id = command.substring(1, separatorPos);\n  const action = command.slice(separatorPos + 1);\n  return [id, action];\n}\nconst documentElement = /* @__PURE__ */(() => typeof document === 'undefined' ? null : document.documentElement)();\nfunction getParentElement(element) {\n  const parent = element.parentNode || element.host || null; // consider host to support shadow DOM\n  if (parent === documentElement) {\n    return null;\n  }\n  return parent;\n}\nfunction containsVendorPrefix(prop) {\n  // Webkit is the only real popular vendor prefix nowadays\n  // cc: http://shouldiprefix.com/\n  return prop.substring(1, 6) == 'ebkit'; // webkit or Webkit\n}\nlet _CACHED_BODY = null;\nlet _IS_WEBKIT = false;\nfunction validateStyleProperty(prop) {\n  if (!_CACHED_BODY) {\n    _CACHED_BODY = getBodyNode() || {};\n    _IS_WEBKIT = _CACHED_BODY.style ? 'WebkitAppearance' in _CACHED_BODY.style : false;\n  }\n  let result = true;\n  if (_CACHED_BODY.style && !containsVendorPrefix(prop)) {\n    result = prop in _CACHED_BODY.style;\n    if (!result && _IS_WEBKIT) {\n      const camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.slice(1);\n      result = camelProp in _CACHED_BODY.style;\n    }\n  }\n  return result;\n}\nfunction validateWebAnimatableStyleProperty(prop) {\n  return ANIMATABLE_PROP_SET.has(prop);\n}\nfunction getBodyNode() {\n  if (typeof document != 'undefined') {\n    return document.body;\n  }\n  return null;\n}\nfunction containsElement(elm1, elm2) {\n  while (elm2) {\n    if (elm2 === elm1) {\n      return true;\n    }\n    elm2 = getParentElement(elm2);\n  }\n  return false;\n}\nfunction invokeQuery(element, selector, multi) {\n  if (multi) {\n    return Array.from(element.querySelectorAll(selector));\n  }\n  const elem = element.querySelector(selector);\n  return elem ? [elem] : [];\n}\nfunction hypenatePropsKeys(original) {\n  const newMap = new Map();\n  original.forEach((val, prop) => {\n    const newProp = prop.replace(/([a-z])([A-Z])/g, '$1-$2');\n    newMap.set(newProp, val);\n  });\n  return newMap;\n}\n\n/**\n * @publicApi\n *\n * `AnimationDriver` implentation for Noop animations\n */\nclass NoopAnimationDriver {\n  /**\n   * @returns Whether `prop` is a valid CSS property\n   */\n  validateStyleProperty(prop) {\n    return validateStyleProperty(prop);\n  }\n  /**\n   * @deprecated unused\n   */\n  matchesElement(_element, _selector) {\n    // This method is deprecated and no longer in use so we return false.\n    return false;\n  }\n  /**\n   *\n   * @returns Whether elm1 contains elm2.\n   */\n  containsElement(elm1, elm2) {\n    return containsElement(elm1, elm2);\n  }\n  /**\n   * @returns Rhe parent of the given element or `null` if the element is the `document`\n   */\n  getParentElement(element) {\n    return getParentElement(element);\n  }\n  /**\n   * @returns The result of the query selector on the element. The array will contain up to 1 item\n   *     if `multi` is  `false`.\n   */\n  query(element, selector, multi) {\n    return invokeQuery(element, selector, multi);\n  }\n  /**\n   * @returns The `defaultValue` or empty string\n   */\n  computeStyle(element, prop, defaultValue) {\n    return defaultValue || '';\n  }\n  /**\n   * @returns An `NoopAnimationPlayer`\n   */\n  animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n    return new NoopAnimationPlayer(duration, delay);\n  }\n  static {\n    this.Éµfac = function NoopAnimationDriver_Factory(t) {\n      return new (t || NoopAnimationDriver)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: NoopAnimationDriver,\n      factory: NoopAnimationDriver.Éµfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NoopAnimationDriver, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @publicApi\n */\nclass AnimationDriver {\n  /**\n   * @deprecated Use the NoopAnimationDriver class.\n   */\n  static {\n    this.NOOP = new NoopAnimationDriver();\n  }\n}\nclass AnimationStyleNormalizer {}\nclass NoopAnimationStyleNormalizer {\n  normalizePropertyName(propertyName, errors) {\n    return propertyName;\n  }\n  normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n    return value;\n  }\n}\nconst ONE_SECOND = 1000;\nconst SUBSTITUTION_EXPR_START = '{{';\nconst SUBSTITUTION_EXPR_END = '}}';\nconst ENTER_CLASSNAME = 'ng-enter';\nconst LEAVE_CLASSNAME = 'ng-leave';\nconst NG_TRIGGER_CLASSNAME = 'ng-trigger';\nconst NG_TRIGGER_SELECTOR = '.ng-trigger';\nconst NG_ANIMATING_CLASSNAME = 'ng-animating';\nconst NG_ANIMATING_SELECTOR = '.ng-animating';\nfunction resolveTimingValue(value) {\n  if (typeof value == 'number') return value;\n  const matches = value.match(/^(-?[\\.\\d]+)(m?s)/);\n  if (!matches || matches.length < 2) return 0;\n  return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\nfunction _convertTimeValueToMS(value, unit) {\n  switch (unit) {\n    case 's':\n      return value * ONE_SECOND;\n    default:\n      // ms or something else\n      return value;\n  }\n}\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n  return timings.hasOwnProperty('duration') ? timings : parseTimeExpression(timings, errors, allowNegativeValues);\n}\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n  const regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n  let duration;\n  let delay = 0;\n  let easing = '';\n  if (typeof exp === 'string') {\n    const matches = exp.match(regex);\n    if (matches === null) {\n      errors.push(invalidTimingValue(exp));\n      return {\n        duration: 0,\n        delay: 0,\n        easing: ''\n      };\n    }\n    duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n    const delayMatch = matches[3];\n    if (delayMatch != null) {\n      delay = _convertTimeValueToMS(parseFloat(delayMatch), matches[4]);\n    }\n    const easingVal = matches[5];\n    if (easingVal) {\n      easing = easingVal;\n    }\n  } else {\n    duration = exp;\n  }\n  if (!allowNegativeValues) {\n    let containsErrors = false;\n    let startIndex = errors.length;\n    if (duration < 0) {\n      errors.push(negativeStepValue());\n      containsErrors = true;\n    }\n    if (delay < 0) {\n      errors.push(negativeDelayValue());\n      containsErrors = true;\n    }\n    if (containsErrors) {\n      errors.splice(startIndex, 0, invalidTimingValue(exp));\n    }\n  }\n  return {\n    duration,\n    delay,\n    easing\n  };\n}\nfunction normalizeKeyframes(keyframes) {\n  if (!keyframes.length) {\n    return [];\n  }\n  if (keyframes[0] instanceof Map) {\n    return keyframes;\n  }\n  return keyframes.map(kf => new Map(Object.entries(kf)));\n}\nfunction normalizeStyles(styles) {\n  return Array.isArray(styles) ? new Map(...styles) : new Map(styles);\n}\nfunction setStyles(element, styles, formerStyles) {\n  styles.forEach((val, prop) => {\n    const camelProp = dashCaseToCamelCase(prop);\n    if (formerStyles && !formerStyles.has(prop)) {\n      formerStyles.set(prop, element.style[camelProp]);\n    }\n    element.style[camelProp] = val;\n  });\n}\nfunction eraseStyles(element, styles) {\n  styles.forEach((_, prop) => {\n    const camelProp = dashCaseToCamelCase(prop);\n    element.style[camelProp] = '';\n  });\n}\nfunction normalizeAnimationEntry(steps) {\n  if (Array.isArray(steps)) {\n    if (steps.length == 1) return steps[0];\n    return sequence(steps);\n  }\n  return steps;\n}\nfunction validateStyleParams(value, options, errors) {\n  const params = options.params || {};\n  const matches = extractStyleParams(value);\n  if (matches.length) {\n    matches.forEach(varName => {\n      if (!params.hasOwnProperty(varName)) {\n        errors.push(invalidStyleParams(varName));\n      }\n    });\n  }\n}\nconst PARAM_REGEX = new RegExp(`${SUBSTITUTION_EXPR_START}\\\\s*(.+?)\\\\s*${SUBSTITUTION_EXPR_END}`, 'g');\nfunction extractStyleParams(value) {\n  let params = [];\n  if (typeof value === 'string') {\n    let match;\n    while (match = PARAM_REGEX.exec(value)) {\n      params.push(match[1]);\n    }\n    PARAM_REGEX.lastIndex = 0;\n  }\n  return params;\n}\nfunction interpolateParams(value, params, errors) {\n  const original = `${value}`;\n  const str = original.replace(PARAM_REGEX, (_, varName) => {\n    let localVal = params[varName];\n    // this means that the value was never overridden by the data passed in by the user\n    if (localVal == null) {\n      errors.push(invalidParamValue(varName));\n      localVal = '';\n    }\n    return localVal.toString();\n  });\n  // we do this to assert that numeric values stay as they are\n  return str == original ? value : str;\n}\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\nfunction camelCaseToDashCase(input) {\n  return input.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nfunction allowPreviousPlayerStylesMerge(duration, delay) {\n  return duration === 0 || delay === 0;\n}\nfunction balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles) {\n  if (previousStyles.size && keyframes.length) {\n    let startingKeyframe = keyframes[0];\n    let missingStyleProps = [];\n    previousStyles.forEach((val, prop) => {\n      if (!startingKeyframe.has(prop)) {\n        missingStyleProps.push(prop);\n      }\n      startingKeyframe.set(prop, val);\n    });\n    if (missingStyleProps.length) {\n      for (let i = 1; i < keyframes.length; i++) {\n        let kf = keyframes[i];\n        missingStyleProps.forEach(prop => kf.set(prop, computeStyle(element, prop)));\n      }\n    }\n  }\n  return keyframes;\n}\nfunction visitDslNode(visitor, node, context) {\n  switch (node.type) {\n    case AnimationMetadataType.Trigger:\n      return visitor.visitTrigger(node, context);\n    case AnimationMetadataType.State:\n      return visitor.visitState(node, context);\n    case AnimationMetadataType.Transition:\n      return visitor.visitTransition(node, context);\n    case AnimationMetadataType.Sequence:\n      return visitor.visitSequence(node, context);\n    case AnimationMetadataType.Group:\n      return visitor.visitGroup(node, context);\n    case AnimationMetadataType.Animate:\n      return visitor.visitAnimate(node, context);\n    case AnimationMetadataType.Keyframes:\n      return visitor.visitKeyframes(node, context);\n    case AnimationMetadataType.Style:\n      return visitor.visitStyle(node, context);\n    case AnimationMetadataType.Reference:\n      return visitor.visitReference(node, context);\n    case AnimationMetadataType.AnimateChild:\n      return visitor.visitAnimateChild(node, context);\n    case AnimationMetadataType.AnimateRef:\n      return visitor.visitAnimateRef(node, context);\n    case AnimationMetadataType.Query:\n      return visitor.visitQuery(node, context);\n    case AnimationMetadataType.Stagger:\n      return visitor.visitStagger(node, context);\n    default:\n      throw invalidNodeType(node.type);\n  }\n}\nfunction computeStyle(element, prop) {\n  return window.getComputedStyle(element)[prop];\n}\nconst DIMENSIONAL_PROP_SET = new Set(['width', 'height', 'minWidth', 'minHeight', 'maxWidth', 'maxHeight', 'left', 'top', 'bottom', 'right', 'fontSize', 'outlineWidth', 'outlineOffset', 'paddingTop', 'paddingLeft', 'paddingBottom', 'paddingRight', 'marginTop', 'marginLeft', 'marginBottom', 'marginRight', 'borderRadius', 'borderWidth', 'borderTopWidth', 'borderLeftWidth', 'borderRightWidth', 'borderBottomWidth', 'textIndent', 'perspective']);\nclass WebAnimationsStyleNormalizer extends AnimationStyleNormalizer {\n  normalizePropertyName(propertyName, errors) {\n    return dashCaseToCamelCase(propertyName);\n  }\n  normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n    let unit = '';\n    const strVal = value.toString().trim();\n    if (DIMENSIONAL_PROP_SET.has(normalizedProperty) && value !== 0 && value !== '0') {\n      if (typeof value === 'number') {\n        unit = 'px';\n      } else {\n        const valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n          errors.push(invalidCssUnitValue(userProvidedProperty, value));\n        }\n      }\n    }\n    return strVal + unit;\n  }\n}\nfunction createListOfWarnings(warnings) {\n  const LINE_START = '\\n - ';\n  return `${LINE_START}${warnings.filter(Boolean).map(warning => warning).join(LINE_START)}`;\n}\nfunction warnValidation(warnings) {\n  (typeof ngDevMode === 'undefined' || ngDevMode) && console.warn(`animation validation warnings:${createListOfWarnings(warnings)}`);\n}\nfunction warnTriggerBuild(name, warnings) {\n  (typeof ngDevMode === 'undefined' || ngDevMode) && console.warn(`The animation trigger \"${name}\" has built with the following warnings:${createListOfWarnings(warnings)}`);\n}\nfunction warnRegister(warnings) {\n  (typeof ngDevMode === 'undefined' || ngDevMode) && console.warn(`Animation built with the following warnings:${createListOfWarnings(warnings)}`);\n}\nfunction triggerParsingWarnings(name, warnings) {\n  (typeof ngDevMode === 'undefined' || ngDevMode) && console.warn(`Animation parsing for the ${name} trigger presents the following warnings:${createListOfWarnings(warnings)}`);\n}\nfunction pushUnrecognizedPropertiesWarning(warnings, props) {\n  if (props.length) {\n    warnings.push(`The following provided properties are not recognized: ${props.join(', ')}`);\n  }\n}\nconst ANY_STATE = '*';\nfunction parseTransitionExpr(transitionValue, errors) {\n  const expressions = [];\n  if (typeof transitionValue == 'string') {\n    transitionValue.split(/\\s*,\\s*/).forEach(str => parseInnerTransitionStr(str, expressions, errors));\n  } else {\n    expressions.push(transitionValue);\n  }\n  return expressions;\n}\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n  if (eventStr[0] == ':') {\n    const result = parseAnimationAlias(eventStr, errors);\n    if (typeof result == 'function') {\n      expressions.push(result);\n      return;\n    }\n    eventStr = result;\n  }\n  const match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n  if (match == null || match.length < 4) {\n    errors.push(invalidExpression(eventStr));\n    return expressions;\n  }\n  const fromState = match[1];\n  const separator = match[2];\n  const toState = match[3];\n  expressions.push(makeLambdaFromStates(fromState, toState));\n  const isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n  if (separator[0] == '<' && !isFullAnyStateExpr) {\n    expressions.push(makeLambdaFromStates(toState, fromState));\n  }\n  return;\n}\nfunction parseAnimationAlias(alias, errors) {\n  switch (alias) {\n    case ':enter':\n      return 'void => *';\n    case ':leave':\n      return '* => void';\n    case ':increment':\n      return (fromState, toState) => parseFloat(toState) > parseFloat(fromState);\n    case ':decrement':\n      return (fromState, toState) => parseFloat(toState) < parseFloat(fromState);\n    default:\n      errors.push(invalidTransitionAlias(alias));\n      return '* => *';\n  }\n}\n// DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\nconst TRUE_BOOLEAN_VALUES = new Set(['true', '1']);\nconst FALSE_BOOLEAN_VALUES = new Set(['false', '0']);\nfunction makeLambdaFromStates(lhs, rhs) {\n  const LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n  const RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n  return (fromState, toState) => {\n    let lhsMatch = lhs == ANY_STATE || lhs == fromState;\n    let rhsMatch = rhs == ANY_STATE || rhs == toState;\n    if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n      lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n    }\n    if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n      rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n    }\n    return lhsMatch && rhsMatch;\n  };\n}\nconst SELF_TOKEN = ':self';\nconst SELF_TOKEN_REGEX = new RegExp(`s*${SELF_TOKEN}s*,?`, 'g');\n/*\n * [Validation]\n * The visitor code below will traverse the animation AST generated by the animation verb functions\n * (the output is a tree of objects) and attempt to perform a series of validations on the data. The\n * following corner-cases will be validated:\n *\n * 1. Overlap of animations\n * Given that a CSS property cannot be animated in more than one place at the same time, it's\n * important that this behavior is detected and validated. The way in which this occurs is that\n * each time a style property is examined, a string-map containing the property will be updated with\n * the start and end times for when the property is used within an animation step.\n *\n * If there are two or more parallel animations that are currently running (these are invoked by the\n * group()) on the same element then the validator will throw an error. Since the start/end timing\n * values are collected for each property then if the current animation step is animating the same\n * property and its timing values fall anywhere into the window of time that the property is\n * currently being animated within then this is what causes an error.\n *\n * 2. Timing values\n * The validator will validate to see if a timing value of `duration delay easing` or\n * `durationNumber` is valid or not.\n *\n * (note that upon validation the code below will replace the timing data with an object containing\n * {duration,delay,easing}.\n *\n * 3. Offset Validation\n * Each of the style() calls are allowed to have an offset value when placed inside of keyframes().\n * Offsets within keyframes() are considered valid when:\n *\n *   - No offsets are used at all\n *   - Each style() entry contains an offset value\n *   - Each offset is between 0 and 1\n *   - Each offset is greater to or equal than the previous one\n *\n * Otherwise an error will be thrown.\n */\nfunction buildAnimationAst(driver, metadata, errors, warnings) {\n  return new AnimationAstBuilderVisitor(driver).build(metadata, errors, warnings);\n}\nconst ROOT_SELECTOR = '';\nclass AnimationAstBuilderVisitor {\n  constructor(_driver) {\n    this._driver = _driver;\n  }\n  build(metadata, errors, warnings) {\n    const context = new AnimationAstBuilderContext(errors);\n    this._resetContextStyleTimingState(context);\n    const ast = visitDslNode(this, normalizeAnimationEntry(metadata), context);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (context.unsupportedCSSPropertiesFound.size) {\n        pushUnrecognizedPropertiesWarning(warnings, [...context.unsupportedCSSPropertiesFound.keys()]);\n      }\n    }\n    return ast;\n  }\n  _resetContextStyleTimingState(context) {\n    context.currentQuerySelector = ROOT_SELECTOR;\n    context.collectedStyles = new Map();\n    context.collectedStyles.set(ROOT_SELECTOR, new Map());\n    context.currentTime = 0;\n  }\n  visitTrigger(metadata, context) {\n    let queryCount = context.queryCount = 0;\n    let depCount = context.depCount = 0;\n    const states = [];\n    const transitions = [];\n    if (metadata.name.charAt(0) == '@') {\n      context.errors.push(invalidTrigger());\n    }\n    metadata.definitions.forEach(def => {\n      this._resetContextStyleTimingState(context);\n      if (def.type == AnimationMetadataType.State) {\n        const stateDef = def;\n        const name = stateDef.name;\n        name.toString().split(/\\s*,\\s*/).forEach(n => {\n          stateDef.name = n;\n          states.push(this.visitState(stateDef, context));\n        });\n        stateDef.name = name;\n      } else if (def.type == AnimationMetadataType.Transition) {\n        const transition = this.visitTransition(def, context);\n        queryCount += transition.queryCount;\n        depCount += transition.depCount;\n        transitions.push(transition);\n      } else {\n        context.errors.push(invalidDefinition());\n      }\n    });\n    return {\n      type: AnimationMetadataType.Trigger,\n      name: metadata.name,\n      states,\n      transitions,\n      queryCount,\n      depCount,\n      options: null\n    };\n  }\n  visitState(metadata, context) {\n    const styleAst = this.visitStyle(metadata.styles, context);\n    const astParams = metadata.options && metadata.options.params || null;\n    if (styleAst.containsDynamicStyles) {\n      const missingSubs = new Set();\n      const params = astParams || {};\n      styleAst.styles.forEach(style => {\n        if (style instanceof Map) {\n          style.forEach(value => {\n            extractStyleParams(value).forEach(sub => {\n              if (!params.hasOwnProperty(sub)) {\n                missingSubs.add(sub);\n              }\n            });\n          });\n        }\n      });\n      if (missingSubs.size) {\n        context.errors.push(invalidState(metadata.name, [...missingSubs.values()]));\n      }\n    }\n    return {\n      type: AnimationMetadataType.State,\n      name: metadata.name,\n      style: styleAst,\n      options: astParams ? {\n        params: astParams\n      } : null\n    };\n  }\n  visitTransition(metadata, context) {\n    context.queryCount = 0;\n    context.depCount = 0;\n    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n    const matchers = parseTransitionExpr(metadata.expr, context.errors);\n    return {\n      type: AnimationMetadataType.Transition,\n      matchers,\n      animation,\n      queryCount: context.queryCount,\n      depCount: context.depCount,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n  visitSequence(metadata, context) {\n    return {\n      type: AnimationMetadataType.Sequence,\n      steps: metadata.steps.map(s => visitDslNode(this, s, context)),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n  visitGroup(metadata, context) {\n    const currentTime = context.currentTime;\n    let furthestTime = 0;\n    const steps = metadata.steps.map(step => {\n      context.currentTime = currentTime;\n      const innerAst = visitDslNode(this, step, context);\n      furthestTime = Math.max(furthestTime, context.currentTime);\n      return innerAst;\n    });\n    context.currentTime = furthestTime;\n    return {\n      type: AnimationMetadataType.Group,\n      steps,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n  visitAnimate(metadata, context) {\n    const timingAst = constructTimingAst(metadata.timings, context.errors);\n    context.currentAnimateTimings = timingAst;\n    let styleAst;\n    let styleMetadata = metadata.styles ? metadata.styles : style({});\n    if (styleMetadata.type == AnimationMetadataType.Keyframes) {\n      styleAst = this.visitKeyframes(styleMetadata, context);\n    } else {\n      let styleMetadata = metadata.styles;\n      let isEmpty = false;\n      if (!styleMetadata) {\n        isEmpty = true;\n        const newStyleData = {};\n        if (timingAst.easing) {\n          newStyleData['easing'] = timingAst.easing;\n        }\n        styleMetadata = style(newStyleData);\n      }\n      context.currentTime += timingAst.duration + timingAst.delay;\n      const _styleAst = this.visitStyle(styleMetadata, context);\n      _styleAst.isEmptyStep = isEmpty;\n      styleAst = _styleAst;\n    }\n    context.currentAnimateTimings = null;\n    return {\n      type: AnimationMetadataType.Animate,\n      timings: timingAst,\n      style: styleAst,\n      options: null\n    };\n  }\n  visitStyle(metadata, context) {\n    const ast = this._makeStyleAst(metadata, context);\n    this._validateStyleAst(ast, context);\n    return ast;\n  }\n  _makeStyleAst(metadata, context) {\n    const styles = [];\n    const metadataStyles = Array.isArray(metadata.styles) ? metadata.styles : [metadata.styles];\n    for (let styleTuple of metadataStyles) {\n      if (typeof styleTuple === 'string') {\n        if (styleTuple === AUTO_STYLE) {\n          styles.push(styleTuple);\n        } else {\n          context.errors.push(invalidStyleValue(styleTuple));\n        }\n      } else {\n        styles.push(new Map(Object.entries(styleTuple)));\n      }\n    }\n    let containsDynamicStyles = false;\n    let collectedEasing = null;\n    styles.forEach(styleData => {\n      if (styleData instanceof Map) {\n        if (styleData.has('easing')) {\n          collectedEasing = styleData.get('easing');\n          styleData.delete('easing');\n        }\n        if (!containsDynamicStyles) {\n          for (let value of styleData.values()) {\n            if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n              containsDynamicStyles = true;\n              break;\n            }\n          }\n        }\n      }\n    });\n    return {\n      type: AnimationMetadataType.Style,\n      styles,\n      easing: collectedEasing,\n      offset: metadata.offset,\n      containsDynamicStyles,\n      options: null\n    };\n  }\n  _validateStyleAst(ast, context) {\n    const timings = context.currentAnimateTimings;\n    let endTime = context.currentTime;\n    let startTime = context.currentTime;\n    if (timings && startTime > 0) {\n      startTime -= timings.duration + timings.delay;\n    }\n    ast.styles.forEach(tuple => {\n      if (typeof tuple === 'string') return;\n      tuple.forEach((value, prop) => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          if (!this._driver.validateStyleProperty(prop)) {\n            tuple.delete(prop);\n            context.unsupportedCSSPropertiesFound.add(prop);\n            return;\n          }\n        }\n        // This is guaranteed to have a defined Map at this querySelector location making it\n        // safe to add the assertion here. It is set as a default empty map in prior methods.\n        const collectedStyles = context.collectedStyles.get(context.currentQuerySelector);\n        const collectedEntry = collectedStyles.get(prop);\n        let updateCollectedStyle = true;\n        if (collectedEntry) {\n          if (startTime != endTime && startTime >= collectedEntry.startTime && endTime <= collectedEntry.endTime) {\n            context.errors.push(invalidParallelAnimation(prop, collectedEntry.startTime, collectedEntry.endTime, startTime, endTime));\n            updateCollectedStyle = false;\n          }\n          // we always choose the smaller start time value since we\n          // want to have a record of the entire animation window where\n          // the style property is being animated in between\n          startTime = collectedEntry.startTime;\n        }\n        if (updateCollectedStyle) {\n          collectedStyles.set(prop, {\n            startTime,\n            endTime\n          });\n        }\n        if (context.options) {\n          validateStyleParams(value, context.options, context.errors);\n        }\n      });\n    });\n  }\n  visitKeyframes(metadata, context) {\n    const ast = {\n      type: AnimationMetadataType.Keyframes,\n      styles: [],\n      options: null\n    };\n    if (!context.currentAnimateTimings) {\n      context.errors.push(invalidKeyframes());\n      return ast;\n    }\n    const MAX_KEYFRAME_OFFSET = 1;\n    let totalKeyframesWithOffsets = 0;\n    const offsets = [];\n    let offsetsOutOfOrder = false;\n    let keyframesOutOfRange = false;\n    let previousOffset = 0;\n    const keyframes = metadata.steps.map(styles => {\n      const style = this._makeStyleAst(styles, context);\n      let offsetVal = style.offset != null ? style.offset : consumeOffset(style.styles);\n      let offset = 0;\n      if (offsetVal != null) {\n        totalKeyframesWithOffsets++;\n        offset = style.offset = offsetVal;\n      }\n      keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n      offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n      previousOffset = offset;\n      offsets.push(offset);\n      return style;\n    });\n    if (keyframesOutOfRange) {\n      context.errors.push(invalidOffset());\n    }\n    if (offsetsOutOfOrder) {\n      context.errors.push(keyframeOffsetsOutOfOrder());\n    }\n    const length = metadata.steps.length;\n    let generatedOffset = 0;\n    if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n      context.errors.push(keyframesMissingOffsets());\n    } else if (totalKeyframesWithOffsets == 0) {\n      generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n    }\n    const limit = length - 1;\n    const currentTime = context.currentTime;\n    const currentAnimateTimings = context.currentAnimateTimings;\n    const animateDuration = currentAnimateTimings.duration;\n    keyframes.forEach((kf, i) => {\n      const offset = generatedOffset > 0 ? i == limit ? 1 : generatedOffset * i : offsets[i];\n      const durationUpToThisFrame = offset * animateDuration;\n      context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n      currentAnimateTimings.duration = durationUpToThisFrame;\n      this._validateStyleAst(kf, context);\n      kf.offset = offset;\n      ast.styles.push(kf);\n    });\n    return ast;\n  }\n  visitReference(metadata, context) {\n    return {\n      type: AnimationMetadataType.Reference,\n      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n  visitAnimateChild(metadata, context) {\n    context.depCount++;\n    return {\n      type: AnimationMetadataType.AnimateChild,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n  visitAnimateRef(metadata, context) {\n    return {\n      type: AnimationMetadataType.AnimateRef,\n      animation: this.visitReference(metadata.animation, context),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n  visitQuery(metadata, context) {\n    const parentSelector = context.currentQuerySelector;\n    const options = metadata.options || {};\n    context.queryCount++;\n    context.currentQuery = metadata;\n    const [selector, includeSelf] = normalizeSelector(metadata.selector);\n    context.currentQuerySelector = parentSelector.length ? parentSelector + ' ' + selector : selector;\n    getOrSetDefaultValue(context.collectedStyles, context.currentQuerySelector, new Map());\n    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n    context.currentQuery = null;\n    context.currentQuerySelector = parentSelector;\n    return {\n      type: AnimationMetadataType.Query,\n      selector,\n      limit: options.limit || 0,\n      optional: !!options.optional,\n      includeSelf,\n      animation,\n      originalSelector: metadata.selector,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n  visitStagger(metadata, context) {\n    if (!context.currentQuery) {\n      context.errors.push(invalidStagger());\n    }\n    const timings = metadata.timings === 'full' ? {\n      duration: 0,\n      delay: 0,\n      easing: 'full'\n    } : resolveTiming(metadata.timings, context.errors, true);\n    return {\n      type: AnimationMetadataType.Stagger,\n      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n      timings,\n      options: null\n    };\n  }\n}\nfunction normalizeSelector(selector) {\n  const hasAmpersand = selector.split(/\\s*,\\s*/).find(token => token == SELF_TOKEN) ? true : false;\n  if (hasAmpersand) {\n    selector = selector.replace(SELF_TOKEN_REGEX, '');\n  }\n  // Note: the :enter and :leave aren't normalized here since those\n  // selectors are filled in at runtime during timeline building\n  selector = selector.replace(/@\\*/g, NG_TRIGGER_SELECTOR).replace(/@\\w+/g, match => NG_TRIGGER_SELECTOR + '-' + match.slice(1)).replace(/:animating/g, NG_ANIMATING_SELECTOR);\n  return [selector, hasAmpersand];\n}\nfunction normalizeParams(obj) {\n  return obj ? {\n    ...obj\n  } : null;\n}\nclass AnimationAstBuilderContext {\n  constructor(errors) {\n    this.errors = errors;\n    this.queryCount = 0;\n    this.depCount = 0;\n    this.currentTransition = null;\n    this.currentQuery = null;\n    this.currentQuerySelector = null;\n    this.currentAnimateTimings = null;\n    this.currentTime = 0;\n    this.collectedStyles = new Map();\n    this.options = null;\n    this.unsupportedCSSPropertiesFound = new Set();\n  }\n}\nfunction consumeOffset(styles) {\n  if (typeof styles == 'string') return null;\n  let offset = null;\n  if (Array.isArray(styles)) {\n    styles.forEach(styleTuple => {\n      if (styleTuple instanceof Map && styleTuple.has('offset')) {\n        const obj = styleTuple;\n        offset = parseFloat(obj.get('offset'));\n        obj.delete('offset');\n      }\n    });\n  } else if (styles instanceof Map && styles.has('offset')) {\n    const obj = styles;\n    offset = parseFloat(obj.get('offset'));\n    obj.delete('offset');\n  }\n  return offset;\n}\nfunction constructTimingAst(value, errors) {\n  if (value.hasOwnProperty('duration')) {\n    return value;\n  }\n  if (typeof value == 'number') {\n    const duration = resolveTiming(value, errors).duration;\n    return makeTimingAst(duration, 0, '');\n  }\n  const strValue = value;\n  const isDynamic = strValue.split(/\\s+/).some(v => v.charAt(0) == '{' && v.charAt(1) == '{');\n  if (isDynamic) {\n    const ast = makeTimingAst(0, 0, '');\n    ast.dynamic = true;\n    ast.strValue = strValue;\n    return ast;\n  }\n  const timings = resolveTiming(strValue, errors);\n  return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\nfunction normalizeAnimationOptions(options) {\n  if (options) {\n    options = {\n      ...options\n    };\n    if (options['params']) {\n      options['params'] = normalizeParams(options['params']);\n    }\n  } else {\n    options = {};\n  }\n  return options;\n}\nfunction makeTimingAst(duration, delay, easing) {\n  return {\n    duration,\n    delay,\n    easing\n  };\n}\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing = null, subTimeline = false) {\n  return {\n    type: 1 /* AnimationTransitionInstructionType.TimelineAnimation */,\n    element,\n    keyframes,\n    preStyleProps,\n    postStyleProps,\n    duration,\n    delay,\n    totalTime: duration + delay,\n    easing,\n    subTimeline\n  };\n}\nclass ElementInstructionMap {\n  constructor() {\n    this._map = new Map();\n  }\n  get(element) {\n    return this._map.get(element) || [];\n  }\n  append(element, instructions) {\n    let existingInstructions = this._map.get(element);\n    if (!existingInstructions) {\n      this._map.set(element, existingInstructions = []);\n    }\n    existingInstructions.push(...instructions);\n  }\n  has(element) {\n    return this._map.has(element);\n  }\n  clear() {\n    this._map.clear();\n  }\n}\nconst ONE_FRAME_IN_MILLISECONDS = 1;\nconst ENTER_TOKEN = ':enter';\nconst ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nconst LEAVE_TOKEN = ':leave';\nconst LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\n/*\n * The code within this file aims to generate web-animations-compatible keyframes from Angular's\n * animation DSL code.\n *\n * The code below will be converted from:\n *\n * ```\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(1000, style({ opacity: 0 }))\n * ])\n * ```\n *\n * To:\n * ```\n * keyframes = [{ opacity: 0, offset: 0 }, { opacity: 1, offset: 1 }]\n * duration = 1000\n * delay = 0\n * easing = ''\n * ```\n *\n * For this operation to cover the combination of animation verbs (style, animate, group, etc...) a\n * combination of AST traversal and merge-sort-like algorithms are used.\n *\n * [AST Traversal]\n * Each of the animation verbs, when executed, will return an string-map object representing what\n * type of action it is (style, animate, group, etc...) and the data associated with it. This means\n * that when functional composition mix of these functions is evaluated (like in the example above)\n * then it will end up producing a tree of objects representing the animation itself.\n *\n * When this animation object tree is processed by the visitor code below it will visit each of the\n * verb statements within the visitor. And during each visit it will build the context of the\n * animation keyframes by interacting with the `TimelineBuilder`.\n *\n * [TimelineBuilder]\n * This class is responsible for tracking the styles and building a series of keyframe objects for a\n * timeline between a start and end time. The builder starts off with an initial timeline and each\n * time the AST comes across a `group()`, `keyframes()` or a combination of the two within a\n * `sequence()` then it will generate a sub timeline for each step as well as a new one after\n * they are complete.\n *\n * As the AST is traversed, the timing state on each of the timelines will be incremented. If a sub\n * timeline was created (based on one of the cases above) then the parent timeline will attempt to\n * merge the styles used within the sub timelines into itself (only with group() this will happen).\n * This happens with a merge operation (much like how the merge works in mergeSort) and it will only\n * copy the most recently used styles from the sub timelines into the parent timeline. This ensures\n * that if the styles are used later on in another phase of the animation then they will be the most\n * up-to-date values.\n *\n * [How Missing Styles Are Updated]\n * Each timeline has a `backFill` property which is responsible for filling in new styles into\n * already processed keyframes if a new style shows up later within the animation sequence.\n *\n * ```\n * sequence([\n *   style({ width: 0 }),\n *   animate(1000, style({ width: 100 })),\n *   animate(1000, style({ width: 200 })),\n *   animate(1000, style({ width: 300 }))\n *   animate(1000, style({ width: 400, height: 400 })) // notice how `height` doesn't exist anywhere\n * else\n * ])\n * ```\n *\n * What is happening here is that the `height` value is added later in the sequence, but is missing\n * from all previous animation steps. Therefore when a keyframe is created it would also be missing\n * from all previous keyframes up until where it is first used. For the timeline keyframe generation\n * to properly fill in the style it will place the previous value (the value from the parent\n * timeline) or a default value of `*` into the backFill map.\n *\n * When a sub-timeline is created it will have its own backFill property. This is done so that\n * styles present within the sub-timeline do not accidentally seep into the previous/future timeline\n * keyframes\n *\n * [Validation]\n * The code in this file is not responsible for validation. That functionality happens with within\n * the `AnimationValidatorVisitor` code.\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles = new Map(), finalStyles = new Map(), options, subInstructions, errors = []) {\n  return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);\n}\nclass AnimationTimelineBuilderVisitor {\n  buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors = []) {\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n    context.options = options;\n    const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n    context.currentTimeline.delayNextStep(delay);\n    context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n    visitDslNode(this, ast, context);\n    // this checks to see if an actual animation happened\n    const timelines = context.timelines.filter(timeline => timeline.containsAnimation());\n    // note: we just want to apply the final styles for the rootElement, so we do not\n    //       just apply the styles to the last timeline but the last timeline which\n    //       element is the root one (basically `*`-styles are replaced with the actual\n    //       state style values only for the root element)\n    if (timelines.length && finalStyles.size) {\n      let lastRootTimeline;\n      for (let i = timelines.length - 1; i >= 0; i--) {\n        const timeline = timelines[i];\n        if (timeline.element === rootElement) {\n          lastRootTimeline = timeline;\n          break;\n        }\n      }\n      if (lastRootTimeline && !lastRootTimeline.allowOnlyTimelineStyles()) {\n        lastRootTimeline.setStyles([finalStyles], null, context.errors, options);\n      }\n    }\n    return timelines.length ? timelines.map(timeline => timeline.buildKeyframes()) : [createTimelineInstruction(rootElement, [], [], [], 0, delay, '', false)];\n  }\n  visitTrigger(ast, context) {\n    // these values are not visited in this AST\n  }\n  visitState(ast, context) {\n    // these values are not visited in this AST\n  }\n  visitTransition(ast, context) {\n    // these values are not visited in this AST\n  }\n  visitAnimateChild(ast, context) {\n    const elementInstructions = context.subInstructions.get(context.element);\n    if (elementInstructions) {\n      const innerContext = context.createSubContext(ast.options);\n      const startTime = context.currentTimeline.currentTime;\n      const endTime = this._visitSubInstructions(elementInstructions, innerContext, innerContext.options);\n      if (startTime != endTime) {\n        // we do this on the upper context because we created a sub context for\n        // the sub child animations\n        context.transformIntoNewTimeline(endTime);\n      }\n    }\n    context.previousNode = ast;\n  }\n  visitAnimateRef(ast, context) {\n    const innerContext = context.createSubContext(ast.options);\n    innerContext.transformIntoNewTimeline();\n    this._applyAnimationRefDelays([ast.options, ast.animation.options], context, innerContext);\n    this.visitReference(ast.animation, innerContext);\n    context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n    context.previousNode = ast;\n  }\n  _applyAnimationRefDelays(animationsRefsOptions, context, innerContext) {\n    for (const animationRefOptions of animationsRefsOptions) {\n      const animationDelay = animationRefOptions?.delay;\n      if (animationDelay) {\n        const animationDelayValue = typeof animationDelay === 'number' ? animationDelay : resolveTimingValue(interpolateParams(animationDelay, animationRefOptions?.params ?? {}, context.errors));\n        innerContext.delayNextStep(animationDelayValue);\n      }\n    }\n  }\n  _visitSubInstructions(instructions, context, options) {\n    const startTime = context.currentTimeline.currentTime;\n    let furthestTime = startTime;\n    // this is a special-case for when a user wants to skip a sub\n    // animation from being fired entirely.\n    const duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n    const delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n    if (duration !== 0) {\n      instructions.forEach(instruction => {\n        const instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n        furthestTime = Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n      });\n    }\n    return furthestTime;\n  }\n  visitReference(ast, context) {\n    context.updateOptions(ast.options, true);\n    visitDslNode(this, ast.animation, context);\n    context.previousNode = ast;\n  }\n  visitSequence(ast, context) {\n    const subContextCount = context.subContextCount;\n    let ctx = context;\n    const options = ast.options;\n    if (options && (options.params || options.delay)) {\n      ctx = context.createSubContext(options);\n      ctx.transformIntoNewTimeline();\n      if (options.delay != null) {\n        if (ctx.previousNode.type == AnimationMetadataType.Style) {\n          ctx.currentTimeline.snapshotCurrentStyles();\n          ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        const delay = resolveTimingValue(options.delay);\n        ctx.delayNextStep(delay);\n      }\n    }\n    if (ast.steps.length) {\n      ast.steps.forEach(s => visitDslNode(this, s, ctx));\n      // this is here just in case the inner steps only contain or end with a style() call\n      ctx.currentTimeline.applyStylesToKeyframe();\n      // this means that some animation function within the sequence\n      // ended up creating a sub timeline (which means the current\n      // timeline cannot overlap with the contents of the sequence)\n      if (ctx.subContextCount > subContextCount) {\n        ctx.transformIntoNewTimeline();\n      }\n    }\n    context.previousNode = ast;\n  }\n  visitGroup(ast, context) {\n    const innerTimelines = [];\n    let furthestTime = context.currentTimeline.currentTime;\n    const delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n    ast.steps.forEach(s => {\n      const innerContext = context.createSubContext(ast.options);\n      if (delay) {\n        innerContext.delayNextStep(delay);\n      }\n      visitDslNode(this, s, innerContext);\n      furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n      innerTimelines.push(innerContext.currentTimeline);\n    });\n    // this operation is run after the AST loop because otherwise\n    // if the parent timeline's collected styles were updated then\n    // it would pass in invalid data into the new-to-be forked items\n    innerTimelines.forEach(timeline => context.currentTimeline.mergeTimelineCollectedStyles(timeline));\n    context.transformIntoNewTimeline(furthestTime);\n    context.previousNode = ast;\n  }\n  _visitTiming(ast, context) {\n    if (ast.dynamic) {\n      const strValue = ast.strValue;\n      const timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n      return resolveTiming(timingValue, context.errors);\n    } else {\n      return {\n        duration: ast.duration,\n        delay: ast.delay,\n        easing: ast.easing\n      };\n    }\n  }\n  visitAnimate(ast, context) {\n    const timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n    const timeline = context.currentTimeline;\n    if (timings.delay) {\n      context.incrementTime(timings.delay);\n      timeline.snapshotCurrentStyles();\n    }\n    const style = ast.style;\n    if (style.type == AnimationMetadataType.Keyframes) {\n      this.visitKeyframes(style, context);\n    } else {\n      context.incrementTime(timings.duration);\n      this.visitStyle(style, context);\n      timeline.applyStylesToKeyframe();\n    }\n    context.currentAnimateTimings = null;\n    context.previousNode = ast;\n  }\n  visitStyle(ast, context) {\n    const timeline = context.currentTimeline;\n    const timings = context.currentAnimateTimings;\n    // this is a special case for when a style() call\n    // directly follows  an animate() call (but not inside of an animate() call)\n    if (!timings && timeline.hasCurrentStyleProperties()) {\n      timeline.forwardFrame();\n    }\n    const easing = timings && timings.easing || ast.easing;\n    if (ast.isEmptyStep) {\n      timeline.applyEmptyStep(easing);\n    } else {\n      timeline.setStyles(ast.styles, easing, context.errors, context.options);\n    }\n    context.previousNode = ast;\n  }\n  visitKeyframes(ast, context) {\n    const currentAnimateTimings = context.currentAnimateTimings;\n    const startTime = context.currentTimeline.duration;\n    const duration = currentAnimateTimings.duration;\n    const innerContext = context.createSubContext();\n    const innerTimeline = innerContext.currentTimeline;\n    innerTimeline.easing = currentAnimateTimings.easing;\n    ast.styles.forEach(step => {\n      const offset = step.offset || 0;\n      innerTimeline.forwardTime(offset * duration);\n      innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n      innerTimeline.applyStylesToKeyframe();\n    });\n    // this will ensure that the parent timeline gets all the styles from\n    // the child even if the new timeline below is not used\n    context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n    // we do this because the window between this timeline and the sub timeline\n    // should ensure that the styles within are exactly the same as they were before\n    context.transformIntoNewTimeline(startTime + duration);\n    context.previousNode = ast;\n  }\n  visitQuery(ast, context) {\n    // in the event that the first step before this is a style step we need\n    // to ensure the styles are applied before the children are animated\n    const startTime = context.currentTimeline.currentTime;\n    const options = ast.options || {};\n    const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n    if (delay && (context.previousNode.type === AnimationMetadataType.Style || startTime == 0 && context.currentTimeline.hasCurrentStyleProperties())) {\n      context.currentTimeline.snapshotCurrentStyles();\n      context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    }\n    let furthestTime = startTime;\n    const elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n    context.currentQueryTotal = elms.length;\n    let sameElementTimeline = null;\n    elms.forEach((element, i) => {\n      context.currentQueryIndex = i;\n      const innerContext = context.createSubContext(ast.options, element);\n      if (delay) {\n        innerContext.delayNextStep(delay);\n      }\n      if (element === context.element) {\n        sameElementTimeline = innerContext.currentTimeline;\n      }\n      visitDslNode(this, ast.animation, innerContext);\n      // this is here just incase the inner steps only contain or end\n      // with a style() call (which is here to signal that this is a preparatory\n      // call to style an element before it is animated again)\n      innerContext.currentTimeline.applyStylesToKeyframe();\n      const endTime = innerContext.currentTimeline.currentTime;\n      furthestTime = Math.max(furthestTime, endTime);\n    });\n    context.currentQueryIndex = 0;\n    context.currentQueryTotal = 0;\n    context.transformIntoNewTimeline(furthestTime);\n    if (sameElementTimeline) {\n      context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n    context.previousNode = ast;\n  }\n  visitStagger(ast, context) {\n    const parentContext = context.parentContext;\n    const tl = context.currentTimeline;\n    const timings = ast.timings;\n    const duration = Math.abs(timings.duration);\n    const maxTime = duration * (context.currentQueryTotal - 1);\n    let delay = duration * context.currentQueryIndex;\n    let staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n    switch (staggerTransformer) {\n      case 'reverse':\n        delay = maxTime - delay;\n        break;\n      case 'full':\n        delay = parentContext.currentStaggerTime;\n        break;\n    }\n    const timeline = context.currentTimeline;\n    if (delay) {\n      timeline.delayNextStep(delay);\n    }\n    const startingTime = timeline.currentTime;\n    visitDslNode(this, ast.animation, context);\n    context.previousNode = ast;\n    // time = duration + delay\n    // the reason why this computation is so complex is because\n    // the inner timeline may either have a delay value or a stretched\n    // keyframe depending on if a subtimeline is not used or is used.\n    parentContext.currentStaggerTime = tl.currentTime - startingTime + (tl.startTime - parentContext.currentTimeline.startTime);\n  }\n}\nconst DEFAULT_NOOP_PREVIOUS_NODE = {};\nclass AnimationTimelineContext {\n  constructor(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {\n    this._driver = _driver;\n    this.element = element;\n    this.subInstructions = subInstructions;\n    this._enterClassName = _enterClassName;\n    this._leaveClassName = _leaveClassName;\n    this.errors = errors;\n    this.timelines = timelines;\n    this.parentContext = null;\n    this.currentAnimateTimings = null;\n    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    this.subContextCount = 0;\n    this.options = {};\n    this.currentQueryIndex = 0;\n    this.currentQueryTotal = 0;\n    this.currentStaggerTime = 0;\n    this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n    timelines.push(this.currentTimeline);\n  }\n  get params() {\n    return this.options.params;\n  }\n  updateOptions(options, skipIfExists) {\n    if (!options) return;\n    const newOptions = options;\n    let optionsToUpdate = this.options;\n    // NOTE: this will get patched up when other animation methods support duration overrides\n    if (newOptions.duration != null) {\n      optionsToUpdate.duration = resolveTimingValue(newOptions.duration);\n    }\n    if (newOptions.delay != null) {\n      optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n    }\n    const newParams = newOptions.params;\n    if (newParams) {\n      let paramsToUpdate = optionsToUpdate.params;\n      if (!paramsToUpdate) {\n        paramsToUpdate = this.options.params = {};\n      }\n      Object.keys(newParams).forEach(name => {\n        if (!skipIfExists || !paramsToUpdate.hasOwnProperty(name)) {\n          paramsToUpdate[name] = interpolateParams(newParams[name], paramsToUpdate, this.errors);\n        }\n      });\n    }\n  }\n  _copyOptions() {\n    const options = {};\n    if (this.options) {\n      const oldParams = this.options.params;\n      if (oldParams) {\n        const params = options['params'] = {};\n        Object.keys(oldParams).forEach(name => {\n          params[name] = oldParams[name];\n        });\n      }\n    }\n    return options;\n  }\n  createSubContext(options = null, element, newTime) {\n    const target = element || this.element;\n    const context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n    context.previousNode = this.previousNode;\n    context.currentAnimateTimings = this.currentAnimateTimings;\n    context.options = this._copyOptions();\n    context.updateOptions(options);\n    context.currentQueryIndex = this.currentQueryIndex;\n    context.currentQueryTotal = this.currentQueryTotal;\n    context.parentContext = this;\n    this.subContextCount++;\n    return context;\n  }\n  transformIntoNewTimeline(newTime) {\n    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n    this.timelines.push(this.currentTimeline);\n    return this.currentTimeline;\n  }\n  appendInstructionToTimeline(instruction, duration, delay) {\n    const updatedTimings = {\n      duration: duration != null ? duration : instruction.duration,\n      delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n      easing: ''\n    };\n    const builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n    this.timelines.push(builder);\n    return updatedTimings;\n  }\n  incrementTime(time) {\n    this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n  }\n  delayNextStep(delay) {\n    // negative delays are not yet supported\n    if (delay > 0) {\n      this.currentTimeline.delayNextStep(delay);\n    }\n  }\n  invokeQuery(selector, originalSelector, limit, includeSelf, optional, errors) {\n    let results = [];\n    if (includeSelf) {\n      results.push(this.element);\n    }\n    if (selector.length > 0) {\n      // only if :self is used then the selector can be empty\n      selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n      selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n      const multi = limit != 1;\n      let elements = this._driver.query(this.element, selector, multi);\n      if (limit !== 0) {\n        elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) : elements.slice(0, limit);\n      }\n      results.push(...elements);\n    }\n    if (!optional && results.length == 0) {\n      errors.push(invalidQuery(originalSelector));\n    }\n    return results;\n  }\n}\nclass TimelineBuilder {\n  constructor(_driver, element, startTime, _elementTimelineStylesLookup) {\n    this._driver = _driver;\n    this.element = element;\n    this.startTime = startTime;\n    this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n    this.duration = 0;\n    this.easing = null;\n    this._previousKeyframe = new Map();\n    this._currentKeyframe = new Map();\n    this._keyframes = new Map();\n    this._styleSummary = new Map();\n    this._localTimelineStyles = new Map();\n    this._pendingStyles = new Map();\n    this._backFill = new Map();\n    this._currentEmptyStepKeyframe = null;\n    if (!this._elementTimelineStylesLookup) {\n      this._elementTimelineStylesLookup = new Map();\n    }\n    this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n    if (!this._globalTimelineStyles) {\n      this._globalTimelineStyles = this._localTimelineStyles;\n      this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n    }\n    this._loadKeyframe();\n  }\n  containsAnimation() {\n    switch (this._keyframes.size) {\n      case 0:\n        return false;\n      case 1:\n        return this.hasCurrentStyleProperties();\n      default:\n        return true;\n    }\n  }\n  hasCurrentStyleProperties() {\n    return this._currentKeyframe.size > 0;\n  }\n  get currentTime() {\n    return this.startTime + this.duration;\n  }\n  delayNextStep(delay) {\n    // in the event that a style() step is placed right before a stagger()\n    // and that style() step is the very first style() value in the animation\n    // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n    // properly applies the style() values to work with the stagger...\n    const hasPreStyleStep = this._keyframes.size === 1 && this._pendingStyles.size;\n    if (this.duration || hasPreStyleStep) {\n      this.forwardTime(this.currentTime + delay);\n      if (hasPreStyleStep) {\n        this.snapshotCurrentStyles();\n      }\n    } else {\n      this.startTime += delay;\n    }\n  }\n  fork(element, currentTime) {\n    this.applyStylesToKeyframe();\n    return new TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n  }\n  _loadKeyframe() {\n    if (this._currentKeyframe) {\n      this._previousKeyframe = this._currentKeyframe;\n    }\n    this._currentKeyframe = this._keyframes.get(this.duration);\n    if (!this._currentKeyframe) {\n      this._currentKeyframe = new Map();\n      this._keyframes.set(this.duration, this._currentKeyframe);\n    }\n  }\n  forwardFrame() {\n    this.duration += ONE_FRAME_IN_MILLISECONDS;\n    this._loadKeyframe();\n  }\n  forwardTime(time) {\n    this.applyStylesToKeyframe();\n    this.duration = time;\n    this._loadKeyframe();\n  }\n  _updateStyle(prop, value) {\n    this._localTimelineStyles.set(prop, value);\n    this._globalTimelineStyles.set(prop, value);\n    this._styleSummary.set(prop, {\n      time: this.currentTime,\n      value\n    });\n  }\n  allowOnlyTimelineStyles() {\n    return this._currentEmptyStepKeyframe !== this._currentKeyframe;\n  }\n  applyEmptyStep(easing) {\n    if (easing) {\n      this._previousKeyframe.set('easing', easing);\n    }\n    // special case for animate(duration):\n    // all missing styles are filled with a `*` value then\n    // if any destination styles are filled in later on the same\n    // keyframe then they will override the overridden styles\n    // We use `_globalTimelineStyles` here because there may be\n    // styles in previous keyframes that are not present in this timeline\n    for (let [prop, value] of this._globalTimelineStyles) {\n      this._backFill.set(prop, value || AUTO_STYLE);\n      this._currentKeyframe.set(prop, AUTO_STYLE);\n    }\n    this._currentEmptyStepKeyframe = this._currentKeyframe;\n  }\n  setStyles(input, easing, errors, options) {\n    if (easing) {\n      this._previousKeyframe.set('easing', easing);\n    }\n    const params = options && options.params || {};\n    const styles = flattenStyles(input, this._globalTimelineStyles);\n    for (let [prop, value] of styles) {\n      const val = interpolateParams(value, params, errors);\n      this._pendingStyles.set(prop, val);\n      if (!this._localTimelineStyles.has(prop)) {\n        this._backFill.set(prop, this._globalTimelineStyles.get(prop) ?? AUTO_STYLE);\n      }\n      this._updateStyle(prop, val);\n    }\n  }\n  applyStylesToKeyframe() {\n    if (this._pendingStyles.size == 0) return;\n    this._pendingStyles.forEach((val, prop) => {\n      this._currentKeyframe.set(prop, val);\n    });\n    this._pendingStyles.clear();\n    this._localTimelineStyles.forEach((val, prop) => {\n      if (!this._currentKeyframe.has(prop)) {\n        this._currentKeyframe.set(prop, val);\n      }\n    });\n  }\n  snapshotCurrentStyles() {\n    for (let [prop, val] of this._localTimelineStyles) {\n      this._pendingStyles.set(prop, val);\n      this._updateStyle(prop, val);\n    }\n  }\n  getFinalKeyframe() {\n    return this._keyframes.get(this.duration);\n  }\n  get properties() {\n    const properties = [];\n    for (let prop in this._currentKeyframe) {\n      properties.push(prop);\n    }\n    return properties;\n  }\n  mergeTimelineCollectedStyles(timeline) {\n    timeline._styleSummary.forEach((details1, prop) => {\n      const details0 = this._styleSummary.get(prop);\n      if (!details0 || details1.time > details0.time) {\n        this._updateStyle(prop, details1.value);\n      }\n    });\n  }\n  buildKeyframes() {\n    this.applyStylesToKeyframe();\n    const preStyleProps = new Set();\n    const postStyleProps = new Set();\n    const isEmpty = this._keyframes.size === 1 && this.duration === 0;\n    let finalKeyframes = [];\n    this._keyframes.forEach((keyframe, time) => {\n      const finalKeyframe = new Map([...this._backFill, ...keyframe]);\n      finalKeyframe.forEach((value, prop) => {\n        if (value === ÉµPRE_STYLE) {\n          preStyleProps.add(prop);\n        } else if (value === AUTO_STYLE) {\n          postStyleProps.add(prop);\n        }\n      });\n      if (!isEmpty) {\n        finalKeyframe.set('offset', time / this.duration);\n      }\n      finalKeyframes.push(finalKeyframe);\n    });\n    const preProps = [...preStyleProps.values()];\n    const postProps = [...postStyleProps.values()];\n    // special case for a 0-second animation (which is designed just to place styles onscreen)\n    if (isEmpty) {\n      const kf0 = finalKeyframes[0];\n      const kf1 = new Map(kf0);\n      kf0.set('offset', 0);\n      kf1.set('offset', 1);\n      finalKeyframes = [kf0, kf1];\n    }\n    return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n  }\n}\nclass SubTimelineBuilder extends TimelineBuilder {\n  constructor(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe = false) {\n    super(driver, element, timings.delay);\n    this.keyframes = keyframes;\n    this.preStyleProps = preStyleProps;\n    this.postStyleProps = postStyleProps;\n    this._stretchStartingKeyframe = _stretchStartingKeyframe;\n    this.timings = {\n      duration: timings.duration,\n      delay: timings.delay,\n      easing: timings.easing\n    };\n  }\n  containsAnimation() {\n    return this.keyframes.length > 1;\n  }\n  buildKeyframes() {\n    let keyframes = this.keyframes;\n    let {\n      delay,\n      duration,\n      easing\n    } = this.timings;\n    if (this._stretchStartingKeyframe && delay) {\n      const newKeyframes = [];\n      const totalTime = duration + delay;\n      const startingGap = delay / totalTime;\n      // the original starting keyframe now starts once the delay is done\n      const newFirstKeyframe = new Map(keyframes[0]);\n      newFirstKeyframe.set('offset', 0);\n      newKeyframes.push(newFirstKeyframe);\n      const oldFirstKeyframe = new Map(keyframes[0]);\n      oldFirstKeyframe.set('offset', roundOffset(startingGap));\n      newKeyframes.push(oldFirstKeyframe);\n      /*\n        When the keyframe is stretched then it means that the delay before the animation\n        starts is gone. Instead the first keyframe is placed at the start of the animation\n        and it is then copied to where it starts when the original delay is over. This basically\n        means nothing animates during that delay, but the styles are still rendered. For this\n        to work the original offset values that exist in the original keyframes must be \"warped\"\n        so that they can take the new keyframe + delay into account.\n               delay=1000, duration=1000, keyframes = 0 .5 1\n               turns into\n               delay=0, duration=2000, keyframes = 0 .33 .66 1\n       */\n      // offsets between 1 ... n -1 are all warped by the keyframe stretch\n      const limit = keyframes.length - 1;\n      for (let i = 1; i <= limit; i++) {\n        let kf = new Map(keyframes[i]);\n        const oldOffset = kf.get('offset');\n        const timeAtKeyframe = delay + oldOffset * duration;\n        kf.set('offset', roundOffset(timeAtKeyframe / totalTime));\n        newKeyframes.push(kf);\n      }\n      // the new starting keyframe should be added at the start\n      duration = totalTime;\n      delay = 0;\n      easing = '';\n      keyframes = newKeyframes;\n    }\n    return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n  }\n}\nfunction roundOffset(offset, decimalPoints = 3) {\n  const mult = Math.pow(10, decimalPoints - 1);\n  return Math.round(offset * mult) / mult;\n}\nfunction flattenStyles(input, allStyles) {\n  const styles = new Map();\n  let allProperties;\n  input.forEach(token => {\n    if (token === '*') {\n      allProperties ??= allStyles.keys();\n      for (let prop of allProperties) {\n        styles.set(prop, AUTO_STYLE);\n      }\n    } else {\n      for (let [prop, val] of token) {\n        styles.set(prop, val);\n      }\n    }\n  });\n  return styles;\n}\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, totalTime, errors) {\n  return {\n    type: 0 /* AnimationTransitionInstructionType.TransitionAnimation */,\n    element,\n    triggerName,\n    isRemovalTransition,\n    fromState,\n    fromStyles,\n    toState,\n    toStyles,\n    timelines,\n    queriedElements,\n    preStyleProps,\n    postStyleProps,\n    totalTime,\n    errors\n  };\n}\nconst EMPTY_OBJECT = {};\nclass AnimationTransitionFactory {\n  constructor(_triggerName, ast, _stateStyles) {\n    this._triggerName = _triggerName;\n    this.ast = ast;\n    this._stateStyles = _stateStyles;\n  }\n  match(currentState, nextState, element, params) {\n    return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState, element, params);\n  }\n  buildStyles(stateName, params, errors) {\n    let styler = this._stateStyles.get('*');\n    if (stateName !== undefined) {\n      styler = this._stateStyles.get(stateName?.toString()) || styler;\n    }\n    return styler ? styler.buildStyles(params, errors) : new Map();\n  }\n  build(driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions, skipAstBuild) {\n    const errors = [];\n    const transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n    const currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n    const currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n    const nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n    const nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n    const queriedElements = new Set();\n    const preStyleMap = new Map();\n    const postStyleMap = new Map();\n    const isRemoval = nextState === 'void';\n    const animationOptions = {\n      params: applyParamDefaults(nextAnimationParams, transitionAnimationParams),\n      delay: this.ast.options?.delay\n    };\n    const timelines = skipAstBuild ? [] : buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n    let totalTime = 0;\n    timelines.forEach(tl => {\n      totalTime = Math.max(tl.duration + tl.delay, totalTime);\n    });\n    if (errors.length) {\n      return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);\n    }\n    timelines.forEach(tl => {\n      const elm = tl.element;\n      const preProps = getOrSetDefaultValue(preStyleMap, elm, new Set());\n      tl.preStyleProps.forEach(prop => preProps.add(prop));\n      const postProps = getOrSetDefaultValue(postStyleMap, elm, new Set());\n      tl.postStyleProps.forEach(prop => postProps.add(prop));\n      if (elm !== element) {\n        queriedElements.add(elm);\n      }\n    });\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      checkNonAnimatableInTimelines(timelines, this._triggerName, driver);\n    }\n    return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, [...queriedElements.values()], preStyleMap, postStyleMap, totalTime);\n  }\n}\n/**\n * Checks inside a set of timelines if they try to animate a css property which is not considered\n * animatable, in that case it prints a warning on the console.\n * Besides that the function doesn't have any other effect.\n *\n * Note: this check is done here after the timelines are built instead of doing on a lower level so\n * that we can make sure that the warning appears only once per instruction (we can aggregate here\n * all the issues instead of finding them separately).\n *\n * @param timelines The built timelines for the current instruction.\n * @param triggerName The name of the trigger for the current instruction.\n * @param driver Animation driver used to perform the check.\n *\n */\nfunction checkNonAnimatableInTimelines(timelines, triggerName, driver) {\n  if (!driver.validateAnimatableStyleProperty) {\n    return;\n  }\n  const allowedNonAnimatableProps = new Set([\n  // 'easing' is a utility/synthetic prop we use to represent\n  // easing functions, it represents a property of the animation\n  // which is not animatable but different values can be used\n  // in different steps\n  'easing']);\n  const invalidNonAnimatableProps = new Set();\n  timelines.forEach(({\n    keyframes\n  }) => {\n    const nonAnimatablePropsInitialValues = new Map();\n    keyframes.forEach(keyframe => {\n      const entriesToCheck = Array.from(keyframe.entries()).filter(([prop]) => !allowedNonAnimatableProps.has(prop));\n      for (const [prop, value] of entriesToCheck) {\n        if (!driver.validateAnimatableStyleProperty(prop)) {\n          if (nonAnimatablePropsInitialValues.has(prop) && !invalidNonAnimatableProps.has(prop)) {\n            const propInitialValue = nonAnimatablePropsInitialValues.get(prop);\n            if (propInitialValue !== value) {\n              invalidNonAnimatableProps.add(prop);\n            }\n          } else {\n            nonAnimatablePropsInitialValues.set(prop, value);\n          }\n        }\n      }\n    });\n  });\n  if (invalidNonAnimatableProps.size > 0) {\n    console.warn(`Warning: The animation trigger \"${triggerName}\" is attempting to animate the following` + ' not animatable properties: ' + Array.from(invalidNonAnimatableProps).join(', ') + '\\n' + '(to check the list of all animatable properties visit https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties)');\n  }\n}\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState, element, params) {\n  return matchFns.some(fn => fn(currentState, nextState, element, params));\n}\nfunction applyParamDefaults(userParams, defaults) {\n  const result = {\n    ...defaults\n  };\n  Object.entries(userParams).forEach(([key, value]) => {\n    if (value != null) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\nclass AnimationStateStyles {\n  constructor(styles, defaultParams, normalizer) {\n    this.styles = styles;\n    this.defaultParams = defaultParams;\n    this.normalizer = normalizer;\n  }\n  buildStyles(params, errors) {\n    const finalStyles = new Map();\n    const combinedParams = applyParamDefaults(params, this.defaultParams);\n    this.styles.styles.forEach(value => {\n      if (typeof value !== 'string') {\n        value.forEach((val, prop) => {\n          if (val) {\n            val = interpolateParams(val, combinedParams, errors);\n          }\n          const normalizedProp = this.normalizer.normalizePropertyName(prop, errors);\n          val = this.normalizer.normalizeStyleValue(prop, normalizedProp, val, errors);\n          finalStyles.set(prop, val);\n        });\n      }\n    });\n    return finalStyles;\n  }\n}\nfunction buildTrigger(name, ast, normalizer) {\n  return new AnimationTrigger(name, ast, normalizer);\n}\nclass AnimationTrigger {\n  constructor(name, ast, _normalizer) {\n    this.name = name;\n    this.ast = ast;\n    this._normalizer = _normalizer;\n    this.transitionFactories = [];\n    this.states = new Map();\n    ast.states.forEach(ast => {\n      const defaultParams = ast.options && ast.options.params || {};\n      this.states.set(ast.name, new AnimationStateStyles(ast.style, defaultParams, _normalizer));\n    });\n    balanceProperties(this.states, 'true', '1');\n    balanceProperties(this.states, 'false', '0');\n    ast.transitions.forEach(ast => {\n      this.transitionFactories.push(new AnimationTransitionFactory(name, ast, this.states));\n    });\n    this.fallbackTransition = createFallbackTransition(name, this.states, this._normalizer);\n  }\n  get containsQueries() {\n    return this.ast.queryCount > 0;\n  }\n  matchTransition(currentState, nextState, element, params) {\n    const entry = this.transitionFactories.find(f => f.match(currentState, nextState, element, params));\n    return entry || null;\n  }\n  matchStyles(currentState, params, errors) {\n    return this.fallbackTransition.buildStyles(currentState, params, errors);\n  }\n}\nfunction createFallbackTransition(triggerName, states, normalizer) {\n  const matchers = [(fromState, toState) => true];\n  const animation = {\n    type: AnimationMetadataType.Sequence,\n    steps: [],\n    options: null\n  };\n  const transition = {\n    type: AnimationMetadataType.Transition,\n    animation,\n    matchers,\n    options: null,\n    queryCount: 0,\n    depCount: 0\n  };\n  return new AnimationTransitionFactory(triggerName, transition, states);\n}\nfunction balanceProperties(stateMap, key1, key2) {\n  if (stateMap.has(key1)) {\n    if (!stateMap.has(key2)) {\n      stateMap.set(key2, stateMap.get(key1));\n    }\n  } else if (stateMap.has(key2)) {\n    stateMap.set(key1, stateMap.get(key2));\n  }\n}\nconst EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nclass TimelineAnimationEngine {\n  constructor(bodyNode, _driver, _normalizer) {\n    this.bodyNode = bodyNode;\n    this._driver = _driver;\n    this._normalizer = _normalizer;\n    this._animations = new Map();\n    this._playersById = new Map();\n    this.players = [];\n  }\n  register(id, metadata) {\n    const errors = [];\n    const warnings = [];\n    const ast = buildAnimationAst(this._driver, metadata, errors, warnings);\n    if (errors.length) {\n      throw registerFailed(errors);\n    } else {\n      if (warnings.length) {\n        warnRegister(warnings);\n      }\n      this._animations.set(id, ast);\n    }\n  }\n  _buildPlayer(i, preStyles, postStyles) {\n    const element = i.element;\n    const keyframes = normalizeKeyframes$1(this._normalizer, i.keyframes, preStyles, postStyles);\n    return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);\n  }\n  create(id, element, options = {}) {\n    const errors = [];\n    const ast = this._animations.get(id);\n    let instructions;\n    const autoStylesMap = new Map();\n    if (ast) {\n      instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, new Map(), new Map(), options, EMPTY_INSTRUCTION_MAP, errors);\n      instructions.forEach(inst => {\n        const styles = getOrSetDefaultValue(autoStylesMap, inst.element, new Map());\n        inst.postStyleProps.forEach(prop => styles.set(prop, null));\n      });\n    } else {\n      errors.push(missingOrDestroyedAnimation());\n      instructions = [];\n    }\n    if (errors.length) {\n      throw createAnimationFailed(errors);\n    }\n    autoStylesMap.forEach((styles, element) => {\n      styles.forEach((_, prop) => {\n        styles.set(prop, this._driver.computeStyle(element, prop, AUTO_STYLE));\n      });\n    });\n    const players = instructions.map(i => {\n      const styles = autoStylesMap.get(i.element);\n      return this._buildPlayer(i, new Map(), styles);\n    });\n    const player = optimizeGroupPlayer(players);\n    this._playersById.set(id, player);\n    player.onDestroy(() => this.destroy(id));\n    this.players.push(player);\n    return player;\n  }\n  destroy(id) {\n    const player = this._getPlayer(id);\n    player.destroy();\n    this._playersById.delete(id);\n    const index = this.players.indexOf(player);\n    if (index >= 0) {\n      this.players.splice(index, 1);\n    }\n  }\n  _getPlayer(id) {\n    const player = this._playersById.get(id);\n    if (!player) {\n      throw missingPlayer(id);\n    }\n    return player;\n  }\n  listen(id, element, eventName, callback) {\n    // triggerName, fromState, toState are all ignored for timeline animations\n    const baseEvent = makeAnimationEvent(element, '', '', '');\n    listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n    return () => {};\n  }\n  command(id, element, command, args) {\n    if (command == 'register') {\n      this.register(id, args[0]);\n      return;\n    }\n    if (command == 'create') {\n      const options = args[0] || {};\n      this.create(id, element, options);\n      return;\n    }\n    const player = this._getPlayer(id);\n    switch (command) {\n      case 'play':\n        player.play();\n        break;\n      case 'pause':\n        player.pause();\n        break;\n      case 'reset':\n        player.reset();\n        break;\n      case 'restart':\n        player.restart();\n        break;\n      case 'finish':\n        player.finish();\n        break;\n      case 'init':\n        player.init();\n        break;\n      case 'setPosition':\n        player.setPosition(parseFloat(args[0]));\n        break;\n      case 'destroy':\n        this.destroy(id);\n        break;\n    }\n  }\n}\nconst QUEUED_CLASSNAME = 'ng-animate-queued';\nconst QUEUED_SELECTOR = '.ng-animate-queued';\nconst DISABLED_CLASSNAME = 'ng-animate-disabled';\nconst DISABLED_SELECTOR = '.ng-animate-disabled';\nconst STAR_CLASSNAME = 'ng-star-inserted';\nconst STAR_SELECTOR = '.ng-star-inserted';\nconst EMPTY_PLAYER_ARRAY = [];\nconst NULL_REMOVAL_STATE = {\n  namespaceId: '',\n  setForRemoval: false,\n  setForMove: false,\n  hasAnimation: false,\n  removedBeforeQueried: false\n};\nconst NULL_REMOVED_QUERIED_STATE = {\n  namespaceId: '',\n  setForMove: false,\n  setForRemoval: false,\n  hasAnimation: false,\n  removedBeforeQueried: true\n};\nconst REMOVAL_FLAG = '__ng_removed';\nclass StateValue {\n  get params() {\n    return this.options.params;\n  }\n  constructor(input, namespaceId = '') {\n    this.namespaceId = namespaceId;\n    const isObj = input && input.hasOwnProperty('value');\n    const value = isObj ? input['value'] : input;\n    this.value = normalizeTriggerValue(value);\n    if (isObj) {\n      // we drop the value property from options.\n      const {\n        value,\n        ...options\n      } = input;\n      this.options = options;\n    } else {\n      this.options = {};\n    }\n    if (!this.options.params) {\n      this.options.params = {};\n    }\n  }\n  absorbOptions(options) {\n    const newParams = options.params;\n    if (newParams) {\n      const oldParams = this.options.params;\n      Object.keys(newParams).forEach(prop => {\n        if (oldParams[prop] == null) {\n          oldParams[prop] = newParams[prop];\n        }\n      });\n    }\n  }\n}\nconst VOID_VALUE = 'void';\nconst DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nclass AnimationTransitionNamespace {\n  constructor(id, hostElement, _engine) {\n    this.id = id;\n    this.hostElement = hostElement;\n    this._engine = _engine;\n    this.players = [];\n    this._triggers = new Map();\n    this._queue = [];\n    this._elementListeners = new Map();\n    this._hostClassName = 'ng-tns-' + id;\n    addClass(hostElement, this._hostClassName);\n  }\n  listen(element, name, phase, callback) {\n    if (!this._triggers.has(name)) {\n      throw missingTrigger(phase, name);\n    }\n    if (phase == null || phase.length == 0) {\n      throw missingEvent(name);\n    }\n    if (!isTriggerEventValid(phase)) {\n      throw unsupportedTriggerEvent(phase, name);\n    }\n    const listeners = getOrSetDefaultValue(this._elementListeners, element, []);\n    const data = {\n      name,\n      phase,\n      callback\n    };\n    listeners.push(data);\n    const triggersWithStates = getOrSetDefaultValue(this._engine.statesByElement, element, new Map());\n    if (!triggersWithStates.has(name)) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n      triggersWithStates.set(name, DEFAULT_STATE_VALUE);\n    }\n    return () => {\n      // the event listener is removed AFTER the flush has occurred such\n      // that leave animations callbacks can fire (otherwise if the node\n      // is removed in between then the listeners would be deregistered)\n      this._engine.afterFlush(() => {\n        const index = listeners.indexOf(data);\n        if (index >= 0) {\n          listeners.splice(index, 1);\n        }\n        if (!this._triggers.has(name)) {\n          triggersWithStates.delete(name);\n        }\n      });\n    };\n  }\n  register(name, ast) {\n    if (this._triggers.has(name)) {\n      // throw\n      return false;\n    } else {\n      this._triggers.set(name, ast);\n      return true;\n    }\n  }\n  _getTrigger(name) {\n    const trigger = this._triggers.get(name);\n    if (!trigger) {\n      throw unregisteredTrigger(name);\n    }\n    return trigger;\n  }\n  trigger(element, triggerName, value, defaultToFallback = true) {\n    const trigger = this._getTrigger(triggerName);\n    const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n    let triggersWithStates = this._engine.statesByElement.get(element);\n    if (!triggersWithStates) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n      this._engine.statesByElement.set(element, triggersWithStates = new Map());\n    }\n    let fromState = triggersWithStates.get(triggerName);\n    const toState = new StateValue(value, this.id);\n    const isObj = value && value.hasOwnProperty('value');\n    if (!isObj && fromState) {\n      toState.absorbOptions(fromState.options);\n    }\n    triggersWithStates.set(triggerName, toState);\n    if (!fromState) {\n      fromState = DEFAULT_STATE_VALUE;\n    }\n    const isRemoval = toState.value === VOID_VALUE;\n    // normally this isn't reached by here, however, if an object expression\n    // is passed in then it may be a new object each time. Comparing the value\n    // is important since that will stay the same despite there being a new object.\n    // The removal arc here is special cased because the same element is triggered\n    // twice in the event that it contains animations on the outer/inner portions\n    // of the host container\n    if (!isRemoval && fromState.value === toState.value) {\n      // this means that despite the value not changing, some inner params\n      // have changed which means that the animation final styles need to be applied\n      if (!objEquals(fromState.params, toState.params)) {\n        const errors = [];\n        const fromStyles = trigger.matchStyles(fromState.value, fromState.params, errors);\n        const toStyles = trigger.matchStyles(toState.value, toState.params, errors);\n        if (errors.length) {\n          this._engine.reportError(errors);\n        } else {\n          this._engine.afterFlush(() => {\n            eraseStyles(element, fromStyles);\n            setStyles(element, toStyles);\n          });\n        }\n      }\n      return;\n    }\n    const playersOnElement = getOrSetDefaultValue(this._engine.playersByElement, element, []);\n    playersOnElement.forEach(player => {\n      // only remove the player if it is queued on the EXACT same trigger/namespace\n      // we only also deal with queued players here because if the animation has\n      // started then we want to keep the player alive until the flush happens\n      // (which is where the previousPlayers are passed into the new player)\n      if (player.namespaceId == this.id && player.triggerName == triggerName && player.queued) {\n        player.destroy();\n      }\n    });\n    let transition = trigger.matchTransition(fromState.value, toState.value, element, toState.params);\n    let isFallbackTransition = false;\n    if (!transition) {\n      if (!defaultToFallback) return;\n      transition = trigger.fallbackTransition;\n      isFallbackTransition = true;\n    }\n    this._engine.totalQueuedPlayers++;\n    this._queue.push({\n      element,\n      triggerName,\n      transition,\n      fromState,\n      toState,\n      player,\n      isFallbackTransition\n    });\n    if (!isFallbackTransition) {\n      addClass(element, QUEUED_CLASSNAME);\n      player.onStart(() => {\n        removeClass(element, QUEUED_CLASSNAME);\n      });\n    }\n    player.onDone(() => {\n      let index = this.players.indexOf(player);\n      if (index >= 0) {\n        this.players.splice(index, 1);\n      }\n      const players = this._engine.playersByElement.get(element);\n      if (players) {\n        let index = players.indexOf(player);\n        if (index >= 0) {\n          players.splice(index, 1);\n        }\n      }\n    });\n    this.players.push(player);\n    playersOnElement.push(player);\n    return player;\n  }\n  deregister(name) {\n    this._triggers.delete(name);\n    this._engine.statesByElement.forEach(stateMap => stateMap.delete(name));\n    this._elementListeners.forEach((listeners, element) => {\n      this._elementListeners.set(element, listeners.filter(entry => {\n        return entry.name != name;\n      }));\n    });\n  }\n  clearElementCache(element) {\n    this._engine.statesByElement.delete(element);\n    this._elementListeners.delete(element);\n    const elementPlayers = this._engine.playersByElement.get(element);\n    if (elementPlayers) {\n      elementPlayers.forEach(player => player.destroy());\n      this._engine.playersByElement.delete(element);\n    }\n  }\n  _signalRemovalForInnerTriggers(rootElement, context) {\n    const elements = this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true);\n    // emulate a leave animation for all inner nodes within this node.\n    // If there are no animations found for any of the nodes then clear the cache\n    // for the element.\n    elements.forEach(elm => {\n      // this means that an inner remove() operation has already kicked off\n      // the animation on this element...\n      if (elm[REMOVAL_FLAG]) return;\n      const namespaces = this._engine.fetchNamespacesByElement(elm);\n      if (namespaces.size) {\n        namespaces.forEach(ns => ns.triggerLeaveAnimation(elm, context, false, true));\n      } else {\n        this.clearElementCache(elm);\n      }\n    });\n    // If the child elements were removed along with the parent, their animations might not\n    // have completed. Clear all the elements from the cache so we don't end up with a memory leak.\n    this._engine.afterFlushAnimationsDone(() => elements.forEach(elm => this.clearElementCache(elm)));\n  }\n  triggerLeaveAnimation(element, context, destroyAfterComplete, defaultToFallback) {\n    const triggerStates = this._engine.statesByElement.get(element);\n    const previousTriggersValues = new Map();\n    if (triggerStates) {\n      const players = [];\n      triggerStates.forEach((state, triggerName) => {\n        previousTriggersValues.set(triggerName, state.value);\n        // this check is here in the event that an element is removed\n        // twice (both on the host level and the component level)\n        if (this._triggers.has(triggerName)) {\n          const player = this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n          if (player) {\n            players.push(player);\n          }\n        }\n      });\n      if (players.length) {\n        this._engine.markElementAsRemoved(this.id, element, true, context, previousTriggersValues);\n        if (destroyAfterComplete) {\n          optimizeGroupPlayer(players).onDone(() => this._engine.processLeaveNode(element));\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n  prepareLeaveAnimationListeners(element) {\n    const listeners = this._elementListeners.get(element);\n    const elementStates = this._engine.statesByElement.get(element);\n    // if this statement fails then it means that the element was picked up\n    // by an earlier flush (or there are no listeners at all to track the leave).\n    if (listeners && elementStates) {\n      const visitedTriggers = new Set();\n      listeners.forEach(listener => {\n        const triggerName = listener.name;\n        if (visitedTriggers.has(triggerName)) return;\n        visitedTriggers.add(triggerName);\n        const trigger = this._triggers.get(triggerName);\n        const transition = trigger.fallbackTransition;\n        const fromState = elementStates.get(triggerName) || DEFAULT_STATE_VALUE;\n        const toState = new StateValue(VOID_VALUE);\n        const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({\n          element,\n          triggerName,\n          transition,\n          fromState,\n          toState,\n          player,\n          isFallbackTransition: true\n        });\n      });\n    }\n  }\n  removeNode(element, context) {\n    const engine = this._engine;\n    if (element.childElementCount) {\n      this._signalRemovalForInnerTriggers(element, context);\n    }\n    // this means that a * => VOID animation was detected and kicked off\n    if (this.triggerLeaveAnimation(element, context, true)) return;\n    // find the player that is animating and make sure that the\n    // removal is delayed until that player has completed\n    let containsPotentialParentTransition = false;\n    if (engine.totalAnimations) {\n      const currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n      // when this `if statement` does not continue forward it means that\n      // a previous animation query has selected the current element and\n      // is animating it. In this situation want to continue forwards and\n      // allow the element to be queued up for animation later.\n      if (currentPlayers && currentPlayers.length) {\n        containsPotentialParentTransition = true;\n      } else {\n        let parent = element;\n        while (parent = parent.parentNode) {\n          const triggers = engine.statesByElement.get(parent);\n          if (triggers) {\n            containsPotentialParentTransition = true;\n            break;\n          }\n        }\n      }\n    }\n    // at this stage we know that the element will either get removed\n    // during flush or will be picked up by a parent query. Either way\n    // we need to fire the listeners for this element when it DOES get\n    // removed (once the query parent animation is done or after flush)\n    this.prepareLeaveAnimationListeners(element);\n    // whether or not a parent has an animation we need to delay the deferral of the leave\n    // operation until we have more information (which we do after flush() has been called)\n    if (containsPotentialParentTransition) {\n      engine.markElementAsRemoved(this.id, element, false, context);\n    } else {\n      const removalFlag = element[REMOVAL_FLAG];\n      if (!removalFlag || removalFlag === NULL_REMOVAL_STATE) {\n        // we do this after the flush has occurred such\n        // that the callbacks can be fired\n        engine.afterFlush(() => this.clearElementCache(element));\n        engine.destroyInnerAnimations(element);\n        engine._onRemovalComplete(element, context);\n      }\n    }\n  }\n  insertNode(element, parent) {\n    addClass(element, this._hostClassName);\n  }\n  drainQueuedTransitions(microtaskId) {\n    const instructions = [];\n    this._queue.forEach(entry => {\n      const player = entry.player;\n      if (player.destroyed) return;\n      const element = entry.element;\n      const listeners = this._elementListeners.get(element);\n      if (listeners) {\n        listeners.forEach(listener => {\n          if (listener.name == entry.triggerName) {\n            const baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n            baseEvent['_data'] = microtaskId;\n            listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n          }\n        });\n      }\n      if (player.markedForDestroy) {\n        this._engine.afterFlush(() => {\n          // now we can destroy the element properly since the event listeners have\n          // been bound to the player\n          player.destroy();\n        });\n      } else {\n        instructions.push(entry);\n      }\n    });\n    this._queue = [];\n    return instructions.sort((a, b) => {\n      // if depCount == 0 them move to front\n      // otherwise if a contains b then move back\n      const d0 = a.transition.ast.depCount;\n      const d1 = b.transition.ast.depCount;\n      if (d0 == 0 || d1 == 0) {\n        return d0 - d1;\n      }\n      return this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n    });\n  }\n  destroy(context) {\n    this.players.forEach(p => p.destroy());\n    this._signalRemovalForInnerTriggers(this.hostElement, context);\n  }\n}\nclass TransitionAnimationEngine {\n  /** @internal */\n  _onRemovalComplete(element, context) {\n    this.onRemovalComplete(element, context);\n  }\n  constructor(bodyNode, driver, _normalizer, scheduler) {\n    this.bodyNode = bodyNode;\n    this.driver = driver;\n    this._normalizer = _normalizer;\n    this.scheduler = scheduler;\n    this.players = [];\n    this.newHostElements = new Map();\n    this.playersByElement = new Map();\n    this.playersByQueriedElement = new Map();\n    this.statesByElement = new Map();\n    this.disabledNodes = new Set();\n    this.totalAnimations = 0;\n    this.totalQueuedPlayers = 0;\n    this._namespaceLookup = {};\n    this._namespaceList = [];\n    this._flushFns = [];\n    this._whenQuietFns = [];\n    this.namespacesByHostElement = new Map();\n    this.collectedEnterElements = [];\n    this.collectedLeaveElements = [];\n    // this method is designed to be overridden by the code that uses this engine\n    this.onRemovalComplete = (element, context) => {};\n  }\n  get queuedPlayers() {\n    const players = [];\n    this._namespaceList.forEach(ns => {\n      ns.players.forEach(player => {\n        if (player.queued) {\n          players.push(player);\n        }\n      });\n    });\n    return players;\n  }\n  createNamespace(namespaceId, hostElement) {\n    const ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n    if (this.bodyNode && this.driver.containsElement(this.bodyNode, hostElement)) {\n      this._balanceNamespaceList(ns, hostElement);\n    } else {\n      // defer this later until flush during when the host element has\n      // been inserted so that we know exactly where to place it in\n      // the namespace list\n      this.newHostElements.set(hostElement, ns);\n      // given that this host element is a part of the animation code, it\n      // may or may not be inserted by a parent node that is of an\n      // animation renderer type. If this happens then we can still have\n      // access to this item when we query for :enter nodes. If the parent\n      // is a renderer then the set data-structure will normalize the entry\n      this.collectEnterElement(hostElement);\n    }\n    return this._namespaceLookup[namespaceId] = ns;\n  }\n  _balanceNamespaceList(ns, hostElement) {\n    const namespaceList = this._namespaceList;\n    const namespacesByHostElement = this.namespacesByHostElement;\n    const limit = namespaceList.length - 1;\n    if (limit >= 0) {\n      let found = false;\n      // Find the closest ancestor with an existing namespace so we can then insert `ns` after it,\n      // establishing a top-down ordering of namespaces in `this._namespaceList`.\n      let ancestor = this.driver.getParentElement(hostElement);\n      while (ancestor) {\n        const ancestorNs = namespacesByHostElement.get(ancestor);\n        if (ancestorNs) {\n          // An animation namespace has been registered for this ancestor, so we insert `ns`\n          // right after it to establish top-down ordering of animation namespaces.\n          const index = namespaceList.indexOf(ancestorNs);\n          namespaceList.splice(index + 1, 0, ns);\n          found = true;\n          break;\n        }\n        ancestor = this.driver.getParentElement(ancestor);\n      }\n      if (!found) {\n        // No namespace exists that is an ancestor of `ns`, so `ns` is inserted at the front to\n        // ensure that any existing descendants are ordered after `ns`, retaining the desired\n        // top-down ordering.\n        namespaceList.unshift(ns);\n      }\n    } else {\n      namespaceList.push(ns);\n    }\n    namespacesByHostElement.set(hostElement, ns);\n    return ns;\n  }\n  register(namespaceId, hostElement) {\n    let ns = this._namespaceLookup[namespaceId];\n    if (!ns) {\n      ns = this.createNamespace(namespaceId, hostElement);\n    }\n    return ns;\n  }\n  registerTrigger(namespaceId, name, trigger) {\n    let ns = this._namespaceLookup[namespaceId];\n    if (ns && ns.register(name, trigger)) {\n      this.totalAnimations++;\n    }\n  }\n  destroy(namespaceId, context) {\n    if (!namespaceId) return;\n    this.afterFlush(() => {});\n    this.afterFlushAnimationsDone(() => {\n      const ns = this._fetchNamespace(namespaceId);\n      this.namespacesByHostElement.delete(ns.hostElement);\n      const index = this._namespaceList.indexOf(ns);\n      if (index >= 0) {\n        this._namespaceList.splice(index, 1);\n      }\n      ns.destroy(context);\n      delete this._namespaceLookup[namespaceId];\n    });\n  }\n  _fetchNamespace(id) {\n    return this._namespaceLookup[id];\n  }\n  fetchNamespacesByElement(element) {\n    // normally there should only be one namespace per element, however\n    // if @triggers are placed on both the component element and then\n    // its host element (within the component code) then there will be\n    // two namespaces returned. We use a set here to simply deduplicate\n    // the namespaces in case (for the reason described above) there are multiple triggers\n    const namespaces = new Set();\n    const elementStates = this.statesByElement.get(element);\n    if (elementStates) {\n      for (let stateValue of elementStates.values()) {\n        if (stateValue.namespaceId) {\n          const ns = this._fetchNamespace(stateValue.namespaceId);\n          if (ns) {\n            namespaces.add(ns);\n          }\n        }\n      }\n    }\n    return namespaces;\n  }\n  trigger(namespaceId, element, name, value) {\n    if (isElementNode(element)) {\n      const ns = this._fetchNamespace(namespaceId);\n      if (ns) {\n        ns.trigger(element, name, value);\n        return true;\n      }\n    }\n    return false;\n  }\n  insertNode(namespaceId, element, parent, insertBefore) {\n    if (!isElementNode(element)) return;\n    // special case for when an element is removed and reinserted (move operation)\n    // when this occurs we do not want to use the element for deletion later\n    const details = element[REMOVAL_FLAG];\n    if (details && details.setForRemoval) {\n      details.setForRemoval = false;\n      details.setForMove = true;\n      const index = this.collectedLeaveElements.indexOf(element);\n      if (index >= 0) {\n        this.collectedLeaveElements.splice(index, 1);\n      }\n    }\n    // in the event that the namespaceId is blank then the caller\n    // code does not contain any animation code in it, but it is\n    // just being called so that the node is marked as being inserted\n    if (namespaceId) {\n      const ns = this._fetchNamespace(namespaceId);\n      // This if-statement is a workaround for router issue #21947.\n      // The router sometimes hits a race condition where while a route\n      // is being instantiated a new navigation arrives, triggering leave\n      // animation of DOM that has not been fully initialized, until this\n      // is resolved, we need to handle the scenario when DOM is not in a\n      // consistent state during the animation.\n      if (ns) {\n        ns.insertNode(element, parent);\n      }\n    }\n    // only *directives and host elements are inserted before\n    if (insertBefore) {\n      this.collectEnterElement(element);\n    }\n  }\n  collectEnterElement(element) {\n    this.collectedEnterElements.push(element);\n  }\n  markElementAsDisabled(element, value) {\n    if (value) {\n      if (!this.disabledNodes.has(element)) {\n        this.disabledNodes.add(element);\n        addClass(element, DISABLED_CLASSNAME);\n      }\n    } else if (this.disabledNodes.has(element)) {\n      this.disabledNodes.delete(element);\n      removeClass(element, DISABLED_CLASSNAME);\n    }\n  }\n  removeNode(namespaceId, element, context) {\n    if (isElementNode(element)) {\n      this.scheduler?.notify();\n      const ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n      if (ns) {\n        ns.removeNode(element, context);\n      } else {\n        this.markElementAsRemoved(namespaceId, element, false, context);\n      }\n      const hostNS = this.namespacesByHostElement.get(element);\n      if (hostNS && hostNS.id !== namespaceId) {\n        hostNS.removeNode(element, context);\n      }\n    } else {\n      this._onRemovalComplete(element, context);\n    }\n  }\n  markElementAsRemoved(namespaceId, element, hasAnimation, context, previousTriggersValues) {\n    this.collectedLeaveElements.push(element);\n    element[REMOVAL_FLAG] = {\n      namespaceId,\n      setForRemoval: context,\n      hasAnimation,\n      removedBeforeQueried: false,\n      previousTriggersValues\n    };\n  }\n  listen(namespaceId, element, name, phase, callback) {\n    if (isElementNode(element)) {\n      return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n    }\n    return () => {};\n  }\n  _buildInstruction(entry, subTimelines, enterClassName, leaveClassName, skipBuildAst) {\n    return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines, skipBuildAst);\n  }\n  destroyInnerAnimations(containerElement) {\n    let elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n    elements.forEach(element => this.destroyActiveAnimationsForElement(element));\n    if (this.playersByQueriedElement.size == 0) return;\n    elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n    elements.forEach(element => this.finishActiveQueriedAnimationOnElement(element));\n  }\n  destroyActiveAnimationsForElement(element) {\n    const players = this.playersByElement.get(element);\n    if (players) {\n      players.forEach(player => {\n        // special case for when an element is set for destruction, but hasn't started.\n        // in this situation we want to delay the destruction until the flush occurs\n        // so that any event listeners attached to the player are triggered.\n        if (player.queued) {\n          player.markedForDestroy = true;\n        } else {\n          player.destroy();\n        }\n      });\n    }\n  }\n  finishActiveQueriedAnimationOnElement(element) {\n    const players = this.playersByQueriedElement.get(element);\n    if (players) {\n      players.forEach(player => player.finish());\n    }\n  }\n  whenRenderingDone() {\n    return new Promise(resolve => {\n      if (this.players.length) {\n        return optimizeGroupPlayer(this.players).onDone(() => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n  processLeaveNode(element) {\n    const details = element[REMOVAL_FLAG];\n    if (details && details.setForRemoval) {\n      // this will prevent it from removing it twice\n      element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n      if (details.namespaceId) {\n        this.destroyInnerAnimations(element);\n        const ns = this._fetchNamespace(details.namespaceId);\n        if (ns) {\n          ns.clearElementCache(element);\n        }\n      }\n      this._onRemovalComplete(element, details.setForRemoval);\n    }\n    if (element.classList?.contains(DISABLED_CLASSNAME)) {\n      this.markElementAsDisabled(element, false);\n    }\n    this.driver.query(element, DISABLED_SELECTOR, true).forEach(node => {\n      this.markElementAsDisabled(node, false);\n    });\n  }\n  flush(microtaskId = -1) {\n    let players = [];\n    if (this.newHostElements.size) {\n      this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));\n      this.newHostElements.clear();\n    }\n    if (this.totalAnimations && this.collectedEnterElements.length) {\n      for (let i = 0; i < this.collectedEnterElements.length; i++) {\n        const elm = this.collectedEnterElements[i];\n        addClass(elm, STAR_CLASSNAME);\n      }\n    }\n    if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n      const cleanupFns = [];\n      try {\n        players = this._flushAnimations(cleanupFns, microtaskId);\n      } finally {\n        for (let i = 0; i < cleanupFns.length; i++) {\n          cleanupFns[i]();\n        }\n      }\n    } else {\n      for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n        const element = this.collectedLeaveElements[i];\n        this.processLeaveNode(element);\n      }\n    }\n    this.totalQueuedPlayers = 0;\n    this.collectedEnterElements.length = 0;\n    this.collectedLeaveElements.length = 0;\n    this._flushFns.forEach(fn => fn());\n    this._flushFns = [];\n    if (this._whenQuietFns.length) {\n      // we move these over to a variable so that\n      // if any new callbacks are registered in another\n      // flush they do not populate the existing set\n      const quietFns = this._whenQuietFns;\n      this._whenQuietFns = [];\n      if (players.length) {\n        optimizeGroupPlayer(players).onDone(() => {\n          quietFns.forEach(fn => fn());\n        });\n      } else {\n        quietFns.forEach(fn => fn());\n      }\n    }\n  }\n  reportError(errors) {\n    throw triggerTransitionsFailed(errors);\n  }\n  _flushAnimations(cleanupFns, microtaskId) {\n    const subTimelines = new ElementInstructionMap();\n    const skippedPlayers = [];\n    const skippedPlayersMap = new Map();\n    const queuedInstructions = [];\n    const queriedElements = new Map();\n    const allPreStyleElements = new Map();\n    const allPostStyleElements = new Map();\n    const disabledElementsSet = new Set();\n    this.disabledNodes.forEach(node => {\n      disabledElementsSet.add(node);\n      const nodesThatAreDisabled = this.driver.query(node, QUEUED_SELECTOR, true);\n      for (let i = 0; i < nodesThatAreDisabled.length; i++) {\n        disabledElementsSet.add(nodesThatAreDisabled[i]);\n      }\n    });\n    const bodyNode = this.bodyNode;\n    const allTriggerElements = Array.from(this.statesByElement.keys());\n    const enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);\n    // this must occur before the instructions are built below such that\n    // the :enter queries match the elements (since the timeline queries\n    // are fired during instruction building).\n    const enterNodeMapIds = new Map();\n    let i = 0;\n    enterNodeMap.forEach((nodes, root) => {\n      const className = ENTER_CLASSNAME + i++;\n      enterNodeMapIds.set(root, className);\n      nodes.forEach(node => addClass(node, className));\n    });\n    const allLeaveNodes = [];\n    const mergedLeaveNodes = new Set();\n    const leaveNodesWithoutAnimations = new Set();\n    for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n      const element = this.collectedLeaveElements[i];\n      const details = element[REMOVAL_FLAG];\n      if (details && details.setForRemoval) {\n        allLeaveNodes.push(element);\n        mergedLeaveNodes.add(element);\n        if (details.hasAnimation) {\n          this.driver.query(element, STAR_SELECTOR, true).forEach(elm => mergedLeaveNodes.add(elm));\n        } else {\n          leaveNodesWithoutAnimations.add(element);\n        }\n      }\n    }\n    const leaveNodeMapIds = new Map();\n    const leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n    leaveNodeMap.forEach((nodes, root) => {\n      const className = LEAVE_CLASSNAME + i++;\n      leaveNodeMapIds.set(root, className);\n      nodes.forEach(node => addClass(node, className));\n    });\n    cleanupFns.push(() => {\n      enterNodeMap.forEach((nodes, root) => {\n        const className = enterNodeMapIds.get(root);\n        nodes.forEach(node => removeClass(node, className));\n      });\n      leaveNodeMap.forEach((nodes, root) => {\n        const className = leaveNodeMapIds.get(root);\n        nodes.forEach(node => removeClass(node, className));\n      });\n      allLeaveNodes.forEach(element => {\n        this.processLeaveNode(element);\n      });\n    });\n    const allPlayers = [];\n    const erroneousTransitions = [];\n    for (let i = this._namespaceList.length - 1; i >= 0; i--) {\n      const ns = this._namespaceList[i];\n      ns.drainQueuedTransitions(microtaskId).forEach(entry => {\n        const player = entry.player;\n        const element = entry.element;\n        allPlayers.push(player);\n        if (this.collectedEnterElements.length) {\n          const details = element[REMOVAL_FLAG];\n          // animations for move operations (elements being removed and reinserted,\n          // e.g. when the order of an *ngFor list changes) are currently not supported\n          if (details && details.setForMove) {\n            if (details.previousTriggersValues && details.previousTriggersValues.has(entry.triggerName)) {\n              const previousValue = details.previousTriggersValues.get(entry.triggerName);\n              // we need to restore the previous trigger value since the element has\n              // only been moved and hasn't actually left the DOM\n              const triggersWithStates = this.statesByElement.get(entry.element);\n              if (triggersWithStates && triggersWithStates.has(entry.triggerName)) {\n                const state = triggersWithStates.get(entry.triggerName);\n                state.value = previousValue;\n                triggersWithStates.set(entry.triggerName, state);\n              }\n            }\n            player.destroy();\n            return;\n          }\n        }\n        const nodeIsOrphaned = !bodyNode || !this.driver.containsElement(bodyNode, element);\n        const leaveClassName = leaveNodeMapIds.get(element);\n        const enterClassName = enterNodeMapIds.get(element);\n        const instruction = this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName, nodeIsOrphaned);\n        if (instruction.errors && instruction.errors.length) {\n          erroneousTransitions.push(instruction);\n          return;\n        }\n        // even though the element may not be in the DOM, it may still\n        // be added at a later point (due to the mechanics of content\n        // projection and/or dynamic component insertion) therefore it's\n        // important to still style the element.\n        if (nodeIsOrphaned) {\n          player.onStart(() => eraseStyles(element, instruction.fromStyles));\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          skippedPlayers.push(player);\n          return;\n        }\n        // if an unmatched transition is queued and ready to go\n        // then it SHOULD NOT render an animation and cancel the\n        // previously running animations.\n        if (entry.isFallbackTransition) {\n          player.onStart(() => eraseStyles(element, instruction.fromStyles));\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          skippedPlayers.push(player);\n          return;\n        }\n        // this means that if a parent animation uses this animation as a sub-trigger\n        // then it will instruct the timeline builder not to add a player delay, but\n        // instead stretch the first keyframe gap until the animation starts. This is\n        // important in order to prevent extra initialization styles from being\n        // required by the user for the animation.\n        const timelines = [];\n        instruction.timelines.forEach(tl => {\n          tl.stretchStartingKeyframe = true;\n          if (!this.disabledNodes.has(tl.element)) {\n            timelines.push(tl);\n          }\n        });\n        instruction.timelines = timelines;\n        subTimelines.append(element, instruction.timelines);\n        const tuple = {\n          instruction,\n          player,\n          element\n        };\n        queuedInstructions.push(tuple);\n        instruction.queriedElements.forEach(element => getOrSetDefaultValue(queriedElements, element, []).push(player));\n        instruction.preStyleProps.forEach((stringMap, element) => {\n          if (stringMap.size) {\n            let setVal = allPreStyleElements.get(element);\n            if (!setVal) {\n              allPreStyleElements.set(element, setVal = new Set());\n            }\n            stringMap.forEach((_, prop) => setVal.add(prop));\n          }\n        });\n        instruction.postStyleProps.forEach((stringMap, element) => {\n          let setVal = allPostStyleElements.get(element);\n          if (!setVal) {\n            allPostStyleElements.set(element, setVal = new Set());\n          }\n          stringMap.forEach((_, prop) => setVal.add(prop));\n        });\n      });\n    }\n    if (erroneousTransitions.length) {\n      const errors = [];\n      erroneousTransitions.forEach(instruction => {\n        errors.push(transitionFailed(instruction.triggerName, instruction.errors));\n      });\n      allPlayers.forEach(player => player.destroy());\n      this.reportError(errors);\n    }\n    const allPreviousPlayersMap = new Map();\n    // this map tells us which element in the DOM tree is contained by\n    // which animation. Further down this map will get populated once\n    // the players are built and in doing so we can use it to efficiently\n    // figure out if a sub player is skipped due to a parent player having priority.\n    const animationElementMap = new Map();\n    queuedInstructions.forEach(entry => {\n      const element = entry.element;\n      if (subTimelines.has(element)) {\n        animationElementMap.set(element, element);\n        this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n      }\n    });\n    skippedPlayers.forEach(player => {\n      const element = player.element;\n      const previousPlayers = this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n      previousPlayers.forEach(prevPlayer => {\n        getOrSetDefaultValue(allPreviousPlayersMap, element, []).push(prevPlayer);\n        prevPlayer.destroy();\n      });\n    });\n    // this is a special case for nodes that will be removed either by\n    // having their own leave animations or by being queried in a container\n    // that will be removed once a parent animation is complete. The idea\n    // here is that * styles must be identical to ! styles because of\n    // backwards compatibility (* is also filled in by default in many places).\n    // Otherwise * styles will return an empty value or \"auto\" since the element\n    // passed to getComputedStyle will not be visible (since * === destination)\n    const replaceNodes = allLeaveNodes.filter(node => {\n      return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n    });\n    // POST STAGE: fill the * styles\n    const postStylesMap = new Map();\n    const allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n    allLeaveQueriedNodes.forEach(node => {\n      if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n        replaceNodes.push(node);\n      }\n    });\n    // PRE STAGE: fill the ! styles\n    const preStylesMap = new Map();\n    enterNodeMap.forEach((nodes, root) => {\n      cloakAndComputeStyles(preStylesMap, this.driver, new Set(nodes), allPreStyleElements, ÉµPRE_STYLE);\n    });\n    replaceNodes.forEach(node => {\n      const post = postStylesMap.get(node);\n      const pre = preStylesMap.get(node);\n      postStylesMap.set(node, new Map([...(post?.entries() ?? []), ...(pre?.entries() ?? [])]));\n    });\n    const rootPlayers = [];\n    const subPlayers = [];\n    const NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n    queuedInstructions.forEach(entry => {\n      const {\n        element,\n        player,\n        instruction\n      } = entry;\n      // this means that it was never consumed by a parent animation which\n      // means that it is independent and therefore should be set for animation\n      if (subTimelines.has(element)) {\n        if (disabledElementsSet.has(element)) {\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          player.disabled = true;\n          player.overrideTotalTime(instruction.totalTime);\n          skippedPlayers.push(player);\n          return;\n        }\n        // this will flow up the DOM and query the map to figure out\n        // if a parent animation has priority over it. In the situation\n        // that a parent is detected then it will cancel the loop. If\n        // nothing is detected, or it takes a few hops to find a parent,\n        // then it will fill in the missing nodes and signal them as having\n        // a detected parent (or a NO_PARENT value via a special constant).\n        let parentWithAnimation = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n        if (animationElementMap.size > 1) {\n          let elm = element;\n          const parentsToAdd = [];\n          while (elm = elm.parentNode) {\n            const detectedParent = animationElementMap.get(elm);\n            if (detectedParent) {\n              parentWithAnimation = detectedParent;\n              break;\n            }\n            parentsToAdd.push(elm);\n          }\n          parentsToAdd.forEach(parent => animationElementMap.set(parent, parentWithAnimation));\n        }\n        const innerPlayer = this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n        player.setRealPlayer(innerPlayer);\n        if (parentWithAnimation === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n          rootPlayers.push(player);\n        } else {\n          const parentPlayers = this.playersByElement.get(parentWithAnimation);\n          if (parentPlayers && parentPlayers.length) {\n            player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n          }\n          skippedPlayers.push(player);\n        }\n      } else {\n        eraseStyles(element, instruction.fromStyles);\n        player.onDestroy(() => setStyles(element, instruction.toStyles));\n        // there still might be a ancestor player animating this\n        // element therefore we will still add it as a sub player\n        // even if its animation may be disabled\n        subPlayers.push(player);\n        if (disabledElementsSet.has(element)) {\n          skippedPlayers.push(player);\n        }\n      }\n    });\n    // find all of the sub players' corresponding inner animation players\n    subPlayers.forEach(player => {\n      // even if no players are found for a sub animation it\n      // will still complete itself after the next tick since it's Noop\n      const playersForElement = skippedPlayersMap.get(player.element);\n      if (playersForElement && playersForElement.length) {\n        const innerPlayer = optimizeGroupPlayer(playersForElement);\n        player.setRealPlayer(innerPlayer);\n      }\n    });\n    // the reason why we don't actually play the animation is\n    // because all that a skipped player is designed to do is to\n    // fire the start/done transition callback events\n    skippedPlayers.forEach(player => {\n      if (player.parentPlayer) {\n        player.syncPlayerEvents(player.parentPlayer);\n      } else {\n        player.destroy();\n      }\n    });\n    // run through all of the queued removals and see if they\n    // were picked up by a query. If not then perform the removal\n    // operation right away unless a parent animation is ongoing.\n    for (let i = 0; i < allLeaveNodes.length; i++) {\n      const element = allLeaveNodes[i];\n      const details = element[REMOVAL_FLAG];\n      removeClass(element, LEAVE_CLASSNAME);\n      // this means the element has a removal animation that is being\n      // taken care of and therefore the inner elements will hang around\n      // until that animation is over (or the parent queried animation)\n      if (details && details.hasAnimation) continue;\n      let players = [];\n      // if this element is queried or if it contains queried children\n      // then we want for the element not to be removed from the page\n      // until the queried animations have finished\n      if (queriedElements.size) {\n        let queriedPlayerResults = queriedElements.get(element);\n        if (queriedPlayerResults && queriedPlayerResults.length) {\n          players.push(...queriedPlayerResults);\n        }\n        let queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n        for (let j = 0; j < queriedInnerElements.length; j++) {\n          let queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n          if (queriedPlayers && queriedPlayers.length) {\n            players.push(...queriedPlayers);\n          }\n        }\n      }\n      const activePlayers = players.filter(p => !p.destroyed);\n      if (activePlayers.length) {\n        removeNodesAfterAnimationDone(this, element, activePlayers);\n      } else {\n        this.processLeaveNode(element);\n      }\n    }\n    // this is required so the cleanup method doesn't remove them\n    allLeaveNodes.length = 0;\n    rootPlayers.forEach(player => {\n      this.players.push(player);\n      player.onDone(() => {\n        player.destroy();\n        const index = this.players.indexOf(player);\n        this.players.splice(index, 1);\n      });\n      player.play();\n    });\n    return rootPlayers;\n  }\n  afterFlush(callback) {\n    this._flushFns.push(callback);\n  }\n  afterFlushAnimationsDone(callback) {\n    this._whenQuietFns.push(callback);\n  }\n  _getPreviousPlayers(element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n    let players = [];\n    if (isQueriedElement) {\n      const queriedElementPlayers = this.playersByQueriedElement.get(element);\n      if (queriedElementPlayers) {\n        players = queriedElementPlayers;\n      }\n    } else {\n      const elementPlayers = this.playersByElement.get(element);\n      if (elementPlayers) {\n        const isRemovalAnimation = !toStateValue || toStateValue == VOID_VALUE;\n        elementPlayers.forEach(player => {\n          if (player.queued) return;\n          if (!isRemovalAnimation && player.triggerName != triggerName) return;\n          players.push(player);\n        });\n      }\n    }\n    if (namespaceId || triggerName) {\n      players = players.filter(player => {\n        if (namespaceId && namespaceId != player.namespaceId) return false;\n        if (triggerName && triggerName != player.triggerName) return false;\n        return true;\n      });\n    }\n    return players;\n  }\n  _beforeAnimationBuild(namespaceId, instruction, allPreviousPlayersMap) {\n    const triggerName = instruction.triggerName;\n    const rootElement = instruction.element;\n    // when a removal animation occurs, ALL previous players are collected\n    // and destroyed (even if they are outside of the current namespace)\n    const targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n    const targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n    for (const timelineInstruction of instruction.timelines) {\n      const element = timelineInstruction.element;\n      const isQueriedElement = element !== rootElement;\n      const players = getOrSetDefaultValue(allPreviousPlayersMap, element, []);\n      const previousPlayers = this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n      previousPlayers.forEach(player => {\n        const realPlayer = player.getRealPlayer();\n        if (realPlayer.beforeDestroy) {\n          realPlayer.beforeDestroy();\n        }\n        player.destroy();\n        players.push(player);\n      });\n    }\n    // this needs to be done so that the PRE/POST styles can be\n    // computed properly without interfering with the previous animation\n    eraseStyles(rootElement, instruction.fromStyles);\n  }\n  _buildAnimation(namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n    const triggerName = instruction.triggerName;\n    const rootElement = instruction.element;\n    // we first run this so that the previous animation player\n    // data can be passed into the successive animation players\n    const allQueriedPlayers = [];\n    const allConsumedElements = new Set();\n    const allSubElements = new Set();\n    const allNewPlayers = instruction.timelines.map(timelineInstruction => {\n      const element = timelineInstruction.element;\n      allConsumedElements.add(element);\n      // FIXME (matsko): make sure to-be-removed animations are removed properly\n      const details = element[REMOVAL_FLAG];\n      if (details && details.removedBeforeQueried) return new NoopAnimationPlayer(timelineInstruction.duration, timelineInstruction.delay);\n      const isQueriedElement = element !== rootElement;\n      const previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY).map(p => p.getRealPlayer())).filter(p => {\n        // the `element` is not apart of the AnimationPlayer definition, but\n        // Mock/WebAnimations\n        // use the element within their implementation. This will be added in Angular5 to\n        // AnimationPlayer\n        const pp = p;\n        return pp.element ? pp.element === element : false;\n      });\n      const preStyles = preStylesMap.get(element);\n      const postStyles = postStylesMap.get(element);\n      const keyframes = normalizeKeyframes$1(this._normalizer, timelineInstruction.keyframes, preStyles, postStyles);\n      const player = this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n      // this means that this particular player belongs to a sub trigger. It is\n      // important that we match this player up with the corresponding (@trigger.listener)\n      if (timelineInstruction.subTimeline && skippedPlayersMap) {\n        allSubElements.add(element);\n      }\n      if (isQueriedElement) {\n        const wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n        wrappedPlayer.setRealPlayer(player);\n        allQueriedPlayers.push(wrappedPlayer);\n      }\n      return player;\n    });\n    allQueriedPlayers.forEach(player => {\n      getOrSetDefaultValue(this.playersByQueriedElement, player.element, []).push(player);\n      player.onDone(() => deleteOrUnsetInMap(this.playersByQueriedElement, player.element, player));\n    });\n    allConsumedElements.forEach(element => addClass(element, NG_ANIMATING_CLASSNAME));\n    const player = optimizeGroupPlayer(allNewPlayers);\n    player.onDestroy(() => {\n      allConsumedElements.forEach(element => removeClass(element, NG_ANIMATING_CLASSNAME));\n      setStyles(rootElement, instruction.toStyles);\n    });\n    // this basically makes all of the callbacks for sub element animations\n    // be dependent on the upper players for when they finish\n    allSubElements.forEach(element => {\n      getOrSetDefaultValue(skippedPlayersMap, element, []).push(player);\n    });\n    return player;\n  }\n  _buildPlayer(instruction, keyframes, previousPlayers) {\n    if (keyframes.length > 0) {\n      return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n    }\n    // special case for when an empty transition|definition is provided\n    // ... there is no point in rendering an empty animation\n    return new NoopAnimationPlayer(instruction.duration, instruction.delay);\n  }\n}\nclass TransitionAnimationPlayer {\n  constructor(namespaceId, triggerName, element) {\n    this.namespaceId = namespaceId;\n    this.triggerName = triggerName;\n    this.element = element;\n    this._player = new NoopAnimationPlayer();\n    this._containsRealPlayer = false;\n    this._queuedCallbacks = new Map();\n    this.destroyed = false;\n    this.parentPlayer = null;\n    this.markedForDestroy = false;\n    this.disabled = false;\n    this.queued = true;\n    this.totalTime = 0;\n  }\n  setRealPlayer(player) {\n    if (this._containsRealPlayer) return;\n    this._player = player;\n    this._queuedCallbacks.forEach((callbacks, phase) => {\n      callbacks.forEach(callback => listenOnPlayer(player, phase, undefined, callback));\n    });\n    this._queuedCallbacks.clear();\n    this._containsRealPlayer = true;\n    this.overrideTotalTime(player.totalTime);\n    this.queued = false;\n  }\n  getRealPlayer() {\n    return this._player;\n  }\n  overrideTotalTime(totalTime) {\n    this.totalTime = totalTime;\n  }\n  syncPlayerEvents(player) {\n    const p = this._player;\n    if (p.triggerCallback) {\n      player.onStart(() => p.triggerCallback('start'));\n    }\n    player.onDone(() => this.finish());\n    player.onDestroy(() => this.destroy());\n  }\n  _queueEvent(name, callback) {\n    getOrSetDefaultValue(this._queuedCallbacks, name, []).push(callback);\n  }\n  onDone(fn) {\n    if (this.queued) {\n      this._queueEvent('done', fn);\n    }\n    this._player.onDone(fn);\n  }\n  onStart(fn) {\n    if (this.queued) {\n      this._queueEvent('start', fn);\n    }\n    this._player.onStart(fn);\n  }\n  onDestroy(fn) {\n    if (this.queued) {\n      this._queueEvent('destroy', fn);\n    }\n    this._player.onDestroy(fn);\n  }\n  init() {\n    this._player.init();\n  }\n  hasStarted() {\n    return this.queued ? false : this._player.hasStarted();\n  }\n  play() {\n    !this.queued && this._player.play();\n  }\n  pause() {\n    !this.queued && this._player.pause();\n  }\n  restart() {\n    !this.queued && this._player.restart();\n  }\n  finish() {\n    this._player.finish();\n  }\n  destroy() {\n    this.destroyed = true;\n    this._player.destroy();\n  }\n  reset() {\n    !this.queued && this._player.reset();\n  }\n  setPosition(p) {\n    if (!this.queued) {\n      this._player.setPosition(p);\n    }\n  }\n  getPosition() {\n    return this.queued ? 0 : this._player.getPosition();\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const p = this._player;\n    if (p.triggerCallback) {\n      p.triggerCallback(phaseName);\n    }\n  }\n}\nfunction deleteOrUnsetInMap(map, key, value) {\n  let currentValues = map.get(key);\n  if (currentValues) {\n    if (currentValues.length) {\n      const index = currentValues.indexOf(value);\n      currentValues.splice(index, 1);\n    }\n    if (currentValues.length == 0) {\n      map.delete(key);\n    }\n  }\n  return currentValues;\n}\nfunction normalizeTriggerValue(value) {\n  // we use `!= null` here because it's the most simple\n  // way to test against a \"falsy\" value without mixing\n  // in empty strings or a zero value. DO NOT OPTIMIZE.\n  return value != null ? value : null;\n}\nfunction isElementNode(node) {\n  return node && node['nodeType'] === 1;\n}\nfunction isTriggerEventValid(eventName) {\n  return eventName == 'start' || eventName == 'done';\n}\nfunction cloakElement(element, value) {\n  const oldValue = element.style.display;\n  element.style.display = value != null ? value : 'none';\n  return oldValue;\n}\nfunction cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {\n  const cloakVals = [];\n  elements.forEach(element => cloakVals.push(cloakElement(element)));\n  const failedElements = [];\n  elementPropsMap.forEach((props, element) => {\n    const styles = new Map();\n    props.forEach(prop => {\n      const value = driver.computeStyle(element, prop, defaultStyle);\n      styles.set(prop, value);\n      // there is no easy way to detect this because a sub element could be removed\n      // by a parent animation element being detached.\n      if (!value || value.length == 0) {\n        element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n        failedElements.push(element);\n      }\n    });\n    valuesMap.set(element, styles);\n  });\n  // we use a index variable here since Set.forEach(a, i) does not return\n  // an index value for the closure (but instead just the value)\n  let i = 0;\n  elements.forEach(element => cloakElement(element, cloakVals[i++]));\n  return failedElements;\n}\n/*\nSince the Angular renderer code will return a collection of inserted\nnodes in all areas of a DOM tree, it's up to this algorithm to figure\nout which nodes are roots for each animation @trigger.\n\nBy placing each inserted node into a Set and traversing upwards, it\nis possible to find the @trigger elements and well any direct *star\ninsertion nodes, if a @trigger root is found then the enter element\nis placed into the Map[@trigger] spot.\n */\nfunction buildRootMap(roots, nodes) {\n  const rootMap = new Map();\n  roots.forEach(root => rootMap.set(root, []));\n  if (nodes.length == 0) return rootMap;\n  const NULL_NODE = 1;\n  const nodeSet = new Set(nodes);\n  const localRootMap = new Map();\n  function getRoot(node) {\n    if (!node) return NULL_NODE;\n    let root = localRootMap.get(node);\n    if (root) return root;\n    const parent = node.parentNode;\n    if (rootMap.has(parent)) {\n      // ngIf inside @trigger\n      root = parent;\n    } else if (nodeSet.has(parent)) {\n      // ngIf inside ngIf\n      root = NULL_NODE;\n    } else {\n      // recurse upwards\n      root = getRoot(parent);\n    }\n    localRootMap.set(node, root);\n    return root;\n  }\n  nodes.forEach(node => {\n    const root = getRoot(node);\n    if (root !== NULL_NODE) {\n      rootMap.get(root).push(node);\n    }\n  });\n  return rootMap;\n}\nfunction addClass(element, className) {\n  element.classList?.add(className);\n}\nfunction removeClass(element, className) {\n  element.classList?.remove(className);\n}\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n  optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));\n}\nfunction flattenGroupPlayers(players) {\n  const finalPlayers = [];\n  _flattenGroupPlayersRecur(players, finalPlayers);\n  return finalPlayers;\n}\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n  for (let i = 0; i < players.length; i++) {\n    const player = players[i];\n    if (player instanceof ÉµAnimationGroupPlayer) {\n      _flattenGroupPlayersRecur(player.players, finalPlayers);\n    } else {\n      finalPlayers.push(player);\n    }\n  }\n}\nfunction objEquals(a, b) {\n  const k1 = Object.keys(a);\n  const k2 = Object.keys(b);\n  if (k1.length != k2.length) return false;\n  for (let i = 0; i < k1.length; i++) {\n    const prop = k1[i];\n    if (!b.hasOwnProperty(prop) || a[prop] !== b[prop]) return false;\n  }\n  return true;\n}\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n  const postEntry = allPostStyleElements.get(element);\n  if (!postEntry) return false;\n  let preEntry = allPreStyleElements.get(element);\n  if (preEntry) {\n    postEntry.forEach(data => preEntry.add(data));\n  } else {\n    allPreStyleElements.set(element, postEntry);\n  }\n  allPostStyleElements.delete(element);\n  return true;\n}\nclass AnimationEngine {\n  constructor(doc, _driver, _normalizer, scheduler) {\n    this._driver = _driver;\n    this._normalizer = _normalizer;\n    this._triggerCache = {};\n    // this method is designed to be overridden by the code that uses this engine\n    this.onRemovalComplete = (element, context) => {};\n    this._transitionEngine = new TransitionAnimationEngine(doc.body, _driver, _normalizer, scheduler);\n    this._timelineEngine = new TimelineAnimationEngine(doc.body, _driver, _normalizer);\n    this._transitionEngine.onRemovalComplete = (element, context) => this.onRemovalComplete(element, context);\n  }\n  registerTrigger(componentId, namespaceId, hostElement, name, metadata) {\n    const cacheKey = componentId + '-' + name;\n    let trigger = this._triggerCache[cacheKey];\n    if (!trigger) {\n      const errors = [];\n      const warnings = [];\n      const ast = buildAnimationAst(this._driver, metadata, errors, warnings);\n      if (errors.length) {\n        throw triggerBuildFailed(name, errors);\n      }\n      if (warnings.length) {\n        warnTriggerBuild(name, warnings);\n      }\n      trigger = buildTrigger(name, ast, this._normalizer);\n      this._triggerCache[cacheKey] = trigger;\n    }\n    this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n  }\n  register(namespaceId, hostElement) {\n    this._transitionEngine.register(namespaceId, hostElement);\n  }\n  destroy(namespaceId, context) {\n    this._transitionEngine.destroy(namespaceId, context);\n  }\n  onInsert(namespaceId, element, parent, insertBefore) {\n    this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n  }\n  onRemove(namespaceId, element, context) {\n    this._transitionEngine.removeNode(namespaceId, element, context);\n  }\n  disableAnimations(element, disable) {\n    this._transitionEngine.markElementAsDisabled(element, disable);\n  }\n  process(namespaceId, element, property, value) {\n    if (property.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(property);\n      const args = value;\n      this._timelineEngine.command(id, element, action, args);\n    } else {\n      this._transitionEngine.trigger(namespaceId, element, property, value);\n    }\n  }\n  listen(namespaceId, element, eventName, eventPhase, callback) {\n    // @@listen\n    if (eventName.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(eventName);\n      return this._timelineEngine.listen(id, element, action, callback);\n    }\n    return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n  }\n  flush(microtaskId = -1) {\n    this._transitionEngine.flush(microtaskId);\n  }\n  get players() {\n    return [...this._transitionEngine.players, ...this._timelineEngine.players];\n  }\n  whenRenderingDone() {\n    return this._transitionEngine.whenRenderingDone();\n  }\n  afterFlushAnimationsDone(cb) {\n    this._transitionEngine.afterFlushAnimationsDone(cb);\n  }\n}\n\n/**\n * Returns an instance of `SpecialCasedStyles` if and when any special (non animateable) styles are\n * detected.\n *\n * In CSS there exist properties that cannot be animated within a keyframe animation\n * (whether it be via CSS keyframes or web-animations) and the animation implementation\n * will ignore them. This function is designed to detect those special cased styles and\n * return a container that will be executed at the start and end of the animation.\n *\n * @returns an instance of `SpecialCasedStyles` if any special styles are detected otherwise `null`\n */\nfunction packageNonAnimatableStyles(element, styles) {\n  let startStyles = null;\n  let endStyles = null;\n  if (Array.isArray(styles) && styles.length) {\n    startStyles = filterNonAnimatableStyles(styles[0]);\n    if (styles.length > 1) {\n      endStyles = filterNonAnimatableStyles(styles[styles.length - 1]);\n    }\n  } else if (styles instanceof Map) {\n    startStyles = filterNonAnimatableStyles(styles);\n  }\n  return startStyles || endStyles ? new SpecialCasedStyles(element, startStyles, endStyles) : null;\n}\n/**\n * Designed to be executed during a keyframe-based animation to apply any special-cased styles.\n *\n * When started (when the `start()` method is run) then the provided `startStyles`\n * will be applied. When finished (when the `finish()` method is called) the\n * `endStyles` will be applied as well any any starting styles. Finally when\n * `destroy()` is called then all styles will be removed.\n */\nclass SpecialCasedStyles {\n  static {\n    this.initialStylesByElement = new WeakMap();\n  }\n  constructor(_element, _startStyles, _endStyles) {\n    this._element = _element;\n    this._startStyles = _startStyles;\n    this._endStyles = _endStyles;\n    this._state = 0 /* SpecialCasedStylesState.Pending */;\n    let initialStyles = SpecialCasedStyles.initialStylesByElement.get(_element);\n    if (!initialStyles) {\n      SpecialCasedStyles.initialStylesByElement.set(_element, initialStyles = new Map());\n    }\n    this._initialStyles = initialStyles;\n  }\n  start() {\n    if (this._state < 1 /* SpecialCasedStylesState.Started */) {\n      if (this._startStyles) {\n        setStyles(this._element, this._startStyles, this._initialStyles);\n      }\n      this._state = 1 /* SpecialCasedStylesState.Started */;\n    }\n  }\n  finish() {\n    this.start();\n    if (this._state < 2 /* SpecialCasedStylesState.Finished */) {\n      setStyles(this._element, this._initialStyles);\n      if (this._endStyles) {\n        setStyles(this._element, this._endStyles);\n        this._endStyles = null;\n      }\n      this._state = 1 /* SpecialCasedStylesState.Started */;\n    }\n  }\n  destroy() {\n    this.finish();\n    if (this._state < 3 /* SpecialCasedStylesState.Destroyed */) {\n      SpecialCasedStyles.initialStylesByElement.delete(this._element);\n      if (this._startStyles) {\n        eraseStyles(this._element, this._startStyles);\n        this._endStyles = null;\n      }\n      if (this._endStyles) {\n        eraseStyles(this._element, this._endStyles);\n        this._endStyles = null;\n      }\n      setStyles(this._element, this._initialStyles);\n      this._state = 3 /* SpecialCasedStylesState.Destroyed */;\n    }\n  }\n}\nfunction filterNonAnimatableStyles(styles) {\n  let result = null;\n  styles.forEach((val, prop) => {\n    if (isNonAnimatableStyle(prop)) {\n      result = result || new Map();\n      result.set(prop, val);\n    }\n  });\n  return result;\n}\nfunction isNonAnimatableStyle(prop) {\n  return prop === 'display' || prop === 'position';\n}\nclass WebAnimationsPlayer {\n  constructor(element, keyframes, options, _specialStyles) {\n    this.element = element;\n    this.keyframes = keyframes;\n    this.options = options;\n    this._specialStyles = _specialStyles;\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._onDestroyFns = [];\n    this._initialized = false;\n    this._finished = false;\n    this._started = false;\n    this._destroyed = false;\n    // the following original fns are persistent copies of the _onStartFns and _onDoneFns\n    // and are used to reset the fns to their original values upon reset()\n    // (since the _onStartFns and _onDoneFns get deleted after they are called)\n    this._originalOnDoneFns = [];\n    this._originalOnStartFns = [];\n    this.time = 0;\n    this.parentPlayer = null;\n    this.currentSnapshot = new Map();\n    this._duration = options['duration'];\n    this._delay = options['delay'] || 0;\n    this.time = this._duration + this._delay;\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  init() {\n    this._buildPlayer();\n    this._preparePlayerBeforeStart();\n  }\n  _buildPlayer() {\n    if (this._initialized) return;\n    this._initialized = true;\n    const keyframes = this.keyframes;\n    // @ts-expect-error overwriting a readonly property\n    this.domPlayer = this._triggerWebAnimation(this.element, keyframes, this.options);\n    this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : new Map();\n    const onFinish = () => this._onFinish();\n    this.domPlayer.addEventListener('finish', onFinish);\n    this.onDestroy(() => {\n      // We must remove the `finish` event listener once an animation has completed all its\n      // iterations. This action is necessary to prevent a memory leak since the listener captures\n      // `this`, creating a closure that prevents `this` from being garbage collected.\n      this.domPlayer.removeEventListener('finish', onFinish);\n    });\n  }\n  _preparePlayerBeforeStart() {\n    // this is required so that the player doesn't start to animate right away\n    if (this._delay) {\n      this._resetDomPlayerState();\n    } else {\n      this.domPlayer.pause();\n    }\n  }\n  _convertKeyframesToObject(keyframes) {\n    const kfs = [];\n    keyframes.forEach(frame => {\n      kfs.push(Object.fromEntries(frame));\n    });\n    return kfs;\n  }\n  /** @internal */\n  _triggerWebAnimation(element, keyframes, options) {\n    return element.animate(this._convertKeyframesToObject(keyframes), options);\n  }\n  onStart(fn) {\n    this._originalOnStartFns.push(fn);\n    this._onStartFns.push(fn);\n  }\n  onDone(fn) {\n    this._originalOnDoneFns.push(fn);\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  play() {\n    this._buildPlayer();\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n      this._started = true;\n      if (this._specialStyles) {\n        this._specialStyles.start();\n      }\n    }\n    this.domPlayer.play();\n  }\n  pause() {\n    this.init();\n    this.domPlayer.pause();\n  }\n  finish() {\n    this.init();\n    if (this._specialStyles) {\n      this._specialStyles.finish();\n    }\n    this._onFinish();\n    this.domPlayer.finish();\n  }\n  reset() {\n    this._resetDomPlayerState();\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n    this._onStartFns = this._originalOnStartFns;\n    this._onDoneFns = this._originalOnDoneFns;\n  }\n  _resetDomPlayerState() {\n    if (this.domPlayer) {\n      this.domPlayer.cancel();\n    }\n  }\n  restart() {\n    this.reset();\n    this.play();\n  }\n  hasStarted() {\n    return this._started;\n  }\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._resetDomPlayerState();\n      this._onFinish();\n      if (this._specialStyles) {\n        this._specialStyles.destroy();\n      }\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  setPosition(p) {\n    if (this.domPlayer === undefined) {\n      this.init();\n    }\n    this.domPlayer.currentTime = p * this.time;\n  }\n  getPosition() {\n    // tsc is complaining with TS2362 without the conversion to number\n    return +(this.domPlayer.currentTime ?? 0) / this.time;\n  }\n  get totalTime() {\n    return this._delay + this._duration;\n  }\n  beforeDestroy() {\n    const styles = new Map();\n    if (this.hasStarted()) {\n      // note: this code is invoked only when the `play` function was called prior to this\n      // (thus `hasStarted` returns true), this implies that the code that initializes\n      // `_finalKeyframe` has also been executed and the non-null assertion can be safely used here\n      const finalKeyframe = this._finalKeyframe;\n      finalKeyframe.forEach((val, prop) => {\n        if (prop !== 'offset') {\n          styles.set(prop, this._finished ? val : computeStyle(this.element, prop));\n        }\n      });\n    }\n    this.currentSnapshot = styles;\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName === 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\nclass WebAnimationsDriver {\n  validateStyleProperty(prop) {\n    // Perform actual validation in dev mode only, in prod mode this check is a noop.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      return validateStyleProperty(prop);\n    }\n    return true;\n  }\n  validateAnimatableStyleProperty(prop) {\n    // Perform actual validation in dev mode only, in prod mode this check is a noop.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const cssProp = camelCaseToDashCase(prop);\n      return validateWebAnimatableStyleProperty(cssProp);\n    }\n    return true;\n  }\n  matchesElement(_element, _selector) {\n    // This method is deprecated and no longer in use so we return false.\n    return false;\n  }\n  containsElement(elm1, elm2) {\n    return containsElement(elm1, elm2);\n  }\n  getParentElement(element) {\n    return getParentElement(element);\n  }\n  query(element, selector, multi) {\n    return invokeQuery(element, selector, multi);\n  }\n  computeStyle(element, prop, defaultValue) {\n    return computeStyle(element, prop);\n  }\n  animate(element, keyframes, duration, delay, easing, previousPlayers = []) {\n    const fill = delay == 0 ? 'both' : 'forwards';\n    const playerOptions = {\n      duration,\n      delay,\n      fill\n    };\n    // we check for this to avoid having a null|undefined value be present\n    // for the easing (which results in an error for certain browsers #9752)\n    if (easing) {\n      playerOptions['easing'] = easing;\n    }\n    const previousStyles = new Map();\n    const previousWebAnimationPlayers = previousPlayers.filter(player => player instanceof WebAnimationsPlayer);\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousWebAnimationPlayers.forEach(player => {\n        player.currentSnapshot.forEach((val, prop) => previousStyles.set(prop, val));\n      });\n    }\n    let _keyframes = normalizeKeyframes(keyframes).map(styles => new Map(styles));\n    _keyframes = balancePreviousStylesIntoKeyframes(element, _keyframes, previousStyles);\n    const specialStyles = packageNonAnimatableStyles(element, _keyframes);\n    return new WebAnimationsPlayer(element, _keyframes, playerOptions, specialStyles);\n  }\n}\nfunction createEngine(type, doc, scheduler) {\n  // TODO: find a way to make this tree shakable.\n  if (type === 'noop') {\n    return new AnimationEngine(doc, new NoopAnimationDriver(), new NoopAnimationStyleNormalizer(), scheduler);\n  }\n  return new AnimationEngine(doc, new WebAnimationsDriver(), new WebAnimationsStyleNormalizer(), scheduler);\n}\nclass Animation {\n  constructor(_driver, input) {\n    this._driver = _driver;\n    const errors = [];\n    const warnings = [];\n    const ast = buildAnimationAst(_driver, input, errors, warnings);\n    if (errors.length) {\n      throw validationFailed(errors);\n    }\n    if (warnings.length) {\n      warnValidation(warnings);\n    }\n    this._animationAst = ast;\n  }\n  buildTimelines(element, startingStyles, destinationStyles, options, subInstructions) {\n    const start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : startingStyles;\n    const dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : destinationStyles;\n    const errors = [];\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const result = buildAnimationTimelines(this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest, options, subInstructions, errors);\n    if (errors.length) {\n      throw buildingFailed(errors);\n    }\n    return result;\n  }\n}\nconst ANIMATION_PREFIX = '@';\nconst DISABLE_ANIMATIONS_FLAG = '@.disabled';\nclass BaseAnimationRenderer {\n  constructor(namespaceId, delegate, engine, _onDestroy) {\n    this.namespaceId = namespaceId;\n    this.delegate = delegate;\n    this.engine = engine;\n    this._onDestroy = _onDestroy;\n    // We need to explicitly type this property because of an api-extractor bug\n    // See https://github.com/microsoft/rushstack/issues/4390\n    this.Éµtype = 0 /* AnimationRendererType.Regular */;\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroyNode(node) {\n    this.delegate.destroyNode?.(node);\n  }\n  destroy() {\n    this.engine.destroy(this.namespaceId, this.delegate);\n    this.engine.afterFlushAnimationsDone(() => {\n      // Call the renderer destroy method after the animations has finished as otherwise\n      // styles will be removed too early which will cause an unstyled animation.\n      queueMicrotask(() => {\n        this.delegate.destroy();\n      });\n    });\n    this._onDestroy?.();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n    this.engine.onInsert(this.namespaceId, newChild, parent, false);\n  }\n  insertBefore(parent, newChild, refChild, isMove = true) {\n    this.delegate.insertBefore(parent, newChild, refChild);\n    // If `isMove` true than we should animate this insert.\n    this.engine.onInsert(this.namespaceId, newChild, parent, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n      this.disableAnimations(el, !!value);\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback) {\n    return this.delegate.listen(target, eventName, callback);\n  }\n  disableAnimations(element, value) {\n    this.engine.disableAnimations(element, value);\n  }\n}\nclass AnimationRenderer extends BaseAnimationRenderer {\n  constructor(factory, namespaceId, delegate, engine, onDestroy) {\n    super(namespaceId, delegate, engine, onDestroy);\n    this.factory = factory;\n    this.namespaceId = namespaceId;\n  }\n  setProperty(el, name, value) {\n    if (name.charAt(0) == ANIMATION_PREFIX) {\n      if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n        value = value === undefined ? true : !!value;\n        this.disableAnimations(el, value);\n      } else {\n        this.engine.process(this.namespaceId, el, name.slice(1), value);\n      }\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n  listen(target, eventName, callback) {\n    if (eventName.charAt(0) == ANIMATION_PREFIX) {\n      const element = resolveElementFromTarget(target);\n      let name = eventName.slice(1);\n      let phase = '';\n      // @listener.phase is for trigger animation callbacks\n      // @@listener is for animation builder callbacks\n      if (name.charAt(0) != ANIMATION_PREFIX) {\n        [name, phase] = parseTriggerCallbackName(name);\n      }\n      return this.engine.listen(this.namespaceId, element, name, phase, event => {\n        const countId = event['_data'] || -1;\n        this.factory.scheduleListenerCallback(countId, callback, event);\n      });\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n}\nfunction resolveElementFromTarget(target) {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\nfunction parseTriggerCallbackName(triggerName) {\n  const dotIndex = triggerName.indexOf('.');\n  const trigger = triggerName.substring(0, dotIndex);\n  const phase = triggerName.slice(dotIndex + 1);\n  return [trigger, phase];\n}\nclass AnimationRendererFactory {\n  constructor(delegate, engine, _zone) {\n    this.delegate = delegate;\n    this.engine = engine;\n    this._zone = _zone;\n    this._currentId = 0;\n    this._microtaskId = 1;\n    this._animationCallbacksBuffer = [];\n    this._rendererCache = new Map();\n    this._cdRecurDepth = 0;\n    engine.onRemovalComplete = (element, delegate) => {\n      // Note: if a component element has a leave animation, and a host leave animation,\n      // the view engine will call `removeChild` for the parent\n      // component renderer as well as for the child component renderer.\n      // Therefore, we need to check if we already removed the element.\n      const parentNode = delegate?.parentNode(element);\n      if (parentNode) {\n        delegate.removeChild(parentNode, element);\n      }\n    };\n  }\n  createRenderer(hostElement, type) {\n    const EMPTY_NAMESPACE_ID = '';\n    // cache the delegates to find out which cached delegate can\n    // be used by which cached renderer\n    const delegate = this.delegate.createRenderer(hostElement, type);\n    if (!hostElement || !type?.data?.['animation']) {\n      const cache = this._rendererCache;\n      let renderer = cache.get(delegate);\n      if (!renderer) {\n        // Ensure that the renderer is removed from the cache on destroy\n        // since it may contain references to detached DOM nodes.\n        const onRendererDestroy = () => cache.delete(delegate);\n        renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine, onRendererDestroy);\n        // only cache this result when the base renderer is used\n        cache.set(delegate, renderer);\n      }\n      return renderer;\n    }\n    const componentId = type.id;\n    const namespaceId = type.id + '-' + this._currentId;\n    this._currentId++;\n    this.engine.register(namespaceId, hostElement);\n    const registerTrigger = trigger => {\n      if (Array.isArray(trigger)) {\n        trigger.forEach(registerTrigger);\n      } else {\n        this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n      }\n    };\n    const animationTriggers = type.data['animation'];\n    animationTriggers.forEach(registerTrigger);\n    return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n  }\n  begin() {\n    this._cdRecurDepth++;\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  _scheduleCountTask() {\n    queueMicrotask(() => {\n      this._microtaskId++;\n    });\n  }\n  /** @internal */\n  scheduleListenerCallback(count, fn, data) {\n    if (count >= 0 && count < this._microtaskId) {\n      this._zone.run(() => fn(data));\n      return;\n    }\n    const animationCallbacksBuffer = this._animationCallbacksBuffer;\n    if (animationCallbacksBuffer.length == 0) {\n      queueMicrotask(() => {\n        this._zone.run(() => {\n          animationCallbacksBuffer.forEach(tuple => {\n            const [fn, data] = tuple;\n            fn(data);\n          });\n          this._animationCallbacksBuffer = [];\n        });\n      });\n    }\n    animationCallbacksBuffer.push([fn, data]);\n  }\n  end() {\n    this._cdRecurDepth--;\n    // this is to prevent animations from running twice when an inner\n    // component does CD when a parent component instead has inserted it\n    if (this._cdRecurDepth == 0) {\n      this._zone.runOutsideAngular(() => {\n        this._scheduleCountTask();\n        this.engine.flush(this._microtaskId);\n      });\n    }\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n  whenRenderingDone() {\n    return this.engine.whenRenderingDone();\n  }\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationDriver, NoopAnimationDriver, Animation as ÉµAnimation, AnimationEngine as ÉµAnimationEngine, AnimationRenderer as ÉµAnimationRenderer, AnimationRendererFactory as ÉµAnimationRendererFactory, AnimationStyleNormalizer as ÉµAnimationStyleNormalizer, BaseAnimationRenderer as ÉµBaseAnimationRenderer, NoopAnimationStyleNormalizer as ÉµNoopAnimationStyleNormalizer, WebAnimationsDriver as ÉµWebAnimationsDriver, WebAnimationsPlayer as ÉµWebAnimationsPlayer, WebAnimationsStyleNormalizer as ÉµWebAnimationsStyleNormalizer, allowPreviousPlayerStylesMerge as ÉµallowPreviousPlayerStylesMerge, camelCaseToDashCase as ÉµcamelCaseToDashCase, containsElement as ÉµcontainsElement, createEngine as ÉµcreateEngine, getParentElement as ÉµgetParentElement, invokeQuery as ÉµinvokeQuery, normalizeKeyframes as ÉµnormalizeKeyframes, validateStyleProperty as ÉµvalidateStyleProperty, validateWebAnimatableStyleProperty as ÉµvalidateWebAnimatableStyleProperty };\n","/**\n * @license Angular v17.3.12\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { inject, ÉµChangeDetectionScheduler, Injectable, Inject, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE, NgModule, ÉµperformanceMarkFeature } from '@angular/core';\nexport { ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ÉµDomRendererFactory2, BrowserModule } from '@angular/platform-browser';\nimport * as i1 from '@angular/animations/browser';\nimport { ÉµAnimationEngine, ÉµWebAnimationsStyleNormalizer, ÉµAnimationRendererFactory, ÉµAnimationStyleNormalizer, AnimationDriver, ÉµWebAnimationsDriver, NoopAnimationDriver } from '@angular/animations/browser';\nimport { DOCUMENT } from '@angular/common';\nclass InjectableAnimationEngine extends ÉµAnimationEngine {\n  // The `ApplicationRef` is injected here explicitly to force the dependency ordering.\n  // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they\n  // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.\n  constructor(doc, driver, normalizer) {\n    super(doc, driver, normalizer, inject(ÉµChangeDetectionScheduler, {\n      optional: true\n    }));\n  }\n  ngOnDestroy() {\n    this.flush();\n  }\n  static {\n    this.Éµfac = function InjectableAnimationEngine_Factory(t) {\n      return new (t || InjectableAnimationEngine)(i0.ÉµÉµinject(DOCUMENT), i0.ÉµÉµinject(i1.AnimationDriver), i0.ÉµÉµinject(i1.ÉµAnimationStyleNormalizer));\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: InjectableAnimationEngine,\n      factory: InjectableAnimationEngine.Éµfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(InjectableAnimationEngine, [{\n    type: Injectable\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i1.AnimationDriver\n  }, {\n    type: i1.ÉµAnimationStyleNormalizer\n  }], null);\n})();\nfunction instantiateDefaultStyleNormalizer() {\n  return new ÉµWebAnimationsStyleNormalizer();\n}\nfunction instantiateRendererFactory(renderer, engine, zone) {\n  return new ÉµAnimationRendererFactory(renderer, engine, zone);\n}\nconst SHARED_ANIMATION_PROVIDERS = [{\n  provide: ÉµAnimationStyleNormalizer,\n  useFactory: instantiateDefaultStyleNormalizer\n}, {\n  provide: ÉµAnimationEngine,\n  useClass: InjectableAnimationEngine\n}, {\n  provide: RendererFactory2,\n  useFactory: instantiateRendererFactory,\n  deps: [ÉµDomRendererFactory2, ÉµAnimationEngine, NgZone]\n}];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nconst BROWSER_ANIMATIONS_PROVIDERS = [{\n  provide: AnimationDriver,\n  useFactory: () => new ÉµWebAnimationsDriver()\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'BrowserAnimations'\n}, ...SHARED_ANIMATION_PROVIDERS];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nconst BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{\n  provide: AnimationDriver,\n  useClass: NoopAnimationDriver\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'NoopAnimations'\n}, ...SHARED_ANIMATION_PROVIDERS];\n\n/**\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\nclass BrowserAnimationsModule {\n  /**\n   * Configures the module based on the specified object.\n   *\n   * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n   * @see {@link BrowserAnimationsModuleConfig}\n   *\n   * @usageNotes\n   * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n   * function as follows:\n   * ```\n   * @NgModule({\n   *   imports: [BrowserAnimationsModule.withConfig(config)]\n   * })\n   * class MyNgModule {}\n   * ```\n   */\n  static withConfig(config) {\n    return {\n      ngModule: BrowserAnimationsModule,\n      providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS : BROWSER_ANIMATIONS_PROVIDERS\n    };\n  }\n  static {\n    this.Éµfac = function BrowserAnimationsModule_Factory(t) {\n      return new (t || BrowserAnimationsModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: BrowserAnimationsModule\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      providers: BROWSER_ANIMATIONS_PROVIDERS,\n      imports: [BrowserModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BrowserAnimationsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserModule],\n      providers: BROWSER_ANIMATIONS_PROVIDERS\n    }]\n  }], null, null);\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideAnimations() {\n  ÉµperformanceMarkFeature('NgEagerAnimations');\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideAnimations` call results in app code.\n  return [...BROWSER_ANIMATIONS_PROVIDERS];\n}\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\nclass NoopAnimationsModule {\n  static {\n    this.Éµfac = function NoopAnimationsModule_Factory(t) {\n      return new (t || NoopAnimationsModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: NoopAnimationsModule\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n      imports: [BrowserModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NoopAnimationsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserModule],\n      providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS\n    }]\n  }], null, null);\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to disable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to bootstrap an application using\n * the `bootstrapApplication` function, but you need to disable animations\n * (for example, when running tests).\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideNoopAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideNoopAnimations() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideNoopAnimations` call results in app code.\n  return [...BROWSER_NOOP_ANIMATIONS_PROVIDERS];\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserAnimationsModule, NoopAnimationsModule, provideAnimations, provideNoopAnimations, InjectableAnimationEngine as ÉµInjectableAnimationEngine };\n","import { HttpInterceptorFn } from '@angular/common/http';\r\n\r\nexport const tokenAuthenticationInterceptor: HttpInterceptorFn = (req, next) => {\r\n  req = req.clone({\r\n    headers: req.headers.append('token', localStorage.getItem(\"userToken\") || '')\r\n  })\r\n  return next(req);\r\n};\r\n","import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Pipe, Component, ChangeDetectionStrategy, Optional, Inject, Input, ViewChild, NgModule, makeEnvironmentProviders } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/platform-browser';\nimport { NgIf, NgFor, CommonModule } from '@angular/common';\nconst _c0 = [\"overlay\"];\nconst _c1 = [\"*\"];\nfunction NgxSpinnerComponent_div_0_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"div\");\n  }\n}\nfunction NgxSpinnerComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\");\n    i0.ÉµÉµtemplate(1, NgxSpinnerComponent_div_0_div_2_div_1_Template, 1, 0, \"div\", 6);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµclassMap(ctx_r0.spinner.class);\n    i0.ÉµÉµstyleProp(\"color\", ctx_r0.spinner.color);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngForOf\", ctx_r0.spinner.divArray);\n  }\n}\nfunction NgxSpinnerComponent_div_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelement(0, \"div\", 7);\n    i0.ÉµÉµpipe(1, \"safeHtml\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ÉµÉµnextContext(2);\n    i0.ÉµÉµproperty(\"innerHTML\", i0.ÉµÉµpipeBind1(1, 1, ctx_r0.template), i0.ÉµÉµsanitizeHtml);\n  }\n}\nfunction NgxSpinnerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\", 2, 0);\n    i0.ÉµÉµtemplate(2, NgxSpinnerComponent_div_0_div_2_Template, 2, 5, \"div\", 3)(3, NgxSpinnerComponent_div_0_div_3_Template, 2, 3, \"div\", 4);\n    i0.ÉµÉµelementStart(4, \"div\", 5);\n    i0.ÉµÉµprojection(5);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµstyleProp(\"background-color\", ctx_r0.spinner.bdColor)(\"z-index\", ctx_r0.spinner.zIndex)(\"position\", ctx_r0.spinner.fullScreen ? \"fixed\" : \"absolute\");\n    i0.ÉµÉµproperty(\"@.disabled\", ctx_r0.disableAnimation)(\"@fadeIn\", \"in\");\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngIf\", !ctx_r0.template);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngIf\", ctx_r0.template);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµstyleProp(\"z-index\", ctx_r0.spinner.zIndex);\n  }\n}\nconst LOADERS = {\n  \"ball-8bits\": 16,\n  \"ball-atom\": 4,\n  \"ball-beat\": 3,\n  \"ball-circus\": 5,\n  \"ball-climbing-dot\": 4,\n  \"ball-clip-rotate\": 1,\n  \"ball-clip-rotate-multiple\": 2,\n  \"ball-clip-rotate-pulse\": 2,\n  \"ball-elastic-dots\": 5,\n  \"ball-fall\": 3,\n  \"ball-fussion\": 4,\n  \"ball-grid-beat\": 9,\n  \"ball-grid-pulse\": 9,\n  \"ball-newton-cradle\": 4,\n  \"ball-pulse\": 3,\n  \"ball-pulse-rise\": 5,\n  \"ball-pulse-sync\": 3,\n  \"ball-rotate\": 1,\n  \"ball-running-dots\": 5,\n  \"ball-scale\": 1,\n  \"ball-scale-multiple\": 3,\n  \"ball-scale-pulse\": 2,\n  \"ball-scale-ripple\": 1,\n  \"ball-scale-ripple-multiple\": 3,\n  \"ball-spin\": 8,\n  \"ball-spin-clockwise\": 8,\n  \"ball-spin-clockwise-fade\": 8,\n  \"ball-spin-clockwise-fade-rotating\": 8,\n  \"ball-spin-fade\": 8,\n  \"ball-spin-fade-rotating\": 8,\n  \"ball-spin-rotate\": 2,\n  \"ball-square-clockwise-spin\": 8,\n  \"ball-square-spin\": 8,\n  \"ball-triangle-path\": 3,\n  \"ball-zig-zag\": 2,\n  \"ball-zig-zag-deflect\": 2,\n  cog: 1,\n  \"cube-transition\": 2,\n  fire: 3,\n  \"line-scale\": 5,\n  \"line-scale-party\": 5,\n  \"line-scale-pulse-out\": 5,\n  \"line-scale-pulse-out-rapid\": 5,\n  \"line-spin-clockwise-fade\": 8,\n  \"line-spin-clockwise-fade-rotating\": 8,\n  \"line-spin-fade\": 8,\n  \"line-spin-fade-rotating\": 8,\n  pacman: 6,\n  \"square-jelly-box\": 2,\n  \"square-loader\": 1,\n  \"square-spin\": 1,\n  timer: 1,\n  \"triangle-skew-spin\": 1\n};\nconst DEFAULTS = {\n  BD_COLOR: \"rgba(51,51,51,0.8)\",\n  SPINNER_COLOR: \"#fff\",\n  Z_INDEX: 99999\n};\nconst PRIMARY_SPINNER = \"primary\";\nclass NgxSpinner {\n  constructor(init) {\n    Object.assign(this, init);\n  }\n  static create(init) {\n    if (!init?.template && !init?.type) {\n      console.warn(`[ngx-spinner]: Property \"type\" is missed. Please, provide animation type to <ngx-spinner> component\n        and ensure css is added to angular.json file`);\n    }\n    return new NgxSpinner(init);\n  }\n}\nclass NgxSpinnerService {\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() {\n    /**\n     * Spinner observable\n     *\n     * @memberof NgxSpinnerService\n     */\n    // private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\n    this.spinnerObservable = new BehaviorSubject(null);\n  }\n  /**\n   * Get subscription of desired spinner\n   * @memberof NgxSpinnerService\n   **/\n  getSpinner(name) {\n    return this.spinnerObservable.asObservable().pipe(filter(x => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name = PRIMARY_SPINNER, spinner) {\n    return new Promise((resolve, _reject) => {\n      setTimeout(() => {\n        if (spinner && Object.keys(spinner).length) {\n          spinner[\"name\"] = name;\n          this.spinnerObservable.next(new NgxSpinner({\n            ...spinner,\n            show: true\n          }));\n          resolve(true);\n        } else {\n          this.spinnerObservable.next(new NgxSpinner({\n            name,\n            show: true\n          }));\n          resolve(true);\n        }\n      }, 10);\n    });\n  }\n  /**\n   * To hide spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  hide(name = PRIMARY_SPINNER, debounce = 10) {\n    return new Promise((resolve, _reject) => {\n      setTimeout(() => {\n        this.spinnerObservable.next(new NgxSpinner({\n          name,\n          show: false\n        }));\n        resolve(true);\n      }, debounce);\n    });\n  }\n  static {\n    this.Éµfac = function NgxSpinnerService_Factory(t) {\n      return new (t || NgxSpinnerService)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: NgxSpinnerService,\n      factory: NgxSpinnerService.Éµfac,\n      providedIn: \"root\"\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgxSpinnerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: \"root\"\n    }]\n  }], () => [], null);\n})();\nconst NGX_SPINNER_CONFIG = new InjectionToken(\"NGX_SPINNER_CONFIG\");\nclass SafeHtmlPipe {\n  constructor(_sanitizer) {\n    this._sanitizer = _sanitizer;\n  }\n  transform(v) {\n    if (v) {\n      return this._sanitizer.bypassSecurityTrustHtml(v);\n    }\n  }\n  static {\n    this.Éµfac = function SafeHtmlPipe_Factory(t) {\n      return new (t || SafeHtmlPipe)(i0.ÉµÉµdirectiveInject(i1.DomSanitizer, 16));\n    };\n  }\n  static {\n    this.Éµpipe = /* @__PURE__ */i0.ÉµÉµdefinePipe({\n      name: \"safeHtml\",\n      type: SafeHtmlPipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(SafeHtmlPipe, [{\n    type: Pipe,\n    args: [{\n      name: \"safeHtml\",\n      standalone: true\n    }]\n  }], () => [{\n    type: i1.DomSanitizer\n  }], null);\n})();\nclass NgxSpinnerComponent {\n  // TODO: https://github.com/Napster2210/ngx-spinner/issues/259\n  // @HostListener(\"document:keydown\", [\"$event\"])\n  // handleKeyboardEvent(event: KeyboardEvent) {\n  //   if (this.spinnerDOM && this.spinnerDOM.nativeElement) {\n  //     if (\n  //       this.fullScreen ||\n  //       (!this.fullScreen && this.isSpinnerZone(event.target))\n  //     ) {\n  //       event.returnValue = false;\n  //       event.preventDefault();\n  //     }\n  //   }\n  // }\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(spinnerService, changeDetector, elementRef, globalConfig) {\n    this.spinnerService = spinnerService;\n    this.changeDetector = changeDetector;\n    this.elementRef = elementRef;\n    this.globalConfig = globalConfig;\n    /**\n     * To enable/disable animation\n     *\n     * @type {boolean}\n     * @memberof NgxSpinnerComponent\n     */\n    this.disableAnimation = false;\n    /**\n     * Spinner Object\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    this.spinner = new NgxSpinner();\n    /**\n     * Unsubscribe from spinner's observable\n     *\n     * @memberof NgxSpinnerComponent\n     **/\n    this.ngUnsubscribe = new Subject();\n    /**\n     * To set default ngx-spinner options\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    this.setDefaultOptions = () => {\n      const {\n        type\n      } = this.globalConfig ?? {};\n      this.spinner = NgxSpinner.create({\n        name: this.name,\n        bdColor: this.bdColor,\n        size: this.size,\n        color: this.color,\n        type: this.type ?? type,\n        fullScreen: this.fullScreen,\n        divArray: this.divArray,\n        divCount: this.divCount,\n        show: this.show,\n        zIndex: this.zIndex,\n        template: this.template,\n        showSpinner: this.showSpinner\n      });\n    };\n    this.bdColor = DEFAULTS.BD_COLOR;\n    this.zIndex = DEFAULTS.Z_INDEX;\n    this.color = DEFAULTS.SPINNER_COLOR;\n    this.size = \"large\";\n    this.fullScreen = true;\n    this.name = PRIMARY_SPINNER;\n    this.template = null;\n    this.showSpinner = false;\n    this.divArray = [];\n    this.divCount = 0;\n    this.show = false;\n  }\n  initObservable() {\n    this.spinnerService.getSpinner(this.name).pipe(takeUntil(this.ngUnsubscribe)).subscribe(spinner => {\n      this.setDefaultOptions();\n      Object.assign(this.spinner, spinner);\n      if (spinner.show) {\n        this.onInputChange();\n      }\n      this.changeDetector.detectChanges();\n    });\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.initObservable();\n  }\n  /**\n   * To check event triggers inside the Spinner Zone\n   *\n   * @param {*} element\n   * @returns {boolean}\n   * @memberof NgxSpinnerComponent\n   */\n  isSpinnerZone(element) {\n    if (element === this.elementRef.nativeElement.parentElement) {\n      return true;\n    }\n    return element.parentNode && this.isSpinnerZone(element.parentNode);\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes) {\n    for (const propName in changes) {\n      if (propName) {\n        const changedProp = changes[propName];\n        if (changedProp.isFirstChange()) {\n          return;\n        } else if (typeof changedProp.currentValue !== \"undefined\" && changedProp.currentValue !== changedProp.previousValue) {\n          if (changedProp.currentValue !== \"\") {\n            this.spinner[propName] = changedProp.currentValue;\n            if (propName === \"showSpinner\") {\n              if (changedProp.currentValue) {\n                this.spinnerService.show(this.spinner.name, this.spinner);\n              } else {\n                this.spinnerService.hide(this.spinner.name);\n              }\n            }\n            if (propName === \"name\") {\n              this.initObservable();\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type, size) {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((_, i) => i);\n    let sizeClass = \"\";\n    switch (size.toLowerCase()) {\n      case \"small\":\n        sizeClass = \"la-sm\";\n        break;\n      case \"medium\":\n        sizeClass = \"la-2x\";\n        break;\n      case \"large\":\n        sizeClass = \"la-3x\";\n        break;\n      default:\n        break;\n    }\n    return \"la-\" + type + \" \" + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n  static {\n    this.Éµfac = function NgxSpinnerComponent_Factory(t) {\n      return new (t || NgxSpinnerComponent)(i0.ÉµÉµdirectiveInject(NgxSpinnerService), i0.ÉµÉµdirectiveInject(i0.ChangeDetectorRef), i0.ÉµÉµdirectiveInject(i0.ElementRef), i0.ÉµÉµdirectiveInject(NGX_SPINNER_CONFIG, 8));\n    };\n  }\n  static {\n    this.Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n      type: NgxSpinnerComponent,\n      selectors: [[\"ngx-spinner\"]],\n      viewQuery: function NgxSpinnerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ÉµÉµqueryRefresh(_t = i0.ÉµÉµloadQuery()) && (ctx.spinnerDOM = _t.first);\n        }\n      },\n      inputs: {\n        bdColor: \"bdColor\",\n        size: \"size\",\n        color: \"color\",\n        type: \"type\",\n        fullScreen: \"fullScreen\",\n        name: \"name\",\n        zIndex: \"zIndex\",\n        template: \"template\",\n        showSpinner: \"showSpinner\",\n        disableAnimation: \"disableAnimation\"\n      },\n      standalone: true,\n      features: [i0.ÉµÉµNgOnChangesFeature, i0.ÉµÉµStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 1,\n      vars: 1,\n      consts: [[\"overlay\", \"\"], [\"class\", \"ngx-spinner-overlay\", 3, \"background-color\", \"z-index\", \"position\", 4, \"ngIf\"], [1, \"ngx-spinner-overlay\"], [3, \"class\", \"color\", 4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [1, \"loading-text\"], [4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\"]],\n      template: function NgxSpinnerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµprojectionDef();\n          i0.ÉµÉµtemplate(0, NgxSpinnerComponent_div_0_Template, 6, 12, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ÉµÉµproperty(\"ngIf\", ctx.spinner.show);\n        }\n      },\n      dependencies: [SafeHtmlPipe, NgIf, NgFor],\n      styles: [\".ngx-spinner-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%}.ngx-spinner-overlay[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:not(.loading-text){top:50%;left:50%;margin:0;position:absolute;transform:translate(-50%,-50%)}.loading-text[_ngcontent-%COMP%]{position:absolute;top:60%;left:50%;transform:translate(-50%,-60%)}\"],\n      data: {\n        animation: [trigger(\"fadeIn\", [state(\"in\", style({\n          opacity: 1\n        })), transition(\":enter\", [style({\n          opacity: 0\n        }), animate(300)]), transition(\":leave\", animate(200, style({\n          opacity: 0\n        })))])]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgxSpinnerComponent, [{\n    type: Component,\n    args: [{\n      imports: [SafeHtmlPipe, NgIf, NgFor],\n      standalone: true,\n      selector: \"ngx-spinner\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger(\"fadeIn\", [state(\"in\", style({\n        opacity: 1\n      })), transition(\":enter\", [style({\n        opacity: 0\n      }), animate(300)]), transition(\":leave\", animate(200, style({\n        opacity: 0\n      })))])],\n      template: \"<div\\n  [@.disabled]=\\\"disableAnimation\\\"\\n  [@fadeIn]=\\\"'in'\\\"\\n  *ngIf=\\\"spinner.show\\\"\\n  class=\\\"ngx-spinner-overlay\\\"\\n  [style.background-color]=\\\"spinner.bdColor\\\"\\n  [style.z-index]=\\\"spinner.zIndex\\\"\\n  [style.position]=\\\"spinner.fullScreen ? 'fixed' : 'absolute'\\\"\\n  #overlay\\n>\\n  <div *ngIf=\\\"!template\\\" [class]=\\\"spinner.class\\\" [style.color]=\\\"spinner.color\\\">\\n    <div *ngFor=\\\"let index of spinner.divArray\\\"></div>\\n  </div>\\n  <div *ngIf=\\\"template\\\" [innerHTML]=\\\"template | safeHtml\\\"></div>\\n  <div class=\\\"loading-text\\\" [style.z-index]=\\\"spinner.zIndex\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>\\n\",\n      styles: [\".ngx-spinner-overlay{position:fixed;top:0;left:0;width:100%;height:100%}.ngx-spinner-overlay>div:not(.loading-text){top:50%;left:50%;margin:0;position:absolute;transform:translate(-50%,-50%)}.loading-text{position:absolute;top:60%;left:50%;transform:translate(-50%,-60%)}\\n\"]\n    }]\n  }], () => [{\n    type: NgxSpinnerService\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NGX_SPINNER_CONFIG]\n    }]\n  }], {\n    bdColor: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    fullScreen: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    showSpinner: [{\n      type: Input\n    }],\n    disableAnimation: [{\n      type: Input\n    }],\n    spinnerDOM: [{\n      type: ViewChild,\n      args: [\"overlay\"]\n    }]\n  });\n})();\nclass NgxSpinnerModule {\n  static forRoot(config) {\n    return {\n      ngModule: NgxSpinnerModule,\n      providers: [{\n        provide: NGX_SPINNER_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n  static {\n    this.Éµfac = function NgxSpinnerModule_Factory(t) {\n      return new (t || NgxSpinnerModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: NgxSpinnerModule\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgxSpinnerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NgxSpinnerComponent, SafeHtmlPipe],\n      exports: [NgxSpinnerComponent]\n    }]\n  }], null, null);\n})();\nconst provideSpinnerConfig = config => {\n  const providers = [{\n    provide: NGX_SPINNER_CONFIG,\n    useValue: config\n  }];\n  return makeEnvironmentProviders(providers);\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULTS, LOADERS, NgxSpinner, NgxSpinnerComponent, NgxSpinnerModule, NgxSpinnerService, PRIMARY_SPINNER, provideSpinnerConfig };\n","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { finalize, } from 'rxjs';\r\n\r\nexport const loaderSequenceInterceptor: HttpInterceptorFn = (req, next) => {\r\n  if(req.method.match(/(POST|PUT|DELETE)/gi)) {\r\n    return next(req);\r\n  }\r\n\r\n  let _NgxSpinnerService:NgxSpinnerService = inject(NgxSpinnerService);\r\n  _NgxSpinnerService.show();\r\n\r\n  return next(req).pipe(finalize(() => {\r\n    _NgxSpinnerService.hide();\r\n  }));\r\n};\r\n","import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError, throwError } from 'rxjs';\r\n\r\nexport const errorHandlerInterceptor: HttpInterceptorFn = (req, next) => {\r\n  let _ToastrService:ToastrService = inject(ToastrService);\r\n  return next(req).pipe(catchError((err) => {\r\n    _ToastrService.error(`${err.error.message}`, \"Error!\", {\r\n      progressBar: true,\r\n      timeOut: 3000,\r\n    });\r\n    return throwError(() => {})\r\n  }));\r\n};\r\n","import { ApplicationConfig, importProvidersFrom } from '@angular/core';\r\nimport { provideRouter, RouterModule, withViewTransitions } from '@angular/router';\r\n\r\nimport { routes } from './app.routes';\r\nimport { provideClientHydration } from '@angular/platform-browser';\r\nimport { provideHttpClient, withFetch, withInterceptors } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, provideAnimations } from '@angular/platform-browser/animations';\r\nimport { provideToastr } from 'ngx-toastr';\r\nimport { tokenAuthenticationInterceptor } from './Interceptors/TokenAuthentication/token-authentication.interceptor';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { loaderSequenceInterceptor } from './Interceptors/LoaderSequence/loader-sequence.interceptor';\r\nimport { errorHandlerInterceptor } from './Interceptors/ErrorHandler/error-handler.interceptor';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [provideRouter(routes, withViewTransitions()),provideAnimations(), provideToastr(), provideClientHydration(), provideHttpClient(withFetch(), withInterceptors([tokenAuthenticationInterceptor, errorHandlerInterceptor, loaderSequenceInterceptor])), importProvidersFrom(BrowserAnimationsModule, RouterModule, NgxSpinnerModule)]\r\n};\r\n","import { AfterViewInit, Component, inject, OnInit, PLATFORM_ID } from '@angular/core';\r\nimport { FlowbiteService } from '../../../Services/Flowbite/flowbite.service';\r\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\r\nimport { AuthenticationService } from '../../../Services/Authentication/authentication.service';\r\nimport { CartService } from '../../../Services/Cart/cart.service';\r\nimport { WishlistService } from '../../../Services/Wishlist/wishlist.service';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  standalone: true,\r\n  imports: [RouterLink, RouterLinkActive],\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.scss'\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  platformId:Object = inject(PLATFORM_ID);\r\n  constructor(private _FlowbiteService:FlowbiteService, protected _Authentication:AuthenticationService, private _Router:Router, protected _CartService:CartService, protected _Wishlist:WishlistService) {}\r\n  \r\n\r\n  ngOnInit(): void {\r\n      this._FlowbiteService.loadFlowbite(flowbite => {})\r\n      if(isPlatformBrowser(this.platformId)) {\r\n        this._CartService.getUserCart().subscribe(res => {\r\n          this._CartService.cartItemsCount.next((res?.numOfCartItems === undefined) ? 0 : res.numOfCartItems)\r\n        });\r\n        this._Wishlist.getUserWishlist().subscribe(res => {\r\n          this._Wishlist.wishlistItemsCount.next((res?.count === 0) ? 0 : res!.count);\r\n        })\r\n      }\r\n  }\r\n}","<nav class=\"bg-[#F7F4F4] border-gray-200 dark:bg-gray-900\">\r\n    <div class=\"lg:container flex flex-wrap items-center justify-between mx-auto p-4 md:px-2\">\r\n        <a class=\"flex items-center space-x-3 rtl:space-x-reverse\">\r\n            <img src=\"assets/images/freshcart-logo.svg\" alt=\"FreshCart Logo\" />\r\n        </a>\r\n        <button data-collapse-toggle=\"navbar-default\" type=\"button\"\r\n            class=\"inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\"\r\n            aria-controls=\"navbar-default\" aria-expanded=\"false\">\r\n            <span class=\"sr-only\">Open main menu</span>\r\n            <svg class=\"w-5 h-5\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 17 14\">\r\n                <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                    d=\"M1 1h15M1 7h15M1 13h15\" />\r\n            </svg>\r\n        </button>\r\n        <div class=\"hidden bg-[#F7F4F4] w-full md:flex md:w-auto flex-grow\" id=\"navbar-default\">\r\n            <ul\r\n                class=\"flex flex-col md:items-center md:w-full p-4 md:ms-2 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:justify-between md:mt-0 md:border-0 md:bg-[#F7F4F4] dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700\">\r\n                <div class=\"flex flex-col md:flex-row\">\r\n                    @if(_Authentication.userData.getValue() !== null) {\r\n                    <li>\r\n                        <a class=\"block cursor-pointer opacity-70 py-1 px-1 lg:px-2 text-gray-900 rounded hover:bg-gray-100 md:border-0 dark:text-gray-400 dark:opacity-100 md:dark:hover:text-green-700 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                            aria-current=\"page\" routerLink=\"home-page\"\r\n                            routerLinkActive=\"text-white bg-green-800 md:dark:text-green-700 hover:bg-green-800 dark:hover:bg-green-800\">Home</a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"block cursor-pointer opacity-70 py-1 px-1 lg:px-2 text-gray-900 rounded hover:bg-gray-100 md:border-0 dark:text-gray-400 dark:opacity-100 md:dark:hover:text-green-700 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                            routerLink=\"cart-page\"\r\n                            routerLinkActive=\"text-white bg-green-800 md:dark:text-green-700 hover:bg-green-800 dark:hover:bg-green-800\">Cart</a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"block cursor-pointer opacity-70 py-1 px-1 lg:px-2 text-gray-900 rounded hover:bg-gray-100 md:border-0 dark:text-gray-400 dark:opacity-100 md:dark:hover:text-green-700 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                            routerLink=\"products-page\"\r\n                            routerLinkActive=\"text-white bg-green-800 md:dark:text-green-700 hover:bg-green-800 dark:hover:bg-green-800\">Products</a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"block cursor-pointer opacity-70 py-1 px-1 lg:px-2 text-gray-900 rounded hover:bg-gray-100 md:border-0 dark:text-gray-400 dark:opacity-100 md:dark:hover:text-green-700 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                            routerLink=\"categories-page\"\r\n                            routerLinkActive=\"text-white bg-green-800 md:dark:text-green-700 hover:bg-green-800 dark:hover:bg-green-800\">Categories</a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"block cursor-pointer opacity-70 py-1 px-1 lg:px-2 text-gray-900 rounded hover:bg-gray-100 md:border-0 dark:text-gray-400 dark:opacity-100 md:dark:hover:text-green-700 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                            routerLink=\"brands-page\"\r\n                            routerLinkActive=\"text-white bg-green-800 md:dark:text-green-700 hover:bg-green-800 dark:hover:bg-green-800\">Brands</a>\r\n                    </li>\r\n                    }\r\n                </div>\r\n                <ul class=\"flex mt-2 px-3 md:px-0 md:mt-0 items-center space-x-4 md:space-x-2 rtl:space-x-reverse\">\r\n                    <button data-popover-target=\"popover-user-profile\" type=\"button\" data-popover-trigger=\"click\"\r\n                    class=\"mb-2 md:mb-0 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-3 py-2 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">Social</button>\r\n\r\n                    <div data-popover id=\"popover-user-profile\" role=\"tooltip\"\r\n                    class=\"absolute z-10 invisible px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700 flex gap-4\">\r\n                        <li class=\"hover:text-purple-600\">\r\n                            <a href=\"https://www.instagram.com\" target=\"_blank\"><i\r\n                                    class=\"fa-brands fa-instagram\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-blue-600\">\r\n                            <a href=\"https://www.facebook.com\" target=\"_blank\"><i class=\"fa-brands fa-facebook\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-gray-500\">\r\n                            <a href=\"https://www.tiktok.com\" target=\"_blank\"><i class=\"fa-brands fa-tiktok\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-blue-400\">\r\n                            <a href=\"https://www.twitter.com\" target=\"_blank\"><i class=\"fa-brands fa-twitter\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-blue-700\">\r\n                            <a href=\"https://www.linkedin.com\" target=\"_blank\"><i class=\"fa-brands fa-linkedin\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-red-500\">\r\n                            <a href=\"https://www.youtube.com\" target=\"_blank\"><i class=\"fa-brands fa-youtube\"></i></a>\r\n                        </li>\r\n                        <div data-popper-arrow></div>\r\n                    </div>\r\n                    <!-- <button data-popover-target=\"popover-user-profile\" type=\"button\"\r\n                        class=\"mb-2 md:mb-0 text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-3 py-2 text-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\">Social</button>\r\n                    <div data-popover-id=\"popover-user-profile\" role=\"tooltip\"\r\n                        class=\"absolute z-10 invisible px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700 flex gap-4\">\r\n                        <li class=\"hover:text-purple-600\">\r\n                            <a href=\"https://www.instagram.com\" target=\"_blank\"><i\r\n                                    class=\"fa-brands fa-instagram\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-blue-600\">\r\n                            <a href=\"https://www.facebook.com\" target=\"_blank\"><i class=\"fa-brands fa-facebook\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-gray-500\">\r\n                            <a href=\"https://www.tiktok.com\" target=\"_blank\"><i class=\"fa-brands fa-tiktok\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-blue-400\">\r\n                            <a href=\"https://www.twitter.com\" target=\"_blank\"><i class=\"fa-brands fa-twitter\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-blue-700\">\r\n                            <a href=\"https://www.linkedin.com\" target=\"_blank\"><i class=\"fa-brands fa-linkedin\"></i></a>\r\n                        </li>\r\n                        <li class=\"hover:text-red-500\">\r\n                            <a href=\"https://www.youtube.com\" target=\"_blank\"><i class=\"fa-brands fa-youtube\"></i></a>\r\n                        </li>\r\n                        <div class=\"tooltip-arrow\" data-popper-arrow></div>\r\n                    </div> -->\r\n                    <li class=\"!ms-0\">\r\n                        @if(_Authentication.userData.getValue() === null) {\r\n                        <button id=\"loginButton\"\r\n                            class=\"opacity-70 ms-4 md:ms-2 cursor-pointer hover:text-green-500 transition-all\"\r\n                            routerLink=\"login-page\">Login</button>\r\n                        <button id=\"registerButton\"\r\n                            class=\"opacity-70 ms-4 md:ms-2 cursor-pointer hover:text-green-500 transition-all\"\r\n                            routerLink=\"register-page\">Register</button>\r\n                        }\r\n                        @else {\r\n                        <button id=\"signoutButton\"\r\n                            class=\"opacity-70 ms-4 md:ms-2 cursor-pointer hover:text-green-500 transition-all\"\r\n                            (click)=\"_Authentication.logout()\">Logout</button>\r\n                        <span class=\"text-green-500 ms-2 relative cursor-pointer\" routerLink=\"cart-page\">\r\n                            <i class=\"text-lg fa-solid fa-cart-shopping\"></i>\r\n                            <span\r\n                                class=\"w-8 h-8 shadow-md rounded-[50%] bg-white grid place-content-center absolute -top-full end-1/2 translate-x-1/4 -translate-y-0.5\">{{_CartService.cartItemsCount.getValue()}}</span>\r\n                        </span>\r\n                        @if(_Wishlist.wishlistItemsCount.getValue()) {\r\n                        <span class=\"ms-2 cursor-pointer\" routerLink=\"/wishlist-page\"><i\r\n                                class=\"fa-solid fa-heart text-red-700\"></i></span>\r\n                        }\r\n                        @else {\r\n                        <span class=\"ms-2 cursor-pointer\" routerLink=\"/wishlist-page\"><i\r\n                                class=\"fa-regular fa-heart\"></i></span>\r\n                        }\r\n                        }\r\n                    </li>\r\n                </ul>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './footer.component.html',\r\n  styleUrl: './footer.component.scss'\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n","<div class=\"mt-24 bg-[#F2F3F0] py-12\">\r\n    <div class=\"container\">\r\n        <h4 class=\"opacity-80 text-2xl\">\r\n            Get the FreshCart app\r\n        </h4>\r\n        <p class=\"opacity-80\">We will send you a link, open it on your phone to download the app.</p>\r\n        <form class=\"flex flex-wrap mt-4 px-2 pb-8 border-b-2 border-solid border-gray-200\">\r\n            <div class=\"w-full md:w-10/12 2xl:w-11/12\">\r\n                <input type=\"text\" id=\"email\"\r\n                    class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-green-500 focus:border-green-500 block w-[98%] p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                    placeholder=\"Email ..\" required aria-required aria-label=\"Email\"/>\r\n            </div>\r\n            <button class=\"mt-4 md:mt-0 py-2 md:py-0 w-3/12 md:w-2/12 2xl:w-1/12 bg-[#0bac08] rounded-md text-white hover:bg-[#197717]\">Share App Link</button>\r\n        </form>\r\n        <div class=\"py-5 px-2 border-b-2 border-solid border-gray-200 flex flex-wrap justify-between\">\r\n            <ul class=\"list-unstyled flex flex-wrap align-items-baseline\">\r\n                <span>Payment Partners</span>\r\n                <li class=\"w-8 h-8 grid place-items-center ms-3\"><img class=\"w-full\" src=\"assets/images/amazon-pay.png\" alt=\"Amazon Pay\"></li>\r\n                <li class=\"w-8 h-8 grid place-items-center ms-3\"><img class=\"w-full\" src=\"assets/images/American-Express-Color.png\" alt=\"American Express\"></li>\r\n                <li class=\"w-8 h-8 grid place-items-center ms-3\"><img class=\"w-full\" src=\"assets/images/mastercard.webp\" alt=\"MasterCard\"></li>\r\n                <li class=\"w-8 h-8 grid place-items-center ms-3\"><img class=\"w-full\" src=\"assets/images/paypal.png\" alt=\"PayPal\"></li>\r\n            </ul>\r\n            <div class=\"flex flex-wrap align-items-center mt-4 md:mt-0\">\r\n                <span class=\"mt-1\">Get deliveries with FreshCart</span>\r\n                <button class=\"min-w-20 max-w-20 ms-2\"><img class=\"w-full\" src=\"assets/images/get-apple-store.png\" alt=\"Apple Store App\"></button>\r\n                <button class=\"min-w-20 max-w-20 ms-2\"><img class=\"w-full\" src=\"assets/images/get-google-play.png\" alt=\"Apple Store App\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\r\nimport { Router, RouterOutlet } from '@angular/router';\r\nimport { NavbarComponent } from \"./Components/Layout/navbar/navbar.component\";\r\nimport { FooterComponent } from './Components/Layout/footer/footer.component';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { AuthenticationService } from './Services/Authentication/authentication.service';\r\nimport { NgxSpinnerComponent } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, NavbarComponent, FooterComponent, NgxSpinnerComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'E-Commerce';\r\n  constructor(@Inject(PLATFORM_ID) platform_id:Object, _Router:Router, _Authentication:AuthenticationService) {\r\n    if(isPlatformBrowser(platform_id) && localStorage.getItem(\"userToken\")) {\r\n      _Authentication.decodeUserData();\r\n      _Router.navigate([`/${localStorage.getItem(\"currentPage\")}`]);\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner color=\"#006A4E\" type=\"ball-clip-rotate\"></ngx-spinner>\r\n<app-navbar></app-navbar>\r\n<div class=\"container min-h-screen\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<app-footer></app-footer>","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],"mappings":"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","names":["AnimationMetadataType","delay","Type","Width","merge","filter","animate","state","map","from","first","DOCUMENT","BaseURL","acc","FormControl","pageNumber","_c0","_c0","state","res","_c0","_c0","_forTrack0","_c0","_forTrack0","_forTrack0","_CategoriesService","_forTrack0","_BrandsService","_FlowbiteService","_CartService","_WishlistService","state","state","_ProductsService","_forTrack0","_PaymentService","_CartService","state","map","delay","delay","delay","LINE_START","transition","style","styleMetadata","delay","ast","element","value","trigger","player","index","state","i","map","style","trigger","delegate","fn","data","_c0","_c1","_NgxSpinnerService","_FlowbiteService","_CartService"],"x_google_ignoreList":[0,1,8,12,29,52,53,55]}